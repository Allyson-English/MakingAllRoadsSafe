{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 638,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import requests\n",
    "import json\n",
    "from bs4 import BeautifulSoup\n",
    "from time import sleep\n",
    "import random\n",
    "import plotly.graph_objs as go"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Combine all Uber Movement datasets for Nairobi 2019, speed data\n",
    "\n",
    "quarter_1 = pd.read_csv(r'Downloads/movement-speeds-quarterly-by-hod-nairobi-2019-Q1.csv')\n",
    "quarter_2 = pd.read_csv(r'Downloads/movement-speeds-quarterly-by-hod-nairobi-2019-Q2.csv')\n",
    "quarter_3 = pd.read_csv(r'Downloads/movement-speeds-quarterly-by-hod-nairobi-2019-Q3.csv')\n",
    "quarter_4 = pd.read_csv(r'Downloads/movement-speeds-quarterly-by-hod-nairobi-2019-Q4.csv')\n",
    "\n",
    "speeds_2019 = pd.concat([quarter_1, quarter_2, quarter_3, quarter_4])\n",
    "\n",
    "speeds_2019.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 5602 api requests to make.\n"
     ]
    }
   ],
   "source": [
    "print('There are', len(list(speeds_2019['osm_way_id'].unique())), 'api requests to make.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requests completed: 0\n",
      "Requests completed: 150\n",
      "Requests completed: 300\n"
     ]
    },
    {
     "ename": "ConnectionError",
     "evalue": "HTTPSConnectionPool(host='www.openstreetmap.org', port=443): Max retries exceeded with url: /api/0.6/way/26723454.json (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x119746210>: Failed to establish a new connection: [Errno 50] Network is down'))",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mOSError\u001b[0m                                   Traceback (most recent call last)",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/urllib3/connection.py\u001b[0m in \u001b[0;36m_new_conn\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    156\u001b[0m             conn = connection.create_connection(\n\u001b[0;32m--> 157\u001b[0;31m                 \u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_dns_host\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mport\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mextra_kw\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    158\u001b[0m             )\n",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/urllib3/util/connection.py\u001b[0m in \u001b[0;36mcreate_connection\u001b[0;34m(address, timeout, source_address, socket_options)\u001b[0m\n\u001b[1;32m     83\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0merr\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 84\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     85\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/urllib3/util/connection.py\u001b[0m in \u001b[0;36mcreate_connection\u001b[0;34m(address, timeout, source_address, socket_options)\u001b[0m\n\u001b[1;32m     73\u001b[0m                 \u001b[0msock\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbind\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msource_address\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 74\u001b[0;31m             \u001b[0msock\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconnect\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msa\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     75\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0msock\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mOSError\u001b[0m: [Errno 50] Network is down",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mNewConnectionError\u001b[0m                        Traceback (most recent call last)",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/urllib3/connectionpool.py\u001b[0m in \u001b[0;36murlopen\u001b[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)\u001b[0m\n\u001b[1;32m    671\u001b[0m                 \u001b[0mheaders\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mheaders\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 672\u001b[0;31m                 \u001b[0mchunked\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mchunked\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    673\u001b[0m             )\n",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/urllib3/connectionpool.py\u001b[0m in \u001b[0;36m_make_request\u001b[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)\u001b[0m\n\u001b[1;32m    375\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 376\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_conn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconn\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    377\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mSocketTimeout\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mBaseSSLError\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/urllib3/connectionpool.py\u001b[0m in \u001b[0;36m_validate_conn\u001b[0;34m(self, conn)\u001b[0m\n\u001b[1;32m    993\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"sock\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# AppEngine might not have  `.sock`\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 994\u001b[0;31m             \u001b[0mconn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconnect\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    995\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/urllib3/connection.py\u001b[0m in \u001b[0;36mconnect\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    299\u001b[0m         \u001b[0;31m# Add certificate verification\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 300\u001b[0;31m         \u001b[0mconn\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_new_conn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    301\u001b[0m         \u001b[0mhostname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhost\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/urllib3/connection.py\u001b[0m in \u001b[0;36m_new_conn\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    168\u001b[0m             raise NewConnectionError(\n\u001b[0;32m--> 169\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"Failed to establish a new connection: %s\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    170\u001b[0m             )\n",
      "\u001b[0;31mNewConnectionError\u001b[0m: <urllib3.connection.VerifiedHTTPSConnection object at 0x119746210>: Failed to establish a new connection: [Errno 50] Network is down",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mMaxRetryError\u001b[0m                             Traceback (most recent call last)",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/requests/adapters.py\u001b[0m in \u001b[0;36msend\u001b[0;34m(self, request, stream, timeout, verify, cert, proxies)\u001b[0m\n\u001b[1;32m    448\u001b[0m                     \u001b[0mretries\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmax_retries\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 449\u001b[0;31m                     \u001b[0mtimeout\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    450\u001b[0m                 )\n",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/urllib3/connectionpool.py\u001b[0m in \u001b[0;36murlopen\u001b[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)\u001b[0m\n\u001b[1;32m    719\u001b[0m             retries = retries.increment(\n\u001b[0;32m--> 720\u001b[0;31m                 \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merror\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_pool\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_stacktrace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexc_info\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    721\u001b[0m             )\n",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/urllib3/util/retry.py\u001b[0m in \u001b[0;36mincrement\u001b[0;34m(self, method, url, response, error, _pool, _stacktrace)\u001b[0m\n\u001b[1;32m    435\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mnew_retry\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_exhausted\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 436\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mMaxRetryError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_pool\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merror\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mResponseError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcause\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    437\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mMaxRetryError\u001b[0m: HTTPSConnectionPool(host='www.openstreetmap.org', port=443): Max retries exceeded with url: /api/0.6/way/26723454.json (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x119746210>: Failed to establish a new connection: [Errno 50] Network is down'))",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mConnectionError\u001b[0m                           Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-4-aa405b4ea978>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     10\u001b[0m         \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Requests completed:'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0midx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m     \u001b[0murl\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'https://www.openstreetmap.org/api/0.6/way/{}.json'\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mosm\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m     \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrequests\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mres\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstatus_code\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0;36m400\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m         \u001b[0mres\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mraise_for_status\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/requests/api.py\u001b[0m in \u001b[0;36mget\u001b[0;34m(url, params, **kwargs)\u001b[0m\n\u001b[1;32m     73\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     74\u001b[0m     \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msetdefault\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'allow_redirects'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 75\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mrequest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'get'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     76\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     77\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/requests/api.py\u001b[0m in \u001b[0;36mrequest\u001b[0;34m(method, url, **kwargs)\u001b[0m\n\u001b[1;32m     58\u001b[0m     \u001b[0;31m# cases, and look like a memory leak in others.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     59\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0msessions\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSession\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0msession\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 60\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msession\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     61\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/requests/sessions.py\u001b[0m in \u001b[0;36mrequest\u001b[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)\u001b[0m\n\u001b[1;32m    531\u001b[0m         }\n\u001b[1;32m    532\u001b[0m         \u001b[0msend_kwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msettings\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 533\u001b[0;31m         \u001b[0mresp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprep\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0msend_kwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    534\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    535\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mresp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/requests/sessions.py\u001b[0m in \u001b[0;36msend\u001b[0;34m(self, request, **kwargs)\u001b[0m\n\u001b[1;32m    644\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    645\u001b[0m         \u001b[0;31m# Send the request\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 646\u001b[0;31m         \u001b[0mr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0madapter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    647\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    648\u001b[0m         \u001b[0;31m# Total elapsed time of the request (approximately)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/requests/adapters.py\u001b[0m in \u001b[0;36msend\u001b[0;34m(self, request, stream, timeout, verify, cert, proxies)\u001b[0m\n\u001b[1;32m    514\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mSSLError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrequest\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    515\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 516\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mConnectionError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrequest\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    517\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    518\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mClosedPoolError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mConnectionError\u001b[0m: HTTPSConnectionPool(host='www.openstreetmap.org', port=443): Max retries exceeded with url: /api/0.6/way/26723454.json (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x119746210>: Failed to establish a new connection: [Errno 50] Network is down'))"
     ]
    }
   ],
   "source": [
    "# pull data (including road name, road type, one way street status, and surface type of road) from Open Street Map API Using OSM Way IDs, read out as dictionary\n",
    "# Note that the OSM API kicked me out after 378 hits (web scraping is not allowed) this data is saved below. \n",
    "\n",
    "\n",
    "osms = list(speeds_2019['osm_way_id'].unique())\n",
    "\n",
    "road_name = {}\n",
    "road_type = {}\n",
    "one_way = {}\n",
    "surface = {}\n",
    "\n",
    "for idx, osm in enumerate(osms):\n",
    "    if idx%150 == 0:\n",
    "        print('Requests completed:', idx)\n",
    "    url = 'https://www.openstreetmap.org/api/0.6/way/{}.json'.format(osm)\n",
    "    res = requests.get(url)\n",
    "    if res.status_code <= 400:\n",
    "        res.raise_for_status()\n",
    "        way_id_dict = json.loads(res.text)\n",
    "        elements_list = way_id_dict['elements']\n",
    "        elements = elements_list[0]\n",
    "        tags_dict = elements['tags']\n",
    "        name_of_road = tags_dict.get('name')\n",
    "        type_of_road = tags_dict.get('highway')\n",
    "        one_way_status = tags_dict.get('oneway')\n",
    "        road_surface = tags_dict.get('surface')\n",
    "        road_name.setdefault(osm, name_of_road)\n",
    "        road_type.setdefault(osm, type_of_road)\n",
    "        one_way.setdefault(osm, one_way_status)\n",
    "        surface.setdefault(osm, road_surface)\n",
    "        sleep(5)\n",
    "\n",
    "print(idx)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Convert all dictionaries to data frames \n",
    "\n",
    "roadname_df = pd.DataFrame.from_dict([road_name]).transpose()\n",
    "roadtype_df = pd.DataFrame.from_dict([road_type]).transpose()\n",
    "oneway_df = pd.DataFrame.from_dict([one_way]).transpose()\n",
    "surface_df = pd.DataFrame.from_dict([surface]).transpose()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# rename index of data frame \n",
    "\n",
    "roadname_df2 = roadname_df.reset_index().rename(columns={0:\"road_name\", \"index\": \"osm_way_id\"})\n",
    "\n",
    "roadtype_df2 = roadtype_df.reset_index().rename(columns={0:\"road_yype\", \"index\": \"osm_way_id\"})\n",
    "\n",
    "oneway_df2 = oneway_df.reset_index().rename(columns={0:\"one_way\", \"index\": \"osm_way_id\"})\n",
    "\n",
    "surface_df2 = surface_df.reset_index().rename(columns={0:\"surface\", \"index\": \"osm_way_id\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Merge data frames \n",
    "\n",
    "roads1 = pd.merge(roadname_df2, roadtype_df2, left_on='osm_way_id', right_on=\"osm_way_id\")\n",
    "roads2 = pd.merge(oneway_df2, surface_df2, left_on='osm_way_id', right_on=\"osm_way_id\")\n",
    "\n",
    "roads_api = pd.merge(roads1, roads2, left_on='osm_way_id', right_on=\"osm_way_id\")\n",
    "\n",
    "roads_api.head(2)\n",
    "\n",
    "roads_api.to_csv(r'/Users/allysonenglish/Desktop/Active/MARS/OSM_IDS_Round1.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "# merge data frames of OSM information with initial data from Movement and save as new file. \n",
    "\n",
    "Nairobi_osm_api = pd.merge(speeds_2019, roads_api, left_on='osm_way_id', right_on=\"osm_way_id\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# save new file as CSV. Also save the data frames from OSM information (did this twice because I happened to do it on two seperate occassions)\n",
    "\n",
    "output_path = r'/Users/allysonenglish/Desktop/Active/MARS/Nairobi_osm_api.csv'\n",
    "Nairobi_osm_api.to_csv(output_path, index=False)\n",
    "\n",
    "roads_api.to_csv(r'/Users/allysonenglish/Desktop/Active/MARS/OSM_IDS_Round1.csv', index=False)\n",
    "roads_api.to_csv(r'/Users/allysonenglish/Desktop/Active/MARS/OSM_dictionaries_1_378.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Of the OSM Way IDs collected, how many of these are in the top 100? Collected list shows what I have on file, top 100 list shows the top 100 from the dataset\n",
    "\n",
    "collected = osms[:378]\n",
    "\n",
    "freq_of_osm_ids = speeds_2019['osm_way_id'].value_counts()[:100]\n",
    "top_100_osm_ids = []\n",
    "\n",
    "for k in freq_of_osm_ids.keys():\n",
    "    top_100_osm_ids.append(k)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {},
   "outputs": [],
   "source": [
    "# The top 100 OSM Way IDs account for 591,560 trips (the dataset itself is about 2M so this is about on quarter of the dataset). Calculated this by:\n",
    "# (Saving new data frame from the top 100 most frequent osms in total dataset, then resetting index for ease of use and summing the data)\n",
    "\n",
    "frequency_df = pd.DataFrame(freq_of_osm_ids)\n",
    "frequency_count_df = frequency_df.reset_index().rename(columns={\"index\":\"osm_way_id\", \"osm_way_id\":\"count\"})\n",
    "frequency_count_df.sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "378"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Splits the osms I collected into two lists, those that are in the top 100 osms collected in the dataset and those which are not\n",
    "# Checks to make sure that the osms collected that map to the top 100 and the \n",
    "# osms collected that do not map to the top 100 add up to 378, which was the amount I collected fromt he API (they do)\n",
    "\n",
    "frequent_osms_collected = []\n",
    "extra_osms_collected = []\n",
    "\n",
    "for osm_collected in collected:\n",
    "    if osm_collected not in top_100_osm_ids:\n",
    "        extra_osms_collected.append(osm_collected)\n",
    "    else:\n",
    "        frequent_osms_collected.append(osm_collected)\n",
    "\n",
    "\n",
    "len(extra_osms_collected) + len(frequent_osms_collected)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "metadata": {},
   "outputs": [],
   "source": [
    "#lists the osms in the top 100 that I still need. \n",
    "# Checks to make sure that the osms collected in the top 100 and the osms still needed add up to 100\n",
    "\n",
    "osms_still_needed = []\n",
    "\n",
    "for osm_not_collected in top_100_osm_ids:\n",
    "    if osm_not_collected not in collected:\n",
    "        osms_still_needed.append(osm_not_collected)\n",
    "\n",
    "len(osms_still_needed) + len(frequent_osms_collected)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# END"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "47"
      ]
     },
     "execution_count": 163,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(osms_still_needed)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requests completed: 0\n",
      "Requests completed: 5\n",
      "Requests completed: 10\n",
      "Requests completed: 15\n",
      "Requests completed: 20\n",
      "Requests completed: 25\n",
      "Requests completed: 30\n",
      "Requests completed: 35\n",
      "Requests completed: 40\n",
      "Requests completed: 45\n"
     ]
    }
   ],
   "source": [
    "#Getting the remaining 47 osm ids in the top 100:\n",
    "\n",
    "road_name2 = {}\n",
    "road_type2 = {}\n",
    "one_way2 = {}\n",
    "surface2 = {}\n",
    "\n",
    "for idx, osm in enumerate(osms_still_needed):\n",
    "    if idx%5 == 0:\n",
    "        print('Requests completed:', idx)\n",
    "    url = 'https://www.openstreetmap.org/api/0.6/way/{}.json'.format(osm)\n",
    "    res = requests.get(url)\n",
    "    if res.status_code <= 400:\n",
    "        res.raise_for_status()\n",
    "        way_id_dict = json.loads(res.text)\n",
    "        elements_list = way_id_dict['elements']\n",
    "        elements = elements_list[0]\n",
    "        tags_dict = elements['tags']\n",
    "        name_of_road = tags_dict.get('name')\n",
    "        type_of_road = tags_dict.get('highway')\n",
    "        one_way_status = tags_dict.get('oneway')\n",
    "        road_surface = tags_dict.get('surface')\n",
    "        road_name2.setdefault(osm, name_of_road)\n",
    "        road_type2.setdefault(osm, type_of_road)\n",
    "        one_way2.setdefault(osm, one_way_status)\n",
    "        surface2.setdefault(osm, road_surface)\n",
    "        s = random.randint(25, 62)\n",
    "        sleep(s)\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Convert all dictionaries to data frames \n",
    "\n",
    "roadname_df3 = pd.DataFrame.from_dict([road_name2]).transpose()\n",
    "roadtype_df3 = pd.DataFrame.from_dict([road_type2]).transpose()\n",
    "oneway_df3 = pd.DataFrame.from_dict([one_way2]).transpose()\n",
    "surface_df3 = pd.DataFrame.from_dict([surface2]).transpose()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "metadata": {},
   "outputs": [],
   "source": [
    "# rename index of data frame \n",
    "\n",
    "roadname_df4 = roadname_df3.reset_index().rename(columns={0:\"road_name\", \"index\": \"osm_way_id\"})\n",
    "\n",
    "roadtype_df4 = roadtype_df3.reset_index().rename(columns={0:\"road_type\", \"index\": \"osm_way_id\"})\n",
    "\n",
    "oneway_df4 = oneway_df3.reset_index().rename(columns={0:\"one_way\", \"index\": \"osm_way_id\"})\n",
    "\n",
    "surface_df4 = surface_df3.reset_index().rename(columns={0:\"surface\", \"index\": \"osm_way_id\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 232,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Merge data frames \n",
    "\n",
    "roads3 = pd.merge(roadname_df4, roadtype_df4, left_on='osm_way_id', right_on=\"osm_way_id\")\n",
    "roads4 = pd.merge(oneway_df4, surface_df4, left_on='osm_way_id', right_on=\"osm_way_id\")\n",
    "\n",
    "roads_api2 = pd.merge(roads3, roads4, left_on='osm_way_id', right_on=\"osm_way_id\")\n",
    "roads_api2.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "metadata": {},
   "outputs": [],
   "source": [
    "# merge data frames of OSM information with initial data from Movement and save as new file. \n",
    "\n",
    "Nairobi_osm_remaining_top = pd.merge(speeds_2019, roads_api2, left_on='osm_way_id', right_on=\"osm_way_id\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 235,
   "metadata": {},
   "outputs": [],
   "source": [
    "# save new file as CSV. Also save the data frames from OSM information\n",
    "\n",
    "output_path = r'/Users/allysonenglish/Desktop/Active/MARS/Remaining_top_osms_Nairobi.csv'\n",
    "Nairobi_osm_remaining_top.to_csv(output_path, index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Scrap working/ planning type of analysis to do "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 236,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "226246"
      ]
     },
     "execution_count": 236,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(Nairobi_osm_remaining_top)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 237,
   "metadata": {},
   "outputs": [],
   "source": [
    "check_for_remaining_osms = list(Nairobi_osm_remaining_top['osm_way_id'].unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 238,
   "metadata": {},
   "outputs": [],
   "source": [
    "combined_datasets = pd.concat([Nairobi_osm_remaining_top, Nairobi_osm_api])\n",
    "combined_datasets.drop('road_yype', axis=1, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 239,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "800869"
      ]
     },
     "execution_count": 239,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(combined_datasets)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 240,
   "metadata": {},
   "outputs": [],
   "source": [
    "freq_ids_in_top = combined_datasets['osm_way_id'].value_counts()[:100]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 241,
   "metadata": {},
   "outputs": [],
   "source": [
    "top_ids = []\n",
    "\n",
    "for k in freq_ids_in_top.keys():\n",
    "    top_ids.append(k)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 275,
   "metadata": {},
   "outputs": [],
   "source": [
    "df2 = combined_datasets.groupby('road_name')['road_name'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 279,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.series.Series"
      ]
     },
     "execution_count": 279,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(df2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 318,
   "metadata": {},
   "outputs": [],
   "source": [
    "working_data_7_days = combined_datasets.drop(['segment_id', 'start_junction_id', 'end_junction_id', 'osm_start_node_id', 'osm_end_node_id', 'speed_kph_p50'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 319,
   "metadata": {},
   "outputs": [],
   "source": [
    "working_data_7_days.to_csv(r'/Users/allysonenglish/Desktop/Active/MARS/working_data_7_days.csv', index = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 320,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>quarter</th>\n",
       "      <th>hour_of_day</th>\n",
       "      <th>osm_way_id</th>\n",
       "      <th>speed_kph_mean</th>\n",
       "      <th>speed_kph_stddev</th>\n",
       "      <th>speed_kph_p85</th>\n",
       "      <th>road_name</th>\n",
       "      <th>road_type</th>\n",
       "      <th>one_way</th>\n",
       "      <th>surface</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>40317987</td>\n",
       "      <td>29.503</td>\n",
       "      <td>8.988</td>\n",
       "      <td>35.628</td>\n",
       "      <td>Mumias South Road</td>\n",
       "      <td>tertiary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>40317987</td>\n",
       "      <td>35.116</td>\n",
       "      <td>7.875</td>\n",
       "      <td>43.346</td>\n",
       "      <td>Mumias South Road</td>\n",
       "      <td>tertiary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>40317987</td>\n",
       "      <td>36.172</td>\n",
       "      <td>8.356</td>\n",
       "      <td>43.782</td>\n",
       "      <td>Mumias South Road</td>\n",
       "      <td>tertiary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>40317987</td>\n",
       "      <td>33.293</td>\n",
       "      <td>11.836</td>\n",
       "      <td>41.058</td>\n",
       "      <td>Mumias South Road</td>\n",
       "      <td>tertiary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>40317987</td>\n",
       "      <td>36.660</td>\n",
       "      <td>10.839</td>\n",
       "      <td>44.905</td>\n",
       "      <td>Mumias South Road</td>\n",
       "      <td>tertiary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   year  quarter  hour_of_day  osm_way_id  speed_kph_mean  speed_kph_stddev  \\\n",
       "0  2019        1           19    40317987          29.503             8.988   \n",
       "1  2019        1            9    40317987          35.116             7.875   \n",
       "2  2019        1           23    40317987          36.172             8.356   \n",
       "3  2019        1           13    40317987          33.293            11.836   \n",
       "4  2019        1            6    40317987          36.660            10.839   \n",
       "\n",
       "   speed_kph_p85          road_name road_type one_way surface  \n",
       "0         35.628  Mumias South Road  tertiary    None    None  \n",
       "1         43.346  Mumias South Road  tertiary    None    None  \n",
       "2         43.782  Mumias South Road  tertiary    None    None  \n",
       "3         41.058  Mumias South Road  tertiary    None    None  \n",
       "4         44.905  Mumias South Road  tertiary    None    None  "
      ]
     },
     "execution_count": 320,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "working_data_7_days.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 315,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>road_name</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1st Ngong Avenue</th>\n",
       "      <td>448.0</td>\n",
       "      <td>21.695480</td>\n",
       "      <td>4.220722</td>\n",
       "      <td>10.634</td>\n",
       "      <td>19.50000</td>\n",
       "      <td>21.9770</td>\n",
       "      <td>24.34425</td>\n",
       "      <td>40.115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1st Parklands Avenue</th>\n",
       "      <td>2037.0</td>\n",
       "      <td>32.224387</td>\n",
       "      <td>4.829897</td>\n",
       "      <td>15.994</td>\n",
       "      <td>29.20700</td>\n",
       "      <td>32.5170</td>\n",
       "      <td>35.59300</td>\n",
       "      <td>46.927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3rd Avenue Ngong</th>\n",
       "      <td>194.0</td>\n",
       "      <td>19.459861</td>\n",
       "      <td>2.128921</td>\n",
       "      <td>15.913</td>\n",
       "      <td>17.78050</td>\n",
       "      <td>18.8400</td>\n",
       "      <td>20.99325</td>\n",
       "      <td>25.482</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Acacia Main Feeder Road</th>\n",
       "      <td>13.0</td>\n",
       "      <td>17.694692</td>\n",
       "      <td>2.060723</td>\n",
       "      <td>13.769</td>\n",
       "      <td>17.01000</td>\n",
       "      <td>18.1290</td>\n",
       "      <td>18.80100</td>\n",
       "      <td>21.089</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Airport North Road</th>\n",
       "      <td>1231.0</td>\n",
       "      <td>44.504297</td>\n",
       "      <td>13.053598</td>\n",
       "      <td>14.641</td>\n",
       "      <td>36.49950</td>\n",
       "      <td>43.8250</td>\n",
       "      <td>52.93600</td>\n",
       "      <td>73.466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wangunyu Road</th>\n",
       "      <td>5.0</td>\n",
       "      <td>13.339400</td>\n",
       "      <td>1.815941</td>\n",
       "      <td>11.745</td>\n",
       "      <td>11.78700</td>\n",
       "      <td>12.8680</td>\n",
       "      <td>14.29100</td>\n",
       "      <td>16.006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Westlands Red Hill Road</th>\n",
       "      <td>282.0</td>\n",
       "      <td>62.646067</td>\n",
       "      <td>5.918389</td>\n",
       "      <td>48.504</td>\n",
       "      <td>60.96025</td>\n",
       "      <td>63.9185</td>\n",
       "      <td>66.87225</td>\n",
       "      <td>71.304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Westlands Road</th>\n",
       "      <td>1978.0</td>\n",
       "      <td>24.982488</td>\n",
       "      <td>5.741702</td>\n",
       "      <td>9.115</td>\n",
       "      <td>20.87900</td>\n",
       "      <td>24.9675</td>\n",
       "      <td>29.01750</td>\n",
       "      <td>45.669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Woodvale Drive</th>\n",
       "      <td>783.0</td>\n",
       "      <td>27.399040</td>\n",
       "      <td>5.464659</td>\n",
       "      <td>16.485</td>\n",
       "      <td>23.54600</td>\n",
       "      <td>25.6840</td>\n",
       "      <td>32.20300</td>\n",
       "      <td>43.748</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Workshop Road</th>\n",
       "      <td>325.0</td>\n",
       "      <td>21.818428</td>\n",
       "      <td>5.034080</td>\n",
       "      <td>11.624</td>\n",
       "      <td>18.41300</td>\n",
       "      <td>20.9600</td>\n",
       "      <td>24.09400</td>\n",
       "      <td>43.289</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>229 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                          count       mean        std     min       25%  \\\n",
       "road_name                                                                 \n",
       "1st Ngong Avenue          448.0  21.695480   4.220722  10.634  19.50000   \n",
       "1st Parklands Avenue     2037.0  32.224387   4.829897  15.994  29.20700   \n",
       "3rd Avenue Ngong          194.0  19.459861   2.128921  15.913  17.78050   \n",
       "Acacia Main Feeder Road    13.0  17.694692   2.060723  13.769  17.01000   \n",
       "Airport North Road       1231.0  44.504297  13.053598  14.641  36.49950   \n",
       "...                         ...        ...        ...     ...       ...   \n",
       "Wangunyu Road               5.0  13.339400   1.815941  11.745  11.78700   \n",
       "Westlands Red Hill Road   282.0  62.646067   5.918389  48.504  60.96025   \n",
       "Westlands Road           1978.0  24.982488   5.741702   9.115  20.87900   \n",
       "Woodvale Drive            783.0  27.399040   5.464659  16.485  23.54600   \n",
       "Workshop Road             325.0  21.818428   5.034080  11.624  18.41300   \n",
       "\n",
       "                             50%       75%     max  \n",
       "road_name                                           \n",
       "1st Ngong Avenue         21.9770  24.34425  40.115  \n",
       "1st Parklands Avenue     32.5170  35.59300  46.927  \n",
       "3rd Avenue Ngong         18.8400  20.99325  25.482  \n",
       "Acacia Main Feeder Road  18.1290  18.80100  21.089  \n",
       "Airport North Road       43.8250  52.93600  73.466  \n",
       "...                          ...       ...     ...  \n",
       "Wangunyu Road            12.8680  14.29100  16.006  \n",
       "Westlands Red Hill Road  63.9185  66.87225  71.304  \n",
       "Westlands Road           24.9675  29.01750  45.669  \n",
       "Woodvale Drive           25.6840  32.20300  43.748  \n",
       "Workshop Road            20.9600  24.09400  43.289  \n",
       "\n",
       "[229 rows x 8 columns]"
      ]
     },
     "execution_count": 315,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "working_data_7_days.groupby('road_name')['speed_kph_mean'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 403,
   "metadata": {},
   "outputs": [],
   "source": [
    "most_popular_roads = working_data_7_days[['road_name','speed_kph_mean']].groupby(['road_name'])['speed_kph_mean'] \\\n",
    "                            .count() \\\n",
    "                            .reset_index(name='count') \\\n",
    "                            .sort_values(['count'], ascending=False) \\\n",
    "                            .head(15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 451,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "121                  Limuru Road\n",
       "80                 Kangundo Road\n",
       "128                  Magadi Road\n",
       "35                Eastern Bypass\n",
       "79                   Kamiti Road\n",
       "170                   Ngong Road\n",
       "46              Forest Line Road\n",
       "57                   Gitaru Road\n",
       "93                   Kiambu Road\n",
       "29                Dagoretti Road\n",
       "55                Getathuru Road\n",
       "124            Lower Kabete Road\n",
       "97     Kihara-Gachie-Karura Road\n",
       "12                     Boma Road\n",
       "172              Northern Bypass\n",
       "Name: road_name, dtype: object"
      ]
     },
     "execution_count": 451,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "most_popular_roads['road_name']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 406,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "284796"
      ]
     },
     "execution_count": 406,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "most_popular_roads['count'].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 507,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['LimuruRoad',\n",
       " 'KangundoRoad',\n",
       " 'MagadiRoad',\n",
       " 'EasternBypass',\n",
       " 'KamitiRoad',\n",
       " 'NgongRoad',\n",
       " 'ForestLineRoad',\n",
       " 'GitaruRoad',\n",
       " 'KiambuRoad',\n",
       " 'DagorettiRoad',\n",
       " 'GetathuruRoad',\n",
       " 'LowerKabeteRoad',\n",
       " 'Kihara-Gachie-KaruraRoad',\n",
       " 'BomaRoad',\n",
       " 'NorthernBypass']"
      ]
     },
     "execution_count": 507,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "subset_df_names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 501,
   "metadata": {},
   "outputs": [],
   "source": [
    "subset_df_names = []\n",
    "popular_road_dict = {}\n",
    "\n",
    "for name in most_popular_roads['road_name']:\n",
    "\n",
    "    bool_mask = working_data_7_days['road_name'].str.contains(name)\n",
    "    bool_mask = bool_mask.fillna(False)\n",
    "    \n",
    "    name = name.replace(' ','')\n",
    "    subset_df_names.append(name)\n",
    "    \n",
    "    popular_road_dict.setdefault(name, working_data_7_days[bool_mask])\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 511,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LimuruRoad\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1954.0</td>\n",
       "      <td>45.691633</td>\n",
       "      <td>10.238275</td>\n",
       "      <td>13.611</td>\n",
       "      <td>39.63175</td>\n",
       "      <td>46.8275</td>\n",
       "      <td>52.98550</td>\n",
       "      <td>74.429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1852.0</td>\n",
       "      <td>46.687529</td>\n",
       "      <td>10.423705</td>\n",
       "      <td>14.332</td>\n",
       "      <td>40.62225</td>\n",
       "      <td>47.4925</td>\n",
       "      <td>53.63925</td>\n",
       "      <td>73.947</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1543.0</td>\n",
       "      <td>45.290056</td>\n",
       "      <td>9.729029</td>\n",
       "      <td>15.022</td>\n",
       "      <td>39.76050</td>\n",
       "      <td>47.0590</td>\n",
       "      <td>52.15850</td>\n",
       "      <td>67.355</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1230.0</td>\n",
       "      <td>45.043243</td>\n",
       "      <td>9.688302</td>\n",
       "      <td>15.083</td>\n",
       "      <td>39.43850</td>\n",
       "      <td>46.7030</td>\n",
       "      <td>51.72875</td>\n",
       "      <td>68.496</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1573.0</td>\n",
       "      <td>46.854442</td>\n",
       "      <td>10.872560</td>\n",
       "      <td>15.634</td>\n",
       "      <td>40.87400</td>\n",
       "      <td>47.5610</td>\n",
       "      <td>53.21400</td>\n",
       "      <td>81.181</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1706.0</td>\n",
       "      <td>45.179462</td>\n",
       "      <td>9.705974</td>\n",
       "      <td>15.090</td>\n",
       "      <td>39.90000</td>\n",
       "      <td>46.3080</td>\n",
       "      <td>51.38975</td>\n",
       "      <td>71.967</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2046.0</td>\n",
       "      <td>44.957412</td>\n",
       "      <td>10.682450</td>\n",
       "      <td>13.035</td>\n",
       "      <td>38.50400</td>\n",
       "      <td>45.2640</td>\n",
       "      <td>52.69150</td>\n",
       "      <td>69.747</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2200.0</td>\n",
       "      <td>45.042610</td>\n",
       "      <td>11.734496</td>\n",
       "      <td>12.360</td>\n",
       "      <td>37.41275</td>\n",
       "      <td>45.4500</td>\n",
       "      <td>54.09050</td>\n",
       "      <td>76.903</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2435.0</td>\n",
       "      <td>45.921639</td>\n",
       "      <td>13.027500</td>\n",
       "      <td>11.292</td>\n",
       "      <td>37.03550</td>\n",
       "      <td>46.2410</td>\n",
       "      <td>55.37150</td>\n",
       "      <td>82.850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2437.0</td>\n",
       "      <td>44.900189</td>\n",
       "      <td>12.438823</td>\n",
       "      <td>11.796</td>\n",
       "      <td>36.24300</td>\n",
       "      <td>45.3060</td>\n",
       "      <td>53.76400</td>\n",
       "      <td>82.820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2604.0</td>\n",
       "      <td>44.928599</td>\n",
       "      <td>12.828674</td>\n",
       "      <td>10.876</td>\n",
       "      <td>36.16400</td>\n",
       "      <td>45.2805</td>\n",
       "      <td>54.34825</td>\n",
       "      <td>81.697</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2582.0</td>\n",
       "      <td>44.944126</td>\n",
       "      <td>13.346975</td>\n",
       "      <td>10.354</td>\n",
       "      <td>35.99825</td>\n",
       "      <td>45.4480</td>\n",
       "      <td>54.62625</td>\n",
       "      <td>84.420</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2593.0</td>\n",
       "      <td>44.816308</td>\n",
       "      <td>13.166167</td>\n",
       "      <td>10.312</td>\n",
       "      <td>35.83600</td>\n",
       "      <td>45.6280</td>\n",
       "      <td>53.96400</td>\n",
       "      <td>82.556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2603.0</td>\n",
       "      <td>44.323326</td>\n",
       "      <td>13.105458</td>\n",
       "      <td>9.975</td>\n",
       "      <td>35.51200</td>\n",
       "      <td>44.8160</td>\n",
       "      <td>53.52650</td>\n",
       "      <td>82.916</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2665.0</td>\n",
       "      <td>44.053709</td>\n",
       "      <td>13.124142</td>\n",
       "      <td>9.456</td>\n",
       "      <td>35.09800</td>\n",
       "      <td>44.7420</td>\n",
       "      <td>53.59700</td>\n",
       "      <td>82.100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2679.0</td>\n",
       "      <td>43.424427</td>\n",
       "      <td>13.201445</td>\n",
       "      <td>9.099</td>\n",
       "      <td>34.37300</td>\n",
       "      <td>43.7560</td>\n",
       "      <td>53.16550</td>\n",
       "      <td>80.563</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2650.0</td>\n",
       "      <td>43.098178</td>\n",
       "      <td>13.024794</td>\n",
       "      <td>8.937</td>\n",
       "      <td>33.94600</td>\n",
       "      <td>43.5840</td>\n",
       "      <td>52.84725</td>\n",
       "      <td>82.054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2643.0</td>\n",
       "      <td>41.516399</td>\n",
       "      <td>13.200587</td>\n",
       "      <td>8.788</td>\n",
       "      <td>32.43500</td>\n",
       "      <td>41.7050</td>\n",
       "      <td>51.09100</td>\n",
       "      <td>85.344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2624.0</td>\n",
       "      <td>40.341156</td>\n",
       "      <td>13.157448</td>\n",
       "      <td>7.358</td>\n",
       "      <td>31.34950</td>\n",
       "      <td>40.2795</td>\n",
       "      <td>49.51950</td>\n",
       "      <td>80.004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2593.0</td>\n",
       "      <td>36.839526</td>\n",
       "      <td>11.175701</td>\n",
       "      <td>6.491</td>\n",
       "      <td>29.20700</td>\n",
       "      <td>37.0550</td>\n",
       "      <td>44.48700</td>\n",
       "      <td>72.453</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2518.0</td>\n",
       "      <td>38.817930</td>\n",
       "      <td>10.840121</td>\n",
       "      <td>7.994</td>\n",
       "      <td>31.51900</td>\n",
       "      <td>39.0890</td>\n",
       "      <td>46.51825</td>\n",
       "      <td>69.502</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>2387.0</td>\n",
       "      <td>40.923516</td>\n",
       "      <td>10.353270</td>\n",
       "      <td>9.396</td>\n",
       "      <td>33.89050</td>\n",
       "      <td>41.2270</td>\n",
       "      <td>48.17200</td>\n",
       "      <td>75.478</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>2255.0</td>\n",
       "      <td>42.742994</td>\n",
       "      <td>9.902503</td>\n",
       "      <td>11.966</td>\n",
       "      <td>36.68650</td>\n",
       "      <td>43.2660</td>\n",
       "      <td>50.21950</td>\n",
       "      <td>72.675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>2139.0</td>\n",
       "      <td>44.855764</td>\n",
       "      <td>9.823992</td>\n",
       "      <td>13.002</td>\n",
       "      <td>39.19450</td>\n",
       "      <td>45.7750</td>\n",
       "      <td>52.40950</td>\n",
       "      <td>67.132</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              count       mean        std     min       25%      50%  \\\n",
       "hour_of_day                                                            \n",
       "0            1954.0  45.691633  10.238275  13.611  39.63175  46.8275   \n",
       "1            1852.0  46.687529  10.423705  14.332  40.62225  47.4925   \n",
       "2            1543.0  45.290056   9.729029  15.022  39.76050  47.0590   \n",
       "3            1230.0  45.043243   9.688302  15.083  39.43850  46.7030   \n",
       "4            1573.0  46.854442  10.872560  15.634  40.87400  47.5610   \n",
       "5            1706.0  45.179462   9.705974  15.090  39.90000  46.3080   \n",
       "6            2046.0  44.957412  10.682450  13.035  38.50400  45.2640   \n",
       "7            2200.0  45.042610  11.734496  12.360  37.41275  45.4500   \n",
       "8            2435.0  45.921639  13.027500  11.292  37.03550  46.2410   \n",
       "9            2437.0  44.900189  12.438823  11.796  36.24300  45.3060   \n",
       "10           2604.0  44.928599  12.828674  10.876  36.16400  45.2805   \n",
       "11           2582.0  44.944126  13.346975  10.354  35.99825  45.4480   \n",
       "12           2593.0  44.816308  13.166167  10.312  35.83600  45.6280   \n",
       "13           2603.0  44.323326  13.105458   9.975  35.51200  44.8160   \n",
       "14           2665.0  44.053709  13.124142   9.456  35.09800  44.7420   \n",
       "15           2679.0  43.424427  13.201445   9.099  34.37300  43.7560   \n",
       "16           2650.0  43.098178  13.024794   8.937  33.94600  43.5840   \n",
       "17           2643.0  41.516399  13.200587   8.788  32.43500  41.7050   \n",
       "18           2624.0  40.341156  13.157448   7.358  31.34950  40.2795   \n",
       "19           2593.0  36.839526  11.175701   6.491  29.20700  37.0550   \n",
       "20           2518.0  38.817930  10.840121   7.994  31.51900  39.0890   \n",
       "21           2387.0  40.923516  10.353270   9.396  33.89050  41.2270   \n",
       "22           2255.0  42.742994   9.902503  11.966  36.68650  43.2660   \n",
       "23           2139.0  44.855764   9.823992  13.002  39.19450  45.7750   \n",
       "\n",
       "                  75%     max  \n",
       "hour_of_day                    \n",
       "0            52.98550  74.429  \n",
       "1            53.63925  73.947  \n",
       "2            52.15850  67.355  \n",
       "3            51.72875  68.496  \n",
       "4            53.21400  81.181  \n",
       "5            51.38975  71.967  \n",
       "6            52.69150  69.747  \n",
       "7            54.09050  76.903  \n",
       "8            55.37150  82.850  \n",
       "9            53.76400  82.820  \n",
       "10           54.34825  81.697  \n",
       "11           54.62625  84.420  \n",
       "12           53.96400  82.556  \n",
       "13           53.52650  82.916  \n",
       "14           53.59700  82.100  \n",
       "15           53.16550  80.563  \n",
       "16           52.84725  82.054  \n",
       "17           51.09100  85.344  \n",
       "18           49.51950  80.004  \n",
       "19           44.48700  72.453  \n",
       "20           46.51825  69.502  \n",
       "21           48.17200  75.478  \n",
       "22           50.21950  72.675  \n",
       "23           52.40950  67.132  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "KangundoRoad\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1290.0</td>\n",
       "      <td>42.209078</td>\n",
       "      <td>11.427974</td>\n",
       "      <td>16.472</td>\n",
       "      <td>32.40325</td>\n",
       "      <td>42.8390</td>\n",
       "      <td>51.78675</td>\n",
       "      <td>68.854</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1127.0</td>\n",
       "      <td>42.840492</td>\n",
       "      <td>11.710937</td>\n",
       "      <td>17.235</td>\n",
       "      <td>33.17050</td>\n",
       "      <td>43.6070</td>\n",
       "      <td>51.88600</td>\n",
       "      <td>72.554</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1043.0</td>\n",
       "      <td>42.439594</td>\n",
       "      <td>11.641094</td>\n",
       "      <td>16.507</td>\n",
       "      <td>32.18300</td>\n",
       "      <td>43.1170</td>\n",
       "      <td>51.70300</td>\n",
       "      <td>68.871</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>764.0</td>\n",
       "      <td>41.027501</td>\n",
       "      <td>10.888691</td>\n",
       "      <td>16.836</td>\n",
       "      <td>31.47650</td>\n",
       "      <td>42.1940</td>\n",
       "      <td>49.33075</td>\n",
       "      <td>68.357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>977.0</td>\n",
       "      <td>42.897288</td>\n",
       "      <td>11.466512</td>\n",
       "      <td>16.783</td>\n",
       "      <td>33.09800</td>\n",
       "      <td>44.0620</td>\n",
       "      <td>52.09800</td>\n",
       "      <td>68.723</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>987.0</td>\n",
       "      <td>40.609779</td>\n",
       "      <td>11.169153</td>\n",
       "      <td>16.859</td>\n",
       "      <td>31.84100</td>\n",
       "      <td>41.1610</td>\n",
       "      <td>49.38250</td>\n",
       "      <td>67.677</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1074.0</td>\n",
       "      <td>40.447112</td>\n",
       "      <td>12.490020</td>\n",
       "      <td>15.240</td>\n",
       "      <td>30.09825</td>\n",
       "      <td>40.1105</td>\n",
       "      <td>50.52325</td>\n",
       "      <td>71.913</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1207.0</td>\n",
       "      <td>39.576830</td>\n",
       "      <td>12.878813</td>\n",
       "      <td>14.141</td>\n",
       "      <td>29.43400</td>\n",
       "      <td>39.1420</td>\n",
       "      <td>50.75700</td>\n",
       "      <td>74.041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1270.0</td>\n",
       "      <td>38.465948</td>\n",
       "      <td>12.955421</td>\n",
       "      <td>12.933</td>\n",
       "      <td>27.66025</td>\n",
       "      <td>38.1540</td>\n",
       "      <td>49.42075</td>\n",
       "      <td>73.245</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1393.0</td>\n",
       "      <td>38.008190</td>\n",
       "      <td>13.239883</td>\n",
       "      <td>12.360</td>\n",
       "      <td>27.69100</td>\n",
       "      <td>37.3760</td>\n",
       "      <td>48.45300</td>\n",
       "      <td>74.504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1460.0</td>\n",
       "      <td>37.285979</td>\n",
       "      <td>13.084774</td>\n",
       "      <td>10.575</td>\n",
       "      <td>27.01975</td>\n",
       "      <td>36.5940</td>\n",
       "      <td>47.54200</td>\n",
       "      <td>72.261</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1446.0</td>\n",
       "      <td>36.843258</td>\n",
       "      <td>12.899991</td>\n",
       "      <td>10.333</td>\n",
       "      <td>26.56150</td>\n",
       "      <td>36.3975</td>\n",
       "      <td>46.97200</td>\n",
       "      <td>68.750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1438.0</td>\n",
       "      <td>36.827673</td>\n",
       "      <td>12.388830</td>\n",
       "      <td>11.546</td>\n",
       "      <td>26.72025</td>\n",
       "      <td>36.7425</td>\n",
       "      <td>47.24475</td>\n",
       "      <td>74.113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1473.0</td>\n",
       "      <td>37.102325</td>\n",
       "      <td>12.495212</td>\n",
       "      <td>11.505</td>\n",
       "      <td>27.14500</td>\n",
       "      <td>36.8490</td>\n",
       "      <td>46.86200</td>\n",
       "      <td>72.017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1460.0</td>\n",
       "      <td>36.457147</td>\n",
       "      <td>12.480038</td>\n",
       "      <td>11.827</td>\n",
       "      <td>26.14125</td>\n",
       "      <td>36.5510</td>\n",
       "      <td>46.22225</td>\n",
       "      <td>73.829</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1440.0</td>\n",
       "      <td>35.947473</td>\n",
       "      <td>12.504290</td>\n",
       "      <td>10.746</td>\n",
       "      <td>25.67925</td>\n",
       "      <td>35.7375</td>\n",
       "      <td>46.11275</td>\n",
       "      <td>69.072</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1464.0</td>\n",
       "      <td>35.604509</td>\n",
       "      <td>12.566361</td>\n",
       "      <td>9.999</td>\n",
       "      <td>25.71375</td>\n",
       "      <td>35.6650</td>\n",
       "      <td>45.57775</td>\n",
       "      <td>69.814</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1408.0</td>\n",
       "      <td>34.111471</td>\n",
       "      <td>12.467218</td>\n",
       "      <td>9.495</td>\n",
       "      <td>24.14350</td>\n",
       "      <td>34.2285</td>\n",
       "      <td>43.83850</td>\n",
       "      <td>71.387</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1397.0</td>\n",
       "      <td>32.496772</td>\n",
       "      <td>11.868668</td>\n",
       "      <td>8.325</td>\n",
       "      <td>23.08400</td>\n",
       "      <td>32.2110</td>\n",
       "      <td>42.15500</td>\n",
       "      <td>65.742</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1374.0</td>\n",
       "      <td>30.918531</td>\n",
       "      <td>11.161815</td>\n",
       "      <td>6.394</td>\n",
       "      <td>21.92525</td>\n",
       "      <td>30.9490</td>\n",
       "      <td>39.86250</td>\n",
       "      <td>59.747</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1431.0</td>\n",
       "      <td>33.968717</td>\n",
       "      <td>11.240708</td>\n",
       "      <td>7.978</td>\n",
       "      <td>25.51350</td>\n",
       "      <td>34.0890</td>\n",
       "      <td>42.88750</td>\n",
       "      <td>63.951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1385.0</td>\n",
       "      <td>36.366763</td>\n",
       "      <td>10.933263</td>\n",
       "      <td>10.821</td>\n",
       "      <td>27.92300</td>\n",
       "      <td>36.6760</td>\n",
       "      <td>45.28500</td>\n",
       "      <td>68.405</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1387.0</td>\n",
       "      <td>38.912431</td>\n",
       "      <td>11.101271</td>\n",
       "      <td>15.040</td>\n",
       "      <td>30.39750</td>\n",
       "      <td>38.9810</td>\n",
       "      <td>48.03500</td>\n",
       "      <td>66.985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>1329.0</td>\n",
       "      <td>41.192986</td>\n",
       "      <td>11.261259</td>\n",
       "      <td>16.186</td>\n",
       "      <td>31.99100</td>\n",
       "      <td>41.7750</td>\n",
       "      <td>50.66300</td>\n",
       "      <td>68.687</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              count       mean        std     min       25%      50%  \\\n",
       "hour_of_day                                                            \n",
       "0            1290.0  42.209078  11.427974  16.472  32.40325  42.8390   \n",
       "1            1127.0  42.840492  11.710937  17.235  33.17050  43.6070   \n",
       "2            1043.0  42.439594  11.641094  16.507  32.18300  43.1170   \n",
       "3             764.0  41.027501  10.888691  16.836  31.47650  42.1940   \n",
       "4             977.0  42.897288  11.466512  16.783  33.09800  44.0620   \n",
       "5             987.0  40.609779  11.169153  16.859  31.84100  41.1610   \n",
       "6            1074.0  40.447112  12.490020  15.240  30.09825  40.1105   \n",
       "7            1207.0  39.576830  12.878813  14.141  29.43400  39.1420   \n",
       "8            1270.0  38.465948  12.955421  12.933  27.66025  38.1540   \n",
       "9            1393.0  38.008190  13.239883  12.360  27.69100  37.3760   \n",
       "10           1460.0  37.285979  13.084774  10.575  27.01975  36.5940   \n",
       "11           1446.0  36.843258  12.899991  10.333  26.56150  36.3975   \n",
       "12           1438.0  36.827673  12.388830  11.546  26.72025  36.7425   \n",
       "13           1473.0  37.102325  12.495212  11.505  27.14500  36.8490   \n",
       "14           1460.0  36.457147  12.480038  11.827  26.14125  36.5510   \n",
       "15           1440.0  35.947473  12.504290  10.746  25.67925  35.7375   \n",
       "16           1464.0  35.604509  12.566361   9.999  25.71375  35.6650   \n",
       "17           1408.0  34.111471  12.467218   9.495  24.14350  34.2285   \n",
       "18           1397.0  32.496772  11.868668   8.325  23.08400  32.2110   \n",
       "19           1374.0  30.918531  11.161815   6.394  21.92525  30.9490   \n",
       "20           1431.0  33.968717  11.240708   7.978  25.51350  34.0890   \n",
       "21           1385.0  36.366763  10.933263  10.821  27.92300  36.6760   \n",
       "22           1387.0  38.912431  11.101271  15.040  30.39750  38.9810   \n",
       "23           1329.0  41.192986  11.261259  16.186  31.99100  41.7750   \n",
       "\n",
       "                  75%     max  \n",
       "hour_of_day                    \n",
       "0            51.78675  68.854  \n",
       "1            51.88600  72.554  \n",
       "2            51.70300  68.871  \n",
       "3            49.33075  68.357  \n",
       "4            52.09800  68.723  \n",
       "5            49.38250  67.677  \n",
       "6            50.52325  71.913  \n",
       "7            50.75700  74.041  \n",
       "8            49.42075  73.245  \n",
       "9            48.45300  74.504  \n",
       "10           47.54200  72.261  \n",
       "11           46.97200  68.750  \n",
       "12           47.24475  74.113  \n",
       "13           46.86200  72.017  \n",
       "14           46.22225  73.829  \n",
       "15           46.11275  69.072  \n",
       "16           45.57775  69.814  \n",
       "17           43.83850  71.387  \n",
       "18           42.15500  65.742  \n",
       "19           39.86250  59.747  \n",
       "20           42.88750  63.951  \n",
       "21           45.28500  68.405  \n",
       "22           48.03500  66.985  \n",
       "23           50.66300  68.687  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "MagadiRoad\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>43.420556</td>\n",
       "      <td>6.907329</td>\n",
       "      <td>20.787</td>\n",
       "      <td>39.03650</td>\n",
       "      <td>44.2475</td>\n",
       "      <td>48.31175</td>\n",
       "      <td>64.632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1175.0</td>\n",
       "      <td>44.813249</td>\n",
       "      <td>6.955197</td>\n",
       "      <td>22.811</td>\n",
       "      <td>40.44650</td>\n",
       "      <td>45.6020</td>\n",
       "      <td>49.61100</td>\n",
       "      <td>65.120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1034.0</td>\n",
       "      <td>45.155083</td>\n",
       "      <td>6.992063</td>\n",
       "      <td>23.426</td>\n",
       "      <td>41.08050</td>\n",
       "      <td>45.4615</td>\n",
       "      <td>49.95550</td>\n",
       "      <td>64.134</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>742.0</td>\n",
       "      <td>44.261225</td>\n",
       "      <td>6.840772</td>\n",
       "      <td>22.494</td>\n",
       "      <td>40.25875</td>\n",
       "      <td>44.4340</td>\n",
       "      <td>49.02125</td>\n",
       "      <td>65.559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1047.0</td>\n",
       "      <td>46.312255</td>\n",
       "      <td>7.905069</td>\n",
       "      <td>23.088</td>\n",
       "      <td>41.45550</td>\n",
       "      <td>46.1570</td>\n",
       "      <td>52.14950</td>\n",
       "      <td>68.207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1149.0</td>\n",
       "      <td>42.330560</td>\n",
       "      <td>8.227288</td>\n",
       "      <td>20.995</td>\n",
       "      <td>36.73500</td>\n",
       "      <td>43.0800</td>\n",
       "      <td>48.10000</td>\n",
       "      <td>64.764</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1132.0</td>\n",
       "      <td>39.930192</td>\n",
       "      <td>9.862817</td>\n",
       "      <td>17.163</td>\n",
       "      <td>31.66625</td>\n",
       "      <td>41.6330</td>\n",
       "      <td>47.31700</td>\n",
       "      <td>64.361</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1181.0</td>\n",
       "      <td>38.546465</td>\n",
       "      <td>9.952253</td>\n",
       "      <td>14.969</td>\n",
       "      <td>30.24400</td>\n",
       "      <td>40.2060</td>\n",
       "      <td>45.99600</td>\n",
       "      <td>63.300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1181.0</td>\n",
       "      <td>36.646795</td>\n",
       "      <td>10.824188</td>\n",
       "      <td>12.764</td>\n",
       "      <td>27.79800</td>\n",
       "      <td>38.4820</td>\n",
       "      <td>44.88100</td>\n",
       "      <td>63.171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>35.135664</td>\n",
       "      <td>11.204556</td>\n",
       "      <td>10.782</td>\n",
       "      <td>25.43225</td>\n",
       "      <td>37.2875</td>\n",
       "      <td>44.11550</td>\n",
       "      <td>58.908</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>33.874276</td>\n",
       "      <td>11.374305</td>\n",
       "      <td>9.328</td>\n",
       "      <td>24.10575</td>\n",
       "      <td>36.0150</td>\n",
       "      <td>43.43025</td>\n",
       "      <td>59.061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>33.755401</td>\n",
       "      <td>11.532671</td>\n",
       "      <td>9.149</td>\n",
       "      <td>23.73950</td>\n",
       "      <td>36.1730</td>\n",
       "      <td>43.11650</td>\n",
       "      <td>59.667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>33.553076</td>\n",
       "      <td>11.166102</td>\n",
       "      <td>9.371</td>\n",
       "      <td>24.17575</td>\n",
       "      <td>35.7310</td>\n",
       "      <td>42.48700</td>\n",
       "      <td>59.427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>33.806986</td>\n",
       "      <td>10.771433</td>\n",
       "      <td>10.567</td>\n",
       "      <td>24.17750</td>\n",
       "      <td>36.0265</td>\n",
       "      <td>42.30600</td>\n",
       "      <td>58.570</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>33.196476</td>\n",
       "      <td>10.731228</td>\n",
       "      <td>10.750</td>\n",
       "      <td>23.58450</td>\n",
       "      <td>35.8030</td>\n",
       "      <td>41.60100</td>\n",
       "      <td>57.114</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>32.602285</td>\n",
       "      <td>10.896974</td>\n",
       "      <td>9.601</td>\n",
       "      <td>23.04300</td>\n",
       "      <td>35.5730</td>\n",
       "      <td>41.15425</td>\n",
       "      <td>56.618</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>32.256011</td>\n",
       "      <td>10.784818</td>\n",
       "      <td>10.997</td>\n",
       "      <td>21.94400</td>\n",
       "      <td>35.2045</td>\n",
       "      <td>40.45100</td>\n",
       "      <td>55.986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>31.493298</td>\n",
       "      <td>10.612425</td>\n",
       "      <td>10.523</td>\n",
       "      <td>21.90575</td>\n",
       "      <td>34.1955</td>\n",
       "      <td>39.71700</td>\n",
       "      <td>56.604</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>30.352168</td>\n",
       "      <td>10.421799</td>\n",
       "      <td>10.190</td>\n",
       "      <td>21.52575</td>\n",
       "      <td>32.4600</td>\n",
       "      <td>38.68025</td>\n",
       "      <td>55.959</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>28.775829</td>\n",
       "      <td>9.719419</td>\n",
       "      <td>9.870</td>\n",
       "      <td>20.72150</td>\n",
       "      <td>31.0910</td>\n",
       "      <td>36.45525</td>\n",
       "      <td>51.991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>31.661013</td>\n",
       "      <td>9.468525</td>\n",
       "      <td>12.011</td>\n",
       "      <td>23.29650</td>\n",
       "      <td>34.2625</td>\n",
       "      <td>38.73525</td>\n",
       "      <td>53.409</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>34.678174</td>\n",
       "      <td>9.182244</td>\n",
       "      <td>12.926</td>\n",
       "      <td>27.17425</td>\n",
       "      <td>37.1870</td>\n",
       "      <td>41.47950</td>\n",
       "      <td>55.670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>38.166400</td>\n",
       "      <td>8.077261</td>\n",
       "      <td>17.358</td>\n",
       "      <td>31.53350</td>\n",
       "      <td>40.1800</td>\n",
       "      <td>44.01475</td>\n",
       "      <td>58.581</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>1184.0</td>\n",
       "      <td>41.867153</td>\n",
       "      <td>7.181035</td>\n",
       "      <td>19.716</td>\n",
       "      <td>36.90275</td>\n",
       "      <td>42.6925</td>\n",
       "      <td>47.04500</td>\n",
       "      <td>62.007</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              count       mean        std     min       25%      50%  \\\n",
       "hour_of_day                                                            \n",
       "0            1184.0  43.420556   6.907329  20.787  39.03650  44.2475   \n",
       "1            1175.0  44.813249   6.955197  22.811  40.44650  45.6020   \n",
       "2            1034.0  45.155083   6.992063  23.426  41.08050  45.4615   \n",
       "3             742.0  44.261225   6.840772  22.494  40.25875  44.4340   \n",
       "4            1047.0  46.312255   7.905069  23.088  41.45550  46.1570   \n",
       "5            1149.0  42.330560   8.227288  20.995  36.73500  43.0800   \n",
       "6            1132.0  39.930192   9.862817  17.163  31.66625  41.6330   \n",
       "7            1181.0  38.546465   9.952253  14.969  30.24400  40.2060   \n",
       "8            1181.0  36.646795  10.824188  12.764  27.79800  38.4820   \n",
       "9            1184.0  35.135664  11.204556  10.782  25.43225  37.2875   \n",
       "10           1184.0  33.874276  11.374305   9.328  24.10575  36.0150   \n",
       "11           1184.0  33.755401  11.532671   9.149  23.73950  36.1730   \n",
       "12           1184.0  33.553076  11.166102   9.371  24.17575  35.7310   \n",
       "13           1184.0  33.806986  10.771433  10.567  24.17750  36.0265   \n",
       "14           1184.0  33.196476  10.731228  10.750  23.58450  35.8030   \n",
       "15           1184.0  32.602285  10.896974   9.601  23.04300  35.5730   \n",
       "16           1184.0  32.256011  10.784818  10.997  21.94400  35.2045   \n",
       "17           1184.0  31.493298  10.612425  10.523  21.90575  34.1955   \n",
       "18           1184.0  30.352168  10.421799  10.190  21.52575  32.4600   \n",
       "19           1184.0  28.775829   9.719419   9.870  20.72150  31.0910   \n",
       "20           1184.0  31.661013   9.468525  12.011  23.29650  34.2625   \n",
       "21           1184.0  34.678174   9.182244  12.926  27.17425  37.1870   \n",
       "22           1184.0  38.166400   8.077261  17.358  31.53350  40.1800   \n",
       "23           1184.0  41.867153   7.181035  19.716  36.90275  42.6925   \n",
       "\n",
       "                  75%     max  \n",
       "hour_of_day                    \n",
       "0            48.31175  64.632  \n",
       "1            49.61100  65.120  \n",
       "2            49.95550  64.134  \n",
       "3            49.02125  65.559  \n",
       "4            52.14950  68.207  \n",
       "5            48.10000  64.764  \n",
       "6            47.31700  64.361  \n",
       "7            45.99600  63.300  \n",
       "8            44.88100  63.171  \n",
       "9            44.11550  58.908  \n",
       "10           43.43025  59.061  \n",
       "11           43.11650  59.667  \n",
       "12           42.48700  59.427  \n",
       "13           42.30600  58.570  \n",
       "14           41.60100  57.114  \n",
       "15           41.15425  56.618  \n",
       "16           40.45100  55.986  \n",
       "17           39.71700  56.604  \n",
       "18           38.68025  55.959  \n",
       "19           36.45525  51.991  \n",
       "20           38.73525  53.409  \n",
       "21           41.47950  55.670  \n",
       "22           44.01475  58.581  \n",
       "23           47.04500  62.007  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "EasternBypass\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>748.0</td>\n",
       "      <td>57.643729</td>\n",
       "      <td>10.243689</td>\n",
       "      <td>26.077</td>\n",
       "      <td>52.51725</td>\n",
       "      <td>58.0165</td>\n",
       "      <td>65.38075</td>\n",
       "      <td>77.991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>748.0</td>\n",
       "      <td>59.250811</td>\n",
       "      <td>10.404522</td>\n",
       "      <td>26.991</td>\n",
       "      <td>53.94100</td>\n",
       "      <td>59.9910</td>\n",
       "      <td>67.21100</td>\n",
       "      <td>78.800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>748.0</td>\n",
       "      <td>60.583305</td>\n",
       "      <td>10.830765</td>\n",
       "      <td>26.510</td>\n",
       "      <td>55.65000</td>\n",
       "      <td>61.1420</td>\n",
       "      <td>68.68025</td>\n",
       "      <td>80.397</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>745.0</td>\n",
       "      <td>61.217026</td>\n",
       "      <td>11.092786</td>\n",
       "      <td>25.852</td>\n",
       "      <td>56.42200</td>\n",
       "      <td>61.7970</td>\n",
       "      <td>69.81300</td>\n",
       "      <td>82.936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>748.0</td>\n",
       "      <td>61.071059</td>\n",
       "      <td>10.490663</td>\n",
       "      <td>25.914</td>\n",
       "      <td>56.87775</td>\n",
       "      <td>61.9455</td>\n",
       "      <td>68.70525</td>\n",
       "      <td>79.012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>748.0</td>\n",
       "      <td>56.912922</td>\n",
       "      <td>10.434059</td>\n",
       "      <td>25.472</td>\n",
       "      <td>51.19000</td>\n",
       "      <td>57.3725</td>\n",
       "      <td>65.33925</td>\n",
       "      <td>75.454</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>748.0</td>\n",
       "      <td>52.284666</td>\n",
       "      <td>11.253262</td>\n",
       "      <td>22.846</td>\n",
       "      <td>44.38050</td>\n",
       "      <td>54.1580</td>\n",
       "      <td>60.84450</td>\n",
       "      <td>74.418</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>748.0</td>\n",
       "      <td>46.104591</td>\n",
       "      <td>10.977583</td>\n",
       "      <td>16.985</td>\n",
       "      <td>38.54150</td>\n",
       "      <td>47.1065</td>\n",
       "      <td>54.61625</td>\n",
       "      <td>69.033</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>748.0</td>\n",
       "      <td>44.652201</td>\n",
       "      <td>10.641616</td>\n",
       "      <td>15.686</td>\n",
       "      <td>37.48350</td>\n",
       "      <td>45.2955</td>\n",
       "      <td>53.15450</td>\n",
       "      <td>66.135</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>748.0</td>\n",
       "      <td>43.560592</td>\n",
       "      <td>10.477770</td>\n",
       "      <td>14.802</td>\n",
       "      <td>36.00875</td>\n",
       "      <td>44.1565</td>\n",
       "      <td>52.57400</td>\n",
       "      <td>64.596</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>748.0</td>\n",
       "      <td>41.745539</td>\n",
       "      <td>10.493920</td>\n",
       "      <td>15.280</td>\n",
       "      <td>33.58225</td>\n",
       "      <td>42.2990</td>\n",
       "      <td>50.62250</td>\n",
       "      <td>62.106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>748.0</td>\n",
       "      <td>41.449845</td>\n",
       "      <td>10.433498</td>\n",
       "      <td>16.601</td>\n",
       "      <td>33.08825</td>\n",
       "      <td>41.3325</td>\n",
       "      <td>50.32175</td>\n",
       "      <td>61.540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>748.0</td>\n",
       "      <td>41.545051</td>\n",
       "      <td>10.050171</td>\n",
       "      <td>17.187</td>\n",
       "      <td>33.93000</td>\n",
       "      <td>41.1755</td>\n",
       "      <td>50.01350</td>\n",
       "      <td>63.174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>748.0</td>\n",
       "      <td>41.202767</td>\n",
       "      <td>10.205982</td>\n",
       "      <td>16.178</td>\n",
       "      <td>33.28225</td>\n",
       "      <td>40.7610</td>\n",
       "      <td>50.19925</td>\n",
       "      <td>62.193</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>748.0</td>\n",
       "      <td>40.676377</td>\n",
       "      <td>10.377037</td>\n",
       "      <td>15.011</td>\n",
       "      <td>32.49550</td>\n",
       "      <td>39.8845</td>\n",
       "      <td>49.62600</td>\n",
       "      <td>61.651</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>748.0</td>\n",
       "      <td>39.731222</td>\n",
       "      <td>10.889782</td>\n",
       "      <td>12.641</td>\n",
       "      <td>30.33650</td>\n",
       "      <td>39.0875</td>\n",
       "      <td>48.92500</td>\n",
       "      <td>63.149</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>748.0</td>\n",
       "      <td>38.740586</td>\n",
       "      <td>11.164430</td>\n",
       "      <td>12.363</td>\n",
       "      <td>28.23050</td>\n",
       "      <td>38.4870</td>\n",
       "      <td>48.34225</td>\n",
       "      <td>62.154</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>748.0</td>\n",
       "      <td>37.213377</td>\n",
       "      <td>11.411373</td>\n",
       "      <td>11.688</td>\n",
       "      <td>26.38050</td>\n",
       "      <td>37.0860</td>\n",
       "      <td>46.61125</td>\n",
       "      <td>61.574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>748.0</td>\n",
       "      <td>35.659231</td>\n",
       "      <td>11.586501</td>\n",
       "      <td>10.584</td>\n",
       "      <td>25.51475</td>\n",
       "      <td>35.4335</td>\n",
       "      <td>44.26100</td>\n",
       "      <td>62.705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>748.0</td>\n",
       "      <td>34.843176</td>\n",
       "      <td>10.932204</td>\n",
       "      <td>9.836</td>\n",
       "      <td>25.58825</td>\n",
       "      <td>34.7125</td>\n",
       "      <td>42.97275</td>\n",
       "      <td>57.786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>748.0</td>\n",
       "      <td>39.315952</td>\n",
       "      <td>10.457290</td>\n",
       "      <td>13.861</td>\n",
       "      <td>30.44975</td>\n",
       "      <td>38.8845</td>\n",
       "      <td>47.05275</td>\n",
       "      <td>61.263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>748.0</td>\n",
       "      <td>44.868537</td>\n",
       "      <td>9.845226</td>\n",
       "      <td>19.319</td>\n",
       "      <td>37.86650</td>\n",
       "      <td>44.3740</td>\n",
       "      <td>52.29050</td>\n",
       "      <td>66.116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>748.0</td>\n",
       "      <td>50.300964</td>\n",
       "      <td>9.596102</td>\n",
       "      <td>25.815</td>\n",
       "      <td>43.94750</td>\n",
       "      <td>49.9005</td>\n",
       "      <td>57.06350</td>\n",
       "      <td>69.970</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>748.0</td>\n",
       "      <td>54.875710</td>\n",
       "      <td>9.786116</td>\n",
       "      <td>25.886</td>\n",
       "      <td>48.98975</td>\n",
       "      <td>55.2310</td>\n",
       "      <td>62.32100</td>\n",
       "      <td>74.279</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             count       mean        std     min       25%      50%       75%  \\\n",
       "hour_of_day                                                                     \n",
       "0            748.0  57.643729  10.243689  26.077  52.51725  58.0165  65.38075   \n",
       "1            748.0  59.250811  10.404522  26.991  53.94100  59.9910  67.21100   \n",
       "2            748.0  60.583305  10.830765  26.510  55.65000  61.1420  68.68025   \n",
       "3            745.0  61.217026  11.092786  25.852  56.42200  61.7970  69.81300   \n",
       "4            748.0  61.071059  10.490663  25.914  56.87775  61.9455  68.70525   \n",
       "5            748.0  56.912922  10.434059  25.472  51.19000  57.3725  65.33925   \n",
       "6            748.0  52.284666  11.253262  22.846  44.38050  54.1580  60.84450   \n",
       "7            748.0  46.104591  10.977583  16.985  38.54150  47.1065  54.61625   \n",
       "8            748.0  44.652201  10.641616  15.686  37.48350  45.2955  53.15450   \n",
       "9            748.0  43.560592  10.477770  14.802  36.00875  44.1565  52.57400   \n",
       "10           748.0  41.745539  10.493920  15.280  33.58225  42.2990  50.62250   \n",
       "11           748.0  41.449845  10.433498  16.601  33.08825  41.3325  50.32175   \n",
       "12           748.0  41.545051  10.050171  17.187  33.93000  41.1755  50.01350   \n",
       "13           748.0  41.202767  10.205982  16.178  33.28225  40.7610  50.19925   \n",
       "14           748.0  40.676377  10.377037  15.011  32.49550  39.8845  49.62600   \n",
       "15           748.0  39.731222  10.889782  12.641  30.33650  39.0875  48.92500   \n",
       "16           748.0  38.740586  11.164430  12.363  28.23050  38.4870  48.34225   \n",
       "17           748.0  37.213377  11.411373  11.688  26.38050  37.0860  46.61125   \n",
       "18           748.0  35.659231  11.586501  10.584  25.51475  35.4335  44.26100   \n",
       "19           748.0  34.843176  10.932204   9.836  25.58825  34.7125  42.97275   \n",
       "20           748.0  39.315952  10.457290  13.861  30.44975  38.8845  47.05275   \n",
       "21           748.0  44.868537   9.845226  19.319  37.86650  44.3740  52.29050   \n",
       "22           748.0  50.300964   9.596102  25.815  43.94750  49.9005  57.06350   \n",
       "23           748.0  54.875710   9.786116  25.886  48.98975  55.2310  62.32100   \n",
       "\n",
       "                max  \n",
       "hour_of_day          \n",
       "0            77.991  \n",
       "1            78.800  \n",
       "2            80.397  \n",
       "3            82.936  \n",
       "4            79.012  \n",
       "5            75.454  \n",
       "6            74.418  \n",
       "7            69.033  \n",
       "8            66.135  \n",
       "9            64.596  \n",
       "10           62.106  \n",
       "11           61.540  \n",
       "12           63.174  \n",
       "13           62.193  \n",
       "14           61.651  \n",
       "15           63.149  \n",
       "16           62.154  \n",
       "17           61.574  \n",
       "18           62.705  \n",
       "19           57.786  \n",
       "20           61.263  \n",
       "21           66.116  \n",
       "22           69.970  \n",
       "23           74.279  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "KamitiRoad\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1095.0</td>\n",
       "      <td>39.960062</td>\n",
       "      <td>11.646441</td>\n",
       "      <td>14.050</td>\n",
       "      <td>31.30550</td>\n",
       "      <td>38.8570</td>\n",
       "      <td>47.88050</td>\n",
       "      <td>69.109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1090.0</td>\n",
       "      <td>40.420585</td>\n",
       "      <td>11.624227</td>\n",
       "      <td>14.526</td>\n",
       "      <td>31.65550</td>\n",
       "      <td>39.7295</td>\n",
       "      <td>48.22600</td>\n",
       "      <td>69.920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1013.0</td>\n",
       "      <td>40.917333</td>\n",
       "      <td>11.958444</td>\n",
       "      <td>13.637</td>\n",
       "      <td>31.87300</td>\n",
       "      <td>39.6810</td>\n",
       "      <td>49.48200</td>\n",
       "      <td>72.229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>584.0</td>\n",
       "      <td>39.303507</td>\n",
       "      <td>12.325763</td>\n",
       "      <td>14.507</td>\n",
       "      <td>30.25100</td>\n",
       "      <td>38.0105</td>\n",
       "      <td>49.07900</td>\n",
       "      <td>68.838</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>777.0</td>\n",
       "      <td>40.391770</td>\n",
       "      <td>11.795572</td>\n",
       "      <td>15.131</td>\n",
       "      <td>31.45600</td>\n",
       "      <td>39.1520</td>\n",
       "      <td>49.52800</td>\n",
       "      <td>70.566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>935.0</td>\n",
       "      <td>39.947298</td>\n",
       "      <td>12.146556</td>\n",
       "      <td>14.459</td>\n",
       "      <td>31.05700</td>\n",
       "      <td>38.7500</td>\n",
       "      <td>47.76800</td>\n",
       "      <td>74.988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1015.0</td>\n",
       "      <td>41.343915</td>\n",
       "      <td>13.492847</td>\n",
       "      <td>15.495</td>\n",
       "      <td>30.94600</td>\n",
       "      <td>39.8610</td>\n",
       "      <td>52.47500</td>\n",
       "      <td>75.155</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>40.405345</td>\n",
       "      <td>12.997482</td>\n",
       "      <td>14.466</td>\n",
       "      <td>30.69350</td>\n",
       "      <td>39.2985</td>\n",
       "      <td>50.14200</td>\n",
       "      <td>72.723</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>39.077609</td>\n",
       "      <td>13.192726</td>\n",
       "      <td>12.668</td>\n",
       "      <td>28.88700</td>\n",
       "      <td>37.4970</td>\n",
       "      <td>48.85075</td>\n",
       "      <td>70.935</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>38.506549</td>\n",
       "      <td>13.649989</td>\n",
       "      <td>12.462</td>\n",
       "      <td>28.16875</td>\n",
       "      <td>37.0455</td>\n",
       "      <td>48.90400</td>\n",
       "      <td>70.631</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>37.962407</td>\n",
       "      <td>13.444933</td>\n",
       "      <td>12.553</td>\n",
       "      <td>27.64625</td>\n",
       "      <td>36.8810</td>\n",
       "      <td>48.14125</td>\n",
       "      <td>69.025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>37.758456</td>\n",
       "      <td>13.342461</td>\n",
       "      <td>12.442</td>\n",
       "      <td>27.63400</td>\n",
       "      <td>36.3560</td>\n",
       "      <td>48.11525</td>\n",
       "      <td>69.194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>37.729839</td>\n",
       "      <td>13.265344</td>\n",
       "      <td>12.353</td>\n",
       "      <td>27.55450</td>\n",
       "      <td>36.6670</td>\n",
       "      <td>48.25075</td>\n",
       "      <td>69.234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>37.473487</td>\n",
       "      <td>13.196877</td>\n",
       "      <td>12.102</td>\n",
       "      <td>27.32325</td>\n",
       "      <td>36.1560</td>\n",
       "      <td>47.29225</td>\n",
       "      <td>68.159</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>37.356132</td>\n",
       "      <td>13.260530</td>\n",
       "      <td>11.881</td>\n",
       "      <td>27.15875</td>\n",
       "      <td>36.1110</td>\n",
       "      <td>47.72725</td>\n",
       "      <td>69.261</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>37.231652</td>\n",
       "      <td>13.041723</td>\n",
       "      <td>11.831</td>\n",
       "      <td>27.18350</td>\n",
       "      <td>35.9590</td>\n",
       "      <td>47.12200</td>\n",
       "      <td>66.889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>36.616861</td>\n",
       "      <td>13.028286</td>\n",
       "      <td>10.568</td>\n",
       "      <td>26.80450</td>\n",
       "      <td>35.1855</td>\n",
       "      <td>46.68975</td>\n",
       "      <td>68.091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>35.723599</td>\n",
       "      <td>13.035539</td>\n",
       "      <td>9.230</td>\n",
       "      <td>25.90825</td>\n",
       "      <td>34.3370</td>\n",
       "      <td>44.95400</td>\n",
       "      <td>66.829</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>34.450269</td>\n",
       "      <td>12.787783</td>\n",
       "      <td>9.408</td>\n",
       "      <td>25.07700</td>\n",
       "      <td>33.2435</td>\n",
       "      <td>43.02625</td>\n",
       "      <td>66.866</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>32.473168</td>\n",
       "      <td>11.267413</td>\n",
       "      <td>9.087</td>\n",
       "      <td>24.20225</td>\n",
       "      <td>31.6710</td>\n",
       "      <td>40.60575</td>\n",
       "      <td>62.675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>34.220652</td>\n",
       "      <td>11.409158</td>\n",
       "      <td>11.837</td>\n",
       "      <td>25.87300</td>\n",
       "      <td>33.6145</td>\n",
       "      <td>42.53725</td>\n",
       "      <td>62.374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>35.828166</td>\n",
       "      <td>11.577379</td>\n",
       "      <td>12.416</td>\n",
       "      <td>27.28125</td>\n",
       "      <td>35.3040</td>\n",
       "      <td>44.52075</td>\n",
       "      <td>63.686</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>37.706706</td>\n",
       "      <td>11.558797</td>\n",
       "      <td>13.371</td>\n",
       "      <td>29.03825</td>\n",
       "      <td>37.1840</td>\n",
       "      <td>46.31825</td>\n",
       "      <td>64.874</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>1096.0</td>\n",
       "      <td>39.261110</td>\n",
       "      <td>11.620148</td>\n",
       "      <td>14.121</td>\n",
       "      <td>30.46425</td>\n",
       "      <td>38.8280</td>\n",
       "      <td>47.20425</td>\n",
       "      <td>68.014</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              count       mean        std     min       25%      50%  \\\n",
       "hour_of_day                                                            \n",
       "0            1095.0  39.960062  11.646441  14.050  31.30550  38.8570   \n",
       "1            1090.0  40.420585  11.624227  14.526  31.65550  39.7295   \n",
       "2            1013.0  40.917333  11.958444  13.637  31.87300  39.6810   \n",
       "3             584.0  39.303507  12.325763  14.507  30.25100  38.0105   \n",
       "4             777.0  40.391770  11.795572  15.131  31.45600  39.1520   \n",
       "5             935.0  39.947298  12.146556  14.459  31.05700  38.7500   \n",
       "6            1015.0  41.343915  13.492847  15.495  30.94600  39.8610   \n",
       "7            1096.0  40.405345  12.997482  14.466  30.69350  39.2985   \n",
       "8            1096.0  39.077609  13.192726  12.668  28.88700  37.4970   \n",
       "9            1096.0  38.506549  13.649989  12.462  28.16875  37.0455   \n",
       "10           1096.0  37.962407  13.444933  12.553  27.64625  36.8810   \n",
       "11           1096.0  37.758456  13.342461  12.442  27.63400  36.3560   \n",
       "12           1096.0  37.729839  13.265344  12.353  27.55450  36.6670   \n",
       "13           1096.0  37.473487  13.196877  12.102  27.32325  36.1560   \n",
       "14           1096.0  37.356132  13.260530  11.881  27.15875  36.1110   \n",
       "15           1096.0  37.231652  13.041723  11.831  27.18350  35.9590   \n",
       "16           1096.0  36.616861  13.028286  10.568  26.80450  35.1855   \n",
       "17           1096.0  35.723599  13.035539   9.230  25.90825  34.3370   \n",
       "18           1096.0  34.450269  12.787783   9.408  25.07700  33.2435   \n",
       "19           1096.0  32.473168  11.267413   9.087  24.20225  31.6710   \n",
       "20           1096.0  34.220652  11.409158  11.837  25.87300  33.6145   \n",
       "21           1096.0  35.828166  11.577379  12.416  27.28125  35.3040   \n",
       "22           1096.0  37.706706  11.558797  13.371  29.03825  37.1840   \n",
       "23           1096.0  39.261110  11.620148  14.121  30.46425  38.8280   \n",
       "\n",
       "                  75%     max  \n",
       "hour_of_day                    \n",
       "0            47.88050  69.109  \n",
       "1            48.22600  69.920  \n",
       "2            49.48200  72.229  \n",
       "3            49.07900  68.838  \n",
       "4            49.52800  70.566  \n",
       "5            47.76800  74.988  \n",
       "6            52.47500  75.155  \n",
       "7            50.14200  72.723  \n",
       "8            48.85075  70.935  \n",
       "9            48.90400  70.631  \n",
       "10           48.14125  69.025  \n",
       "11           48.11525  69.194  \n",
       "12           48.25075  69.234  \n",
       "13           47.29225  68.159  \n",
       "14           47.72725  69.261  \n",
       "15           47.12200  66.889  \n",
       "16           46.68975  68.091  \n",
       "17           44.95400  66.829  \n",
       "18           43.02625  66.866  \n",
       "19           40.60575  62.675  \n",
       "20           42.53725  62.374  \n",
       "21           44.52075  63.686  \n",
       "22           46.31825  64.874  \n",
       "23           47.20425  68.014  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "NgongRoad\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>720.0</td>\n",
       "      <td>42.070314</td>\n",
       "      <td>9.912025</td>\n",
       "      <td>15.291</td>\n",
       "      <td>35.11500</td>\n",
       "      <td>44.7930</td>\n",
       "      <td>49.48375</td>\n",
       "      <td>57.642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>716.0</td>\n",
       "      <td>43.204176</td>\n",
       "      <td>10.131511</td>\n",
       "      <td>14.450</td>\n",
       "      <td>36.61325</td>\n",
       "      <td>46.1140</td>\n",
       "      <td>50.78575</td>\n",
       "      <td>57.793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>669.0</td>\n",
       "      <td>45.081846</td>\n",
       "      <td>9.277745</td>\n",
       "      <td>16.084</td>\n",
       "      <td>39.94500</td>\n",
       "      <td>47.1690</td>\n",
       "      <td>51.68200</td>\n",
       "      <td>59.266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>614.0</td>\n",
       "      <td>46.691433</td>\n",
       "      <td>8.557742</td>\n",
       "      <td>16.705</td>\n",
       "      <td>42.62975</td>\n",
       "      <td>48.8020</td>\n",
       "      <td>53.11200</td>\n",
       "      <td>60.304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>692.0</td>\n",
       "      <td>45.398275</td>\n",
       "      <td>10.347468</td>\n",
       "      <td>16.044</td>\n",
       "      <td>38.70400</td>\n",
       "      <td>47.9555</td>\n",
       "      <td>53.68300</td>\n",
       "      <td>63.239</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>720.0</td>\n",
       "      <td>42.060969</td>\n",
       "      <td>10.273390</td>\n",
       "      <td>15.965</td>\n",
       "      <td>33.46525</td>\n",
       "      <td>45.0615</td>\n",
       "      <td>49.76975</td>\n",
       "      <td>59.618</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>720.0</td>\n",
       "      <td>36.975933</td>\n",
       "      <td>9.823496</td>\n",
       "      <td>13.152</td>\n",
       "      <td>28.92950</td>\n",
       "      <td>38.2775</td>\n",
       "      <td>44.43825</td>\n",
       "      <td>60.487</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>720.0</td>\n",
       "      <td>34.021326</td>\n",
       "      <td>9.409251</td>\n",
       "      <td>13.140</td>\n",
       "      <td>26.27325</td>\n",
       "      <td>33.2120</td>\n",
       "      <td>41.79850</td>\n",
       "      <td>55.945</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>720.0</td>\n",
       "      <td>33.003772</td>\n",
       "      <td>9.727179</td>\n",
       "      <td>12.755</td>\n",
       "      <td>24.88625</td>\n",
       "      <td>31.8645</td>\n",
       "      <td>42.00000</td>\n",
       "      <td>53.950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>720.0</td>\n",
       "      <td>32.321151</td>\n",
       "      <td>10.087333</td>\n",
       "      <td>11.647</td>\n",
       "      <td>24.04825</td>\n",
       "      <td>31.4880</td>\n",
       "      <td>41.47925</td>\n",
       "      <td>52.505</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>720.0</td>\n",
       "      <td>31.455085</td>\n",
       "      <td>10.161325</td>\n",
       "      <td>10.292</td>\n",
       "      <td>22.99025</td>\n",
       "      <td>30.4580</td>\n",
       "      <td>40.98725</td>\n",
       "      <td>51.378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>720.0</td>\n",
       "      <td>30.824665</td>\n",
       "      <td>10.317766</td>\n",
       "      <td>10.038</td>\n",
       "      <td>22.18400</td>\n",
       "      <td>30.4750</td>\n",
       "      <td>40.38725</td>\n",
       "      <td>50.897</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>720.0</td>\n",
       "      <td>31.020492</td>\n",
       "      <td>10.056985</td>\n",
       "      <td>10.225</td>\n",
       "      <td>22.83150</td>\n",
       "      <td>30.3450</td>\n",
       "      <td>40.16500</td>\n",
       "      <td>51.385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>720.0</td>\n",
       "      <td>30.515456</td>\n",
       "      <td>10.026619</td>\n",
       "      <td>10.573</td>\n",
       "      <td>22.06425</td>\n",
       "      <td>30.0655</td>\n",
       "      <td>39.49250</td>\n",
       "      <td>51.329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>720.0</td>\n",
       "      <td>29.929612</td>\n",
       "      <td>9.972858</td>\n",
       "      <td>10.290</td>\n",
       "      <td>21.47275</td>\n",
       "      <td>30.1285</td>\n",
       "      <td>38.80425</td>\n",
       "      <td>50.842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>720.0</td>\n",
       "      <td>29.795603</td>\n",
       "      <td>9.829919</td>\n",
       "      <td>10.393</td>\n",
       "      <td>21.34700</td>\n",
       "      <td>30.6115</td>\n",
       "      <td>38.34975</td>\n",
       "      <td>51.683</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>720.0</td>\n",
       "      <td>29.028718</td>\n",
       "      <td>9.751467</td>\n",
       "      <td>9.982</td>\n",
       "      <td>20.55325</td>\n",
       "      <td>29.3160</td>\n",
       "      <td>37.17475</td>\n",
       "      <td>51.647</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>720.0</td>\n",
       "      <td>27.521919</td>\n",
       "      <td>9.601555</td>\n",
       "      <td>8.738</td>\n",
       "      <td>19.66900</td>\n",
       "      <td>27.0790</td>\n",
       "      <td>35.70750</td>\n",
       "      <td>51.617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>720.0</td>\n",
       "      <td>26.852372</td>\n",
       "      <td>9.260938</td>\n",
       "      <td>7.924</td>\n",
       "      <td>19.93050</td>\n",
       "      <td>26.6765</td>\n",
       "      <td>34.53975</td>\n",
       "      <td>49.827</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>720.0</td>\n",
       "      <td>26.802668</td>\n",
       "      <td>9.179259</td>\n",
       "      <td>7.208</td>\n",
       "      <td>20.00775</td>\n",
       "      <td>27.2765</td>\n",
       "      <td>34.33925</td>\n",
       "      <td>49.752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>720.0</td>\n",
       "      <td>30.356433</td>\n",
       "      <td>9.549425</td>\n",
       "      <td>9.245</td>\n",
       "      <td>22.66475</td>\n",
       "      <td>31.4020</td>\n",
       "      <td>37.61025</td>\n",
       "      <td>51.612</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>720.0</td>\n",
       "      <td>34.378881</td>\n",
       "      <td>9.503971</td>\n",
       "      <td>11.400</td>\n",
       "      <td>26.26750</td>\n",
       "      <td>36.7560</td>\n",
       "      <td>41.57050</td>\n",
       "      <td>53.966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>720.0</td>\n",
       "      <td>38.155764</td>\n",
       "      <td>9.628371</td>\n",
       "      <td>13.648</td>\n",
       "      <td>30.73675</td>\n",
       "      <td>40.9135</td>\n",
       "      <td>45.57275</td>\n",
       "      <td>55.432</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>720.0</td>\n",
       "      <td>40.655882</td>\n",
       "      <td>9.641693</td>\n",
       "      <td>14.254</td>\n",
       "      <td>33.79825</td>\n",
       "      <td>43.4100</td>\n",
       "      <td>48.04975</td>\n",
       "      <td>57.066</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             count       mean        std     min       25%      50%       75%  \\\n",
       "hour_of_day                                                                     \n",
       "0            720.0  42.070314   9.912025  15.291  35.11500  44.7930  49.48375   \n",
       "1            716.0  43.204176  10.131511  14.450  36.61325  46.1140  50.78575   \n",
       "2            669.0  45.081846   9.277745  16.084  39.94500  47.1690  51.68200   \n",
       "3            614.0  46.691433   8.557742  16.705  42.62975  48.8020  53.11200   \n",
       "4            692.0  45.398275  10.347468  16.044  38.70400  47.9555  53.68300   \n",
       "5            720.0  42.060969  10.273390  15.965  33.46525  45.0615  49.76975   \n",
       "6            720.0  36.975933   9.823496  13.152  28.92950  38.2775  44.43825   \n",
       "7            720.0  34.021326   9.409251  13.140  26.27325  33.2120  41.79850   \n",
       "8            720.0  33.003772   9.727179  12.755  24.88625  31.8645  42.00000   \n",
       "9            720.0  32.321151  10.087333  11.647  24.04825  31.4880  41.47925   \n",
       "10           720.0  31.455085  10.161325  10.292  22.99025  30.4580  40.98725   \n",
       "11           720.0  30.824665  10.317766  10.038  22.18400  30.4750  40.38725   \n",
       "12           720.0  31.020492  10.056985  10.225  22.83150  30.3450  40.16500   \n",
       "13           720.0  30.515456  10.026619  10.573  22.06425  30.0655  39.49250   \n",
       "14           720.0  29.929612   9.972858  10.290  21.47275  30.1285  38.80425   \n",
       "15           720.0  29.795603   9.829919  10.393  21.34700  30.6115  38.34975   \n",
       "16           720.0  29.028718   9.751467   9.982  20.55325  29.3160  37.17475   \n",
       "17           720.0  27.521919   9.601555   8.738  19.66900  27.0790  35.70750   \n",
       "18           720.0  26.852372   9.260938   7.924  19.93050  26.6765  34.53975   \n",
       "19           720.0  26.802668   9.179259   7.208  20.00775  27.2765  34.33925   \n",
       "20           720.0  30.356433   9.549425   9.245  22.66475  31.4020  37.61025   \n",
       "21           720.0  34.378881   9.503971  11.400  26.26750  36.7560  41.57050   \n",
       "22           720.0  38.155764   9.628371  13.648  30.73675  40.9135  45.57275   \n",
       "23           720.0  40.655882   9.641693  14.254  33.79825  43.4100  48.04975   \n",
       "\n",
       "                max  \n",
       "hour_of_day          \n",
       "0            57.642  \n",
       "1            57.793  \n",
       "2            59.266  \n",
       "3            60.304  \n",
       "4            63.239  \n",
       "5            59.618  \n",
       "6            60.487  \n",
       "7            55.945  \n",
       "8            53.950  \n",
       "9            52.505  \n",
       "10           51.378  \n",
       "11           50.897  \n",
       "12           51.385  \n",
       "13           51.329  \n",
       "14           50.842  \n",
       "15           51.683  \n",
       "16           51.647  \n",
       "17           51.617  \n",
       "18           49.827  \n",
       "19           49.752  \n",
       "20           51.612  \n",
       "21           53.966  \n",
       "22           55.432  \n",
       "23           57.066  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "ForestLineRoad\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>751.0</td>\n",
       "      <td>36.542999</td>\n",
       "      <td>10.055576</td>\n",
       "      <td>14.130</td>\n",
       "      <td>28.60200</td>\n",
       "      <td>35.2700</td>\n",
       "      <td>43.96800</td>\n",
       "      <td>62.736</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>452.0</td>\n",
       "      <td>36.493208</td>\n",
       "      <td>9.871228</td>\n",
       "      <td>14.392</td>\n",
       "      <td>28.99625</td>\n",
       "      <td>36.2100</td>\n",
       "      <td>43.50125</td>\n",
       "      <td>59.084</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>214.0</td>\n",
       "      <td>39.802874</td>\n",
       "      <td>11.053304</td>\n",
       "      <td>14.286</td>\n",
       "      <td>31.24200</td>\n",
       "      <td>39.9025</td>\n",
       "      <td>48.71825</td>\n",
       "      <td>59.979</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>175.0</td>\n",
       "      <td>41.431063</td>\n",
       "      <td>10.857384</td>\n",
       "      <td>15.203</td>\n",
       "      <td>32.40600</td>\n",
       "      <td>41.5680</td>\n",
       "      <td>49.32250</td>\n",
       "      <td>63.114</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>232.0</td>\n",
       "      <td>42.305522</td>\n",
       "      <td>11.610101</td>\n",
       "      <td>14.311</td>\n",
       "      <td>33.36875</td>\n",
       "      <td>41.9555</td>\n",
       "      <td>51.94675</td>\n",
       "      <td>62.901</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>478.0</td>\n",
       "      <td>37.492494</td>\n",
       "      <td>10.607048</td>\n",
       "      <td>15.014</td>\n",
       "      <td>28.54425</td>\n",
       "      <td>37.6690</td>\n",
       "      <td>46.31800</td>\n",
       "      <td>57.995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>693.0</td>\n",
       "      <td>36.817286</td>\n",
       "      <td>11.554926</td>\n",
       "      <td>14.675</td>\n",
       "      <td>26.83600</td>\n",
       "      <td>35.7620</td>\n",
       "      <td>45.80700</td>\n",
       "      <td>64.397</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>732.0</td>\n",
       "      <td>34.864956</td>\n",
       "      <td>10.591748</td>\n",
       "      <td>14.810</td>\n",
       "      <td>26.12225</td>\n",
       "      <td>33.3925</td>\n",
       "      <td>42.83800</td>\n",
       "      <td>62.014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>784.0</td>\n",
       "      <td>34.526320</td>\n",
       "      <td>10.801973</td>\n",
       "      <td>12.949</td>\n",
       "      <td>25.74500</td>\n",
       "      <td>33.3535</td>\n",
       "      <td>42.31250</td>\n",
       "      <td>61.846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>784.0</td>\n",
       "      <td>33.939769</td>\n",
       "      <td>10.525122</td>\n",
       "      <td>13.242</td>\n",
       "      <td>25.24650</td>\n",
       "      <td>32.6305</td>\n",
       "      <td>41.51600</td>\n",
       "      <td>59.220</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>784.0</td>\n",
       "      <td>33.808987</td>\n",
       "      <td>10.705502</td>\n",
       "      <td>14.102</td>\n",
       "      <td>25.00375</td>\n",
       "      <td>32.8370</td>\n",
       "      <td>41.63400</td>\n",
       "      <td>59.229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>784.0</td>\n",
       "      <td>34.202171</td>\n",
       "      <td>10.987636</td>\n",
       "      <td>15.157</td>\n",
       "      <td>24.97025</td>\n",
       "      <td>33.6000</td>\n",
       "      <td>41.86175</td>\n",
       "      <td>61.569</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>784.0</td>\n",
       "      <td>33.559320</td>\n",
       "      <td>11.041878</td>\n",
       "      <td>12.941</td>\n",
       "      <td>24.74150</td>\n",
       "      <td>32.3060</td>\n",
       "      <td>41.62375</td>\n",
       "      <td>59.435</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>784.0</td>\n",
       "      <td>33.343615</td>\n",
       "      <td>10.773554</td>\n",
       "      <td>13.279</td>\n",
       "      <td>24.53025</td>\n",
       "      <td>32.3395</td>\n",
       "      <td>41.19350</td>\n",
       "      <td>59.059</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>784.0</td>\n",
       "      <td>33.226386</td>\n",
       "      <td>10.742912</td>\n",
       "      <td>13.157</td>\n",
       "      <td>24.69575</td>\n",
       "      <td>32.3885</td>\n",
       "      <td>41.81200</td>\n",
       "      <td>58.685</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>784.0</td>\n",
       "      <td>32.644962</td>\n",
       "      <td>10.419631</td>\n",
       "      <td>12.836</td>\n",
       "      <td>24.27925</td>\n",
       "      <td>32.4415</td>\n",
       "      <td>40.03050</td>\n",
       "      <td>57.737</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>784.0</td>\n",
       "      <td>32.281719</td>\n",
       "      <td>10.818726</td>\n",
       "      <td>11.704</td>\n",
       "      <td>24.03950</td>\n",
       "      <td>31.5340</td>\n",
       "      <td>40.25375</td>\n",
       "      <td>59.636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>784.0</td>\n",
       "      <td>31.140811</td>\n",
       "      <td>10.496356</td>\n",
       "      <td>11.998</td>\n",
       "      <td>23.07175</td>\n",
       "      <td>30.2045</td>\n",
       "      <td>38.17875</td>\n",
       "      <td>57.027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>784.0</td>\n",
       "      <td>29.692136</td>\n",
       "      <td>9.535068</td>\n",
       "      <td>10.824</td>\n",
       "      <td>22.43525</td>\n",
       "      <td>29.1425</td>\n",
       "      <td>36.45200</td>\n",
       "      <td>51.806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>784.0</td>\n",
       "      <td>31.372923</td>\n",
       "      <td>9.550628</td>\n",
       "      <td>13.309</td>\n",
       "      <td>23.82325</td>\n",
       "      <td>30.5200</td>\n",
       "      <td>38.64025</td>\n",
       "      <td>54.407</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>784.0</td>\n",
       "      <td>32.707352</td>\n",
       "      <td>9.532246</td>\n",
       "      <td>13.965</td>\n",
       "      <td>24.63225</td>\n",
       "      <td>31.4805</td>\n",
       "      <td>40.17600</td>\n",
       "      <td>54.626</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>784.0</td>\n",
       "      <td>34.077955</td>\n",
       "      <td>9.761074</td>\n",
       "      <td>14.279</td>\n",
       "      <td>26.24000</td>\n",
       "      <td>33.1090</td>\n",
       "      <td>41.64075</td>\n",
       "      <td>59.062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>784.0</td>\n",
       "      <td>35.740059</td>\n",
       "      <td>9.859380</td>\n",
       "      <td>12.965</td>\n",
       "      <td>28.24975</td>\n",
       "      <td>34.1915</td>\n",
       "      <td>43.52225</td>\n",
       "      <td>58.796</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             count       mean        std     min       25%      50%       75%  \\\n",
       "hour_of_day                                                                     \n",
       "0            751.0  36.542999  10.055576  14.130  28.60200  35.2700  43.96800   \n",
       "1            452.0  36.493208   9.871228  14.392  28.99625  36.2100  43.50125   \n",
       "2            214.0  39.802874  11.053304  14.286  31.24200  39.9025  48.71825   \n",
       "4            175.0  41.431063  10.857384  15.203  32.40600  41.5680  49.32250   \n",
       "5            232.0  42.305522  11.610101  14.311  33.36875  41.9555  51.94675   \n",
       "6            478.0  37.492494  10.607048  15.014  28.54425  37.6690  46.31800   \n",
       "7            693.0  36.817286  11.554926  14.675  26.83600  35.7620  45.80700   \n",
       "8            732.0  34.864956  10.591748  14.810  26.12225  33.3925  42.83800   \n",
       "9            784.0  34.526320  10.801973  12.949  25.74500  33.3535  42.31250   \n",
       "10           784.0  33.939769  10.525122  13.242  25.24650  32.6305  41.51600   \n",
       "11           784.0  33.808987  10.705502  14.102  25.00375  32.8370  41.63400   \n",
       "12           784.0  34.202171  10.987636  15.157  24.97025  33.6000  41.86175   \n",
       "13           784.0  33.559320  11.041878  12.941  24.74150  32.3060  41.62375   \n",
       "14           784.0  33.343615  10.773554  13.279  24.53025  32.3395  41.19350   \n",
       "15           784.0  33.226386  10.742912  13.157  24.69575  32.3885  41.81200   \n",
       "16           784.0  32.644962  10.419631  12.836  24.27925  32.4415  40.03050   \n",
       "17           784.0  32.281719  10.818726  11.704  24.03950  31.5340  40.25375   \n",
       "18           784.0  31.140811  10.496356  11.998  23.07175  30.2045  38.17875   \n",
       "19           784.0  29.692136   9.535068  10.824  22.43525  29.1425  36.45200   \n",
       "20           784.0  31.372923   9.550628  13.309  23.82325  30.5200  38.64025   \n",
       "21           784.0  32.707352   9.532246  13.965  24.63225  31.4805  40.17600   \n",
       "22           784.0  34.077955   9.761074  14.279  26.24000  33.1090  41.64075   \n",
       "23           784.0  35.740059   9.859380  12.965  28.24975  34.1915  43.52225   \n",
       "\n",
       "                max  \n",
       "hour_of_day          \n",
       "0            62.736  \n",
       "1            59.084  \n",
       "2            59.979  \n",
       "4            63.114  \n",
       "5            62.901  \n",
       "6            57.995  \n",
       "7            64.397  \n",
       "8            62.014  \n",
       "9            61.846  \n",
       "10           59.220  \n",
       "11           59.229  \n",
       "12           61.569  \n",
       "13           59.435  \n",
       "14           59.059  \n",
       "15           58.685  \n",
       "16           57.737  \n",
       "17           59.636  \n",
       "18           57.027  \n",
       "19           51.806  \n",
       "20           54.407  \n",
       "21           54.626  \n",
       "22           59.062  \n",
       "23           58.796  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "GitaruRoad\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>757.0</td>\n",
       "      <td>38.681472</td>\n",
       "      <td>10.396021</td>\n",
       "      <td>13.068</td>\n",
       "      <td>30.27300</td>\n",
       "      <td>40.5680</td>\n",
       "      <td>47.12500</td>\n",
       "      <td>59.800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>732.0</td>\n",
       "      <td>40.026432</td>\n",
       "      <td>10.705425</td>\n",
       "      <td>14.162</td>\n",
       "      <td>31.37875</td>\n",
       "      <td>41.8085</td>\n",
       "      <td>48.47775</td>\n",
       "      <td>60.850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>661.0</td>\n",
       "      <td>41.073440</td>\n",
       "      <td>10.840924</td>\n",
       "      <td>16.777</td>\n",
       "      <td>32.51200</td>\n",
       "      <td>43.3150</td>\n",
       "      <td>49.60700</td>\n",
       "      <td>63.017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>308.0</td>\n",
       "      <td>42.828734</td>\n",
       "      <td>10.141969</td>\n",
       "      <td>14.300</td>\n",
       "      <td>36.32400</td>\n",
       "      <td>45.0695</td>\n",
       "      <td>50.61200</td>\n",
       "      <td>60.224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>588.0</td>\n",
       "      <td>41.008236</td>\n",
       "      <td>10.518500</td>\n",
       "      <td>12.608</td>\n",
       "      <td>31.88475</td>\n",
       "      <td>42.9455</td>\n",
       "      <td>48.98350</td>\n",
       "      <td>62.547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>680.0</td>\n",
       "      <td>39.887540</td>\n",
       "      <td>10.738152</td>\n",
       "      <td>12.521</td>\n",
       "      <td>30.92175</td>\n",
       "      <td>41.6370</td>\n",
       "      <td>48.47975</td>\n",
       "      <td>62.145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>768.0</td>\n",
       "      <td>38.408611</td>\n",
       "      <td>10.993107</td>\n",
       "      <td>9.713</td>\n",
       "      <td>28.51100</td>\n",
       "      <td>39.6500</td>\n",
       "      <td>47.41225</td>\n",
       "      <td>69.687</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>934.0</td>\n",
       "      <td>37.614449</td>\n",
       "      <td>11.235127</td>\n",
       "      <td>8.861</td>\n",
       "      <td>28.21675</td>\n",
       "      <td>38.2295</td>\n",
       "      <td>46.73100</td>\n",
       "      <td>75.108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1003.0</td>\n",
       "      <td>37.280898</td>\n",
       "      <td>11.126989</td>\n",
       "      <td>9.386</td>\n",
       "      <td>27.99550</td>\n",
       "      <td>38.1380</td>\n",
       "      <td>45.82100</td>\n",
       "      <td>73.254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1002.0</td>\n",
       "      <td>36.680148</td>\n",
       "      <td>10.973675</td>\n",
       "      <td>9.223</td>\n",
       "      <td>27.41700</td>\n",
       "      <td>37.6990</td>\n",
       "      <td>45.22500</td>\n",
       "      <td>68.885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1004.0</td>\n",
       "      <td>36.439876</td>\n",
       "      <td>10.838175</td>\n",
       "      <td>9.119</td>\n",
       "      <td>27.77475</td>\n",
       "      <td>37.5245</td>\n",
       "      <td>44.85000</td>\n",
       "      <td>69.004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>940.0</td>\n",
       "      <td>36.314674</td>\n",
       "      <td>10.757307</td>\n",
       "      <td>10.676</td>\n",
       "      <td>27.49525</td>\n",
       "      <td>37.4525</td>\n",
       "      <td>44.85275</td>\n",
       "      <td>64.095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>936.0</td>\n",
       "      <td>36.496780</td>\n",
       "      <td>10.762784</td>\n",
       "      <td>10.533</td>\n",
       "      <td>27.30575</td>\n",
       "      <td>38.0765</td>\n",
       "      <td>44.96300</td>\n",
       "      <td>67.704</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>970.0</td>\n",
       "      <td>35.946789</td>\n",
       "      <td>10.553958</td>\n",
       "      <td>9.249</td>\n",
       "      <td>26.88275</td>\n",
       "      <td>37.6325</td>\n",
       "      <td>44.33200</td>\n",
       "      <td>67.838</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>970.0</td>\n",
       "      <td>35.442209</td>\n",
       "      <td>10.613255</td>\n",
       "      <td>9.794</td>\n",
       "      <td>26.94250</td>\n",
       "      <td>36.5725</td>\n",
       "      <td>43.71625</td>\n",
       "      <td>63.806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>939.0</td>\n",
       "      <td>35.266459</td>\n",
       "      <td>10.843181</td>\n",
       "      <td>9.366</td>\n",
       "      <td>26.54650</td>\n",
       "      <td>36.5600</td>\n",
       "      <td>43.98900</td>\n",
       "      <td>67.756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>953.0</td>\n",
       "      <td>34.761286</td>\n",
       "      <td>10.701859</td>\n",
       "      <td>9.246</td>\n",
       "      <td>25.85000</td>\n",
       "      <td>35.9700</td>\n",
       "      <td>43.27800</td>\n",
       "      <td>68.638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1019.0</td>\n",
       "      <td>33.875226</td>\n",
       "      <td>10.702079</td>\n",
       "      <td>7.377</td>\n",
       "      <td>25.41850</td>\n",
       "      <td>34.9320</td>\n",
       "      <td>42.03000</td>\n",
       "      <td>68.549</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1069.0</td>\n",
       "      <td>32.557291</td>\n",
       "      <td>10.397898</td>\n",
       "      <td>7.435</td>\n",
       "      <td>24.30200</td>\n",
       "      <td>33.1570</td>\n",
       "      <td>40.61000</td>\n",
       "      <td>62.386</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1028.0</td>\n",
       "      <td>31.321256</td>\n",
       "      <td>9.315935</td>\n",
       "      <td>7.696</td>\n",
       "      <td>24.13650</td>\n",
       "      <td>32.2510</td>\n",
       "      <td>38.28100</td>\n",
       "      <td>61.553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>986.0</td>\n",
       "      <td>32.915629</td>\n",
       "      <td>9.054736</td>\n",
       "      <td>9.084</td>\n",
       "      <td>25.48125</td>\n",
       "      <td>34.0450</td>\n",
       "      <td>39.97625</td>\n",
       "      <td>59.766</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>997.0</td>\n",
       "      <td>34.454391</td>\n",
       "      <td>9.206671</td>\n",
       "      <td>10.284</td>\n",
       "      <td>26.64600</td>\n",
       "      <td>35.6440</td>\n",
       "      <td>41.74400</td>\n",
       "      <td>64.377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>929.0</td>\n",
       "      <td>36.356044</td>\n",
       "      <td>9.590348</td>\n",
       "      <td>10.838</td>\n",
       "      <td>28.13600</td>\n",
       "      <td>38.0520</td>\n",
       "      <td>44.26600</td>\n",
       "      <td>59.322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>873.0</td>\n",
       "      <td>37.660901</td>\n",
       "      <td>10.000058</td>\n",
       "      <td>12.591</td>\n",
       "      <td>29.44900</td>\n",
       "      <td>39.1710</td>\n",
       "      <td>45.91900</td>\n",
       "      <td>58.244</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              count       mean        std     min       25%      50%  \\\n",
       "hour_of_day                                                            \n",
       "0             757.0  38.681472  10.396021  13.068  30.27300  40.5680   \n",
       "1             732.0  40.026432  10.705425  14.162  31.37875  41.8085   \n",
       "2             661.0  41.073440  10.840924  16.777  32.51200  43.3150   \n",
       "3             308.0  42.828734  10.141969  14.300  36.32400  45.0695   \n",
       "4             588.0  41.008236  10.518500  12.608  31.88475  42.9455   \n",
       "5             680.0  39.887540  10.738152  12.521  30.92175  41.6370   \n",
       "6             768.0  38.408611  10.993107   9.713  28.51100  39.6500   \n",
       "7             934.0  37.614449  11.235127   8.861  28.21675  38.2295   \n",
       "8            1003.0  37.280898  11.126989   9.386  27.99550  38.1380   \n",
       "9            1002.0  36.680148  10.973675   9.223  27.41700  37.6990   \n",
       "10           1004.0  36.439876  10.838175   9.119  27.77475  37.5245   \n",
       "11            940.0  36.314674  10.757307  10.676  27.49525  37.4525   \n",
       "12            936.0  36.496780  10.762784  10.533  27.30575  38.0765   \n",
       "13            970.0  35.946789  10.553958   9.249  26.88275  37.6325   \n",
       "14            970.0  35.442209  10.613255   9.794  26.94250  36.5725   \n",
       "15            939.0  35.266459  10.843181   9.366  26.54650  36.5600   \n",
       "16            953.0  34.761286  10.701859   9.246  25.85000  35.9700   \n",
       "17           1019.0  33.875226  10.702079   7.377  25.41850  34.9320   \n",
       "18           1069.0  32.557291  10.397898   7.435  24.30200  33.1570   \n",
       "19           1028.0  31.321256   9.315935   7.696  24.13650  32.2510   \n",
       "20            986.0  32.915629   9.054736   9.084  25.48125  34.0450   \n",
       "21            997.0  34.454391   9.206671  10.284  26.64600  35.6440   \n",
       "22            929.0  36.356044   9.590348  10.838  28.13600  38.0520   \n",
       "23            873.0  37.660901  10.000058  12.591  29.44900  39.1710   \n",
       "\n",
       "                  75%     max  \n",
       "hour_of_day                    \n",
       "0            47.12500  59.800  \n",
       "1            48.47775  60.850  \n",
       "2            49.60700  63.017  \n",
       "3            50.61200  60.224  \n",
       "4            48.98350  62.547  \n",
       "5            48.47975  62.145  \n",
       "6            47.41225  69.687  \n",
       "7            46.73100  75.108  \n",
       "8            45.82100  73.254  \n",
       "9            45.22500  68.885  \n",
       "10           44.85000  69.004  \n",
       "11           44.85275  64.095  \n",
       "12           44.96300  67.704  \n",
       "13           44.33200  67.838  \n",
       "14           43.71625  63.806  \n",
       "15           43.98900  67.756  \n",
       "16           43.27800  68.638  \n",
       "17           42.03000  68.549  \n",
       "18           40.61000  62.386  \n",
       "19           38.28100  61.553  \n",
       "20           39.97625  59.766  \n",
       "21           41.74400  64.377  \n",
       "22           44.26600  59.322  \n",
       "23           45.91900  58.244  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "KiambuRoad\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>627.0</td>\n",
       "      <td>44.889410</td>\n",
       "      <td>10.287215</td>\n",
       "      <td>18.062</td>\n",
       "      <td>37.56450</td>\n",
       "      <td>46.4040</td>\n",
       "      <td>52.76900</td>\n",
       "      <td>65.449</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>621.0</td>\n",
       "      <td>45.358523</td>\n",
       "      <td>10.068428</td>\n",
       "      <td>17.013</td>\n",
       "      <td>38.10800</td>\n",
       "      <td>47.1760</td>\n",
       "      <td>52.90800</td>\n",
       "      <td>65.778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>539.0</td>\n",
       "      <td>44.865293</td>\n",
       "      <td>10.014538</td>\n",
       "      <td>16.970</td>\n",
       "      <td>38.05050</td>\n",
       "      <td>46.4550</td>\n",
       "      <td>52.47050</td>\n",
       "      <td>65.951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>447.0</td>\n",
       "      <td>44.592058</td>\n",
       "      <td>9.599279</td>\n",
       "      <td>21.445</td>\n",
       "      <td>37.36550</td>\n",
       "      <td>46.9650</td>\n",
       "      <td>51.85250</td>\n",
       "      <td>67.232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>491.0</td>\n",
       "      <td>46.185921</td>\n",
       "      <td>10.599735</td>\n",
       "      <td>18.008</td>\n",
       "      <td>38.38250</td>\n",
       "      <td>47.8990</td>\n",
       "      <td>53.79750</td>\n",
       "      <td>66.871</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>491.0</td>\n",
       "      <td>44.760069</td>\n",
       "      <td>9.836455</td>\n",
       "      <td>22.415</td>\n",
       "      <td>37.79400</td>\n",
       "      <td>46.1550</td>\n",
       "      <td>51.41750</td>\n",
       "      <td>64.920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>492.0</td>\n",
       "      <td>42.302911</td>\n",
       "      <td>9.948789</td>\n",
       "      <td>16.916</td>\n",
       "      <td>34.48275</td>\n",
       "      <td>43.9975</td>\n",
       "      <td>49.61825</td>\n",
       "      <td>64.639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>501.0</td>\n",
       "      <td>40.222629</td>\n",
       "      <td>10.000511</td>\n",
       "      <td>17.053</td>\n",
       "      <td>32.60700</td>\n",
       "      <td>41.2900</td>\n",
       "      <td>46.92500</td>\n",
       "      <td>63.305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>516.0</td>\n",
       "      <td>38.738839</td>\n",
       "      <td>9.750358</td>\n",
       "      <td>16.455</td>\n",
       "      <td>31.42400</td>\n",
       "      <td>39.5090</td>\n",
       "      <td>45.41775</td>\n",
       "      <td>60.603</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>596.0</td>\n",
       "      <td>39.269779</td>\n",
       "      <td>10.948961</td>\n",
       "      <td>15.196</td>\n",
       "      <td>30.99050</td>\n",
       "      <td>38.9690</td>\n",
       "      <td>47.00300</td>\n",
       "      <td>65.564</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>725.0</td>\n",
       "      <td>41.193836</td>\n",
       "      <td>11.921780</td>\n",
       "      <td>15.750</td>\n",
       "      <td>32.82100</td>\n",
       "      <td>39.8170</td>\n",
       "      <td>50.88100</td>\n",
       "      <td>66.312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>720.0</td>\n",
       "      <td>40.590708</td>\n",
       "      <td>12.173631</td>\n",
       "      <td>15.853</td>\n",
       "      <td>31.88000</td>\n",
       "      <td>39.4115</td>\n",
       "      <td>50.60375</td>\n",
       "      <td>69.235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>721.0</td>\n",
       "      <td>40.794911</td>\n",
       "      <td>12.437804</td>\n",
       "      <td>16.723</td>\n",
       "      <td>31.42700</td>\n",
       "      <td>39.3100</td>\n",
       "      <td>50.55900</td>\n",
       "      <td>70.320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>730.0</td>\n",
       "      <td>39.921760</td>\n",
       "      <td>11.432356</td>\n",
       "      <td>14.688</td>\n",
       "      <td>30.46725</td>\n",
       "      <td>39.2685</td>\n",
       "      <td>49.54825</td>\n",
       "      <td>68.618</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>768.0</td>\n",
       "      <td>40.485503</td>\n",
       "      <td>12.399161</td>\n",
       "      <td>15.863</td>\n",
       "      <td>30.09375</td>\n",
       "      <td>39.5460</td>\n",
       "      <td>50.55450</td>\n",
       "      <td>70.270</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>788.0</td>\n",
       "      <td>40.682237</td>\n",
       "      <td>12.636413</td>\n",
       "      <td>15.962</td>\n",
       "      <td>29.74250</td>\n",
       "      <td>39.2325</td>\n",
       "      <td>52.04225</td>\n",
       "      <td>69.636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>720.0</td>\n",
       "      <td>39.066776</td>\n",
       "      <td>11.933178</td>\n",
       "      <td>15.944</td>\n",
       "      <td>29.26800</td>\n",
       "      <td>37.5665</td>\n",
       "      <td>49.00325</td>\n",
       "      <td>66.313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>683.0</td>\n",
       "      <td>38.248597</td>\n",
       "      <td>11.333653</td>\n",
       "      <td>15.063</td>\n",
       "      <td>29.84800</td>\n",
       "      <td>36.6060</td>\n",
       "      <td>47.11900</td>\n",
       "      <td>60.064</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>658.0</td>\n",
       "      <td>36.659324</td>\n",
       "      <td>11.399991</td>\n",
       "      <td>12.815</td>\n",
       "      <td>28.28775</td>\n",
       "      <td>35.3420</td>\n",
       "      <td>45.42525</td>\n",
       "      <td>65.339</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>669.0</td>\n",
       "      <td>34.680422</td>\n",
       "      <td>9.858271</td>\n",
       "      <td>13.838</td>\n",
       "      <td>26.77200</td>\n",
       "      <td>34.6830</td>\n",
       "      <td>42.68000</td>\n",
       "      <td>54.395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>733.0</td>\n",
       "      <td>38.182986</td>\n",
       "      <td>10.306411</td>\n",
       "      <td>15.301</td>\n",
       "      <td>30.26400</td>\n",
       "      <td>38.6380</td>\n",
       "      <td>46.92300</td>\n",
       "      <td>57.299</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>674.0</td>\n",
       "      <td>40.282332</td>\n",
       "      <td>10.173321</td>\n",
       "      <td>15.396</td>\n",
       "      <td>33.12325</td>\n",
       "      <td>40.8115</td>\n",
       "      <td>48.06550</td>\n",
       "      <td>63.320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>672.0</td>\n",
       "      <td>42.627635</td>\n",
       "      <td>10.349996</td>\n",
       "      <td>16.729</td>\n",
       "      <td>35.32725</td>\n",
       "      <td>43.6965</td>\n",
       "      <td>50.59925</td>\n",
       "      <td>64.431</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>656.0</td>\n",
       "      <td>43.559259</td>\n",
       "      <td>10.116470</td>\n",
       "      <td>17.626</td>\n",
       "      <td>35.95450</td>\n",
       "      <td>45.3385</td>\n",
       "      <td>51.46025</td>\n",
       "      <td>63.410</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             count       mean        std     min       25%      50%       75%  \\\n",
       "hour_of_day                                                                     \n",
       "0            627.0  44.889410  10.287215  18.062  37.56450  46.4040  52.76900   \n",
       "1            621.0  45.358523  10.068428  17.013  38.10800  47.1760  52.90800   \n",
       "2            539.0  44.865293  10.014538  16.970  38.05050  46.4550  52.47050   \n",
       "3            447.0  44.592058   9.599279  21.445  37.36550  46.9650  51.85250   \n",
       "4            491.0  46.185921  10.599735  18.008  38.38250  47.8990  53.79750   \n",
       "5            491.0  44.760069   9.836455  22.415  37.79400  46.1550  51.41750   \n",
       "6            492.0  42.302911   9.948789  16.916  34.48275  43.9975  49.61825   \n",
       "7            501.0  40.222629  10.000511  17.053  32.60700  41.2900  46.92500   \n",
       "8            516.0  38.738839   9.750358  16.455  31.42400  39.5090  45.41775   \n",
       "9            596.0  39.269779  10.948961  15.196  30.99050  38.9690  47.00300   \n",
       "10           725.0  41.193836  11.921780  15.750  32.82100  39.8170  50.88100   \n",
       "11           720.0  40.590708  12.173631  15.853  31.88000  39.4115  50.60375   \n",
       "12           721.0  40.794911  12.437804  16.723  31.42700  39.3100  50.55900   \n",
       "13           730.0  39.921760  11.432356  14.688  30.46725  39.2685  49.54825   \n",
       "14           768.0  40.485503  12.399161  15.863  30.09375  39.5460  50.55450   \n",
       "15           788.0  40.682237  12.636413  15.962  29.74250  39.2325  52.04225   \n",
       "16           720.0  39.066776  11.933178  15.944  29.26800  37.5665  49.00325   \n",
       "17           683.0  38.248597  11.333653  15.063  29.84800  36.6060  47.11900   \n",
       "18           658.0  36.659324  11.399991  12.815  28.28775  35.3420  45.42525   \n",
       "19           669.0  34.680422   9.858271  13.838  26.77200  34.6830  42.68000   \n",
       "20           733.0  38.182986  10.306411  15.301  30.26400  38.6380  46.92300   \n",
       "21           674.0  40.282332  10.173321  15.396  33.12325  40.8115  48.06550   \n",
       "22           672.0  42.627635  10.349996  16.729  35.32725  43.6965  50.59925   \n",
       "23           656.0  43.559259  10.116470  17.626  35.95450  45.3385  51.46025   \n",
       "\n",
       "                max  \n",
       "hour_of_day          \n",
       "0            65.449  \n",
       "1            65.778  \n",
       "2            65.951  \n",
       "3            67.232  \n",
       "4            66.871  \n",
       "5            64.920  \n",
       "6            64.639  \n",
       "7            63.305  \n",
       "8            60.603  \n",
       "9            65.564  \n",
       "10           66.312  \n",
       "11           69.235  \n",
       "12           70.320  \n",
       "13           68.618  \n",
       "14           70.270  \n",
       "15           69.636  \n",
       "16           66.313  \n",
       "17           60.064  \n",
       "18           65.339  \n",
       "19           54.395  \n",
       "20           57.299  \n",
       "21           63.320  \n",
       "22           64.431  \n",
       "23           63.410  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "DagorettiRoad\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>494.0</td>\n",
       "      <td>47.791538</td>\n",
       "      <td>9.943112</td>\n",
       "      <td>18.091</td>\n",
       "      <td>42.14275</td>\n",
       "      <td>50.2890</td>\n",
       "      <td>55.07700</td>\n",
       "      <td>67.708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>415.0</td>\n",
       "      <td>48.720219</td>\n",
       "      <td>9.960261</td>\n",
       "      <td>20.926</td>\n",
       "      <td>43.02450</td>\n",
       "      <td>51.7040</td>\n",
       "      <td>55.94000</td>\n",
       "      <td>66.751</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>312.0</td>\n",
       "      <td>47.570788</td>\n",
       "      <td>9.513064</td>\n",
       "      <td>19.183</td>\n",
       "      <td>42.56775</td>\n",
       "      <td>49.2220</td>\n",
       "      <td>54.59975</td>\n",
       "      <td>64.773</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>69.0</td>\n",
       "      <td>50.651812</td>\n",
       "      <td>6.562324</td>\n",
       "      <td>24.202</td>\n",
       "      <td>47.45600</td>\n",
       "      <td>51.8150</td>\n",
       "      <td>54.48600</td>\n",
       "      <td>61.719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>264.0</td>\n",
       "      <td>48.197996</td>\n",
       "      <td>10.003723</td>\n",
       "      <td>22.059</td>\n",
       "      <td>42.40925</td>\n",
       "      <td>50.7025</td>\n",
       "      <td>56.20300</td>\n",
       "      <td>65.895</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>294.0</td>\n",
       "      <td>46.967629</td>\n",
       "      <td>10.756643</td>\n",
       "      <td>18.856</td>\n",
       "      <td>40.66125</td>\n",
       "      <td>49.2090</td>\n",
       "      <td>54.89200</td>\n",
       "      <td>68.347</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>427.0</td>\n",
       "      <td>48.450307</td>\n",
       "      <td>12.102701</td>\n",
       "      <td>15.514</td>\n",
       "      <td>42.52350</td>\n",
       "      <td>51.7780</td>\n",
       "      <td>57.74850</td>\n",
       "      <td>68.153</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>524.0</td>\n",
       "      <td>47.251941</td>\n",
       "      <td>11.251732</td>\n",
       "      <td>15.405</td>\n",
       "      <td>41.83900</td>\n",
       "      <td>49.8975</td>\n",
       "      <td>55.61600</td>\n",
       "      <td>65.570</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>598.0</td>\n",
       "      <td>47.081112</td>\n",
       "      <td>10.932433</td>\n",
       "      <td>13.749</td>\n",
       "      <td>41.44200</td>\n",
       "      <td>49.6415</td>\n",
       "      <td>55.07375</td>\n",
       "      <td>67.134</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>644.0</td>\n",
       "      <td>47.698217</td>\n",
       "      <td>11.015446</td>\n",
       "      <td>12.470</td>\n",
       "      <td>43.02275</td>\n",
       "      <td>50.3565</td>\n",
       "      <td>55.69975</td>\n",
       "      <td>69.291</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>715.0</td>\n",
       "      <td>47.707800</td>\n",
       "      <td>11.055160</td>\n",
       "      <td>11.254</td>\n",
       "      <td>42.38450</td>\n",
       "      <td>50.5580</td>\n",
       "      <td>55.24700</td>\n",
       "      <td>70.757</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>702.0</td>\n",
       "      <td>47.804486</td>\n",
       "      <td>10.913427</td>\n",
       "      <td>11.919</td>\n",
       "      <td>42.50800</td>\n",
       "      <td>50.5310</td>\n",
       "      <td>54.95150</td>\n",
       "      <td>71.989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>727.0</td>\n",
       "      <td>47.481298</td>\n",
       "      <td>11.132749</td>\n",
       "      <td>10.846</td>\n",
       "      <td>41.66750</td>\n",
       "      <td>50.4050</td>\n",
       "      <td>54.67250</td>\n",
       "      <td>72.132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>751.0</td>\n",
       "      <td>47.602820</td>\n",
       "      <td>11.201518</td>\n",
       "      <td>12.088</td>\n",
       "      <td>41.84100</td>\n",
       "      <td>50.2560</td>\n",
       "      <td>55.29000</td>\n",
       "      <td>75.341</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>824.0</td>\n",
       "      <td>47.355123</td>\n",
       "      <td>10.939365</td>\n",
       "      <td>11.063</td>\n",
       "      <td>41.37925</td>\n",
       "      <td>49.7445</td>\n",
       "      <td>54.83000</td>\n",
       "      <td>73.328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>757.0</td>\n",
       "      <td>46.727794</td>\n",
       "      <td>11.155522</td>\n",
       "      <td>10.292</td>\n",
       "      <td>40.55000</td>\n",
       "      <td>49.3320</td>\n",
       "      <td>54.48100</td>\n",
       "      <td>74.603</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>777.0</td>\n",
       "      <td>46.334207</td>\n",
       "      <td>11.263356</td>\n",
       "      <td>10.241</td>\n",
       "      <td>40.46300</td>\n",
       "      <td>48.8240</td>\n",
       "      <td>53.51500</td>\n",
       "      <td>73.052</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>722.0</td>\n",
       "      <td>44.490416</td>\n",
       "      <td>11.048727</td>\n",
       "      <td>8.267</td>\n",
       "      <td>39.05475</td>\n",
       "      <td>46.6430</td>\n",
       "      <td>52.19450</td>\n",
       "      <td>71.182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>730.0</td>\n",
       "      <td>43.278622</td>\n",
       "      <td>10.422264</td>\n",
       "      <td>7.978</td>\n",
       "      <td>37.67875</td>\n",
       "      <td>45.2630</td>\n",
       "      <td>50.25900</td>\n",
       "      <td>68.947</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>778.0</td>\n",
       "      <td>41.210343</td>\n",
       "      <td>9.359038</td>\n",
       "      <td>9.428</td>\n",
       "      <td>36.36900</td>\n",
       "      <td>43.2495</td>\n",
       "      <td>47.69450</td>\n",
       "      <td>60.359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>706.0</td>\n",
       "      <td>43.356847</td>\n",
       "      <td>9.251099</td>\n",
       "      <td>12.835</td>\n",
       "      <td>38.91950</td>\n",
       "      <td>46.0105</td>\n",
       "      <td>49.51275</td>\n",
       "      <td>63.549</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>667.0</td>\n",
       "      <td>45.271744</td>\n",
       "      <td>9.834220</td>\n",
       "      <td>14.760</td>\n",
       "      <td>39.84200</td>\n",
       "      <td>48.0670</td>\n",
       "      <td>52.15350</td>\n",
       "      <td>63.942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>661.0</td>\n",
       "      <td>46.897959</td>\n",
       "      <td>9.874066</td>\n",
       "      <td>17.327</td>\n",
       "      <td>41.43300</td>\n",
       "      <td>49.2810</td>\n",
       "      <td>54.07900</td>\n",
       "      <td>65.566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>573.0</td>\n",
       "      <td>47.793670</td>\n",
       "      <td>9.716342</td>\n",
       "      <td>19.969</td>\n",
       "      <td>41.95600</td>\n",
       "      <td>50.5840</td>\n",
       "      <td>55.16000</td>\n",
       "      <td>65.133</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             count       mean        std     min       25%      50%       75%  \\\n",
       "hour_of_day                                                                     \n",
       "0            494.0  47.791538   9.943112  18.091  42.14275  50.2890  55.07700   \n",
       "1            415.0  48.720219   9.960261  20.926  43.02450  51.7040  55.94000   \n",
       "2            312.0  47.570788   9.513064  19.183  42.56775  49.2220  54.59975   \n",
       "3             69.0  50.651812   6.562324  24.202  47.45600  51.8150  54.48600   \n",
       "4            264.0  48.197996  10.003723  22.059  42.40925  50.7025  56.20300   \n",
       "5            294.0  46.967629  10.756643  18.856  40.66125  49.2090  54.89200   \n",
       "6            427.0  48.450307  12.102701  15.514  42.52350  51.7780  57.74850   \n",
       "7            524.0  47.251941  11.251732  15.405  41.83900  49.8975  55.61600   \n",
       "8            598.0  47.081112  10.932433  13.749  41.44200  49.6415  55.07375   \n",
       "9            644.0  47.698217  11.015446  12.470  43.02275  50.3565  55.69975   \n",
       "10           715.0  47.707800  11.055160  11.254  42.38450  50.5580  55.24700   \n",
       "11           702.0  47.804486  10.913427  11.919  42.50800  50.5310  54.95150   \n",
       "12           727.0  47.481298  11.132749  10.846  41.66750  50.4050  54.67250   \n",
       "13           751.0  47.602820  11.201518  12.088  41.84100  50.2560  55.29000   \n",
       "14           824.0  47.355123  10.939365  11.063  41.37925  49.7445  54.83000   \n",
       "15           757.0  46.727794  11.155522  10.292  40.55000  49.3320  54.48100   \n",
       "16           777.0  46.334207  11.263356  10.241  40.46300  48.8240  53.51500   \n",
       "17           722.0  44.490416  11.048727   8.267  39.05475  46.6430  52.19450   \n",
       "18           730.0  43.278622  10.422264   7.978  37.67875  45.2630  50.25900   \n",
       "19           778.0  41.210343   9.359038   9.428  36.36900  43.2495  47.69450   \n",
       "20           706.0  43.356847   9.251099  12.835  38.91950  46.0105  49.51275   \n",
       "21           667.0  45.271744   9.834220  14.760  39.84200  48.0670  52.15350   \n",
       "22           661.0  46.897959   9.874066  17.327  41.43300  49.2810  54.07900   \n",
       "23           573.0  47.793670   9.716342  19.969  41.95600  50.5840  55.16000   \n",
       "\n",
       "                max  \n",
       "hour_of_day          \n",
       "0            67.708  \n",
       "1            66.751  \n",
       "2            64.773  \n",
       "3            61.719  \n",
       "4            65.895  \n",
       "5            68.347  \n",
       "6            68.153  \n",
       "7            65.570  \n",
       "8            67.134  \n",
       "9            69.291  \n",
       "10           70.757  \n",
       "11           71.989  \n",
       "12           72.132  \n",
       "13           75.341  \n",
       "14           73.328  \n",
       "15           74.603  \n",
       "16           73.052  \n",
       "17           71.182  \n",
       "18           68.947  \n",
       "19           60.359  \n",
       "20           63.549  \n",
       "21           63.942  \n",
       "22           65.566  \n",
       "23           65.133  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "GetathuruRoad\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>544.0</td>\n",
       "      <td>45.854533</td>\n",
       "      <td>8.516622</td>\n",
       "      <td>21.430</td>\n",
       "      <td>40.99850</td>\n",
       "      <td>47.8875</td>\n",
       "      <td>52.18425</td>\n",
       "      <td>61.306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>544.0</td>\n",
       "      <td>46.992454</td>\n",
       "      <td>9.116142</td>\n",
       "      <td>22.826</td>\n",
       "      <td>41.32325</td>\n",
       "      <td>49.0835</td>\n",
       "      <td>53.40050</td>\n",
       "      <td>64.109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>544.0</td>\n",
       "      <td>48.348653</td>\n",
       "      <td>9.949599</td>\n",
       "      <td>22.762</td>\n",
       "      <td>42.08175</td>\n",
       "      <td>49.8135</td>\n",
       "      <td>55.80725</td>\n",
       "      <td>67.995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>384.0</td>\n",
       "      <td>46.716052</td>\n",
       "      <td>8.845560</td>\n",
       "      <td>21.826</td>\n",
       "      <td>41.50475</td>\n",
       "      <td>48.5490</td>\n",
       "      <td>53.58225</td>\n",
       "      <td>61.516</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>544.0</td>\n",
       "      <td>47.766156</td>\n",
       "      <td>9.995325</td>\n",
       "      <td>23.244</td>\n",
       "      <td>40.97600</td>\n",
       "      <td>48.6080</td>\n",
       "      <td>56.03425</td>\n",
       "      <td>66.758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>544.0</td>\n",
       "      <td>46.755535</td>\n",
       "      <td>9.411995</td>\n",
       "      <td>21.365</td>\n",
       "      <td>41.29850</td>\n",
       "      <td>47.9500</td>\n",
       "      <td>52.99075</td>\n",
       "      <td>66.021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>544.0</td>\n",
       "      <td>47.500829</td>\n",
       "      <td>9.459194</td>\n",
       "      <td>19.123</td>\n",
       "      <td>42.13500</td>\n",
       "      <td>49.5230</td>\n",
       "      <td>54.93225</td>\n",
       "      <td>64.439</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>544.0</td>\n",
       "      <td>48.318119</td>\n",
       "      <td>9.752504</td>\n",
       "      <td>21.755</td>\n",
       "      <td>42.39925</td>\n",
       "      <td>50.5950</td>\n",
       "      <td>55.60725</td>\n",
       "      <td>64.562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>544.0</td>\n",
       "      <td>48.234075</td>\n",
       "      <td>9.623510</td>\n",
       "      <td>22.450</td>\n",
       "      <td>42.25850</td>\n",
       "      <td>50.5835</td>\n",
       "      <td>55.88625</td>\n",
       "      <td>63.758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>544.0</td>\n",
       "      <td>47.560577</td>\n",
       "      <td>9.738678</td>\n",
       "      <td>20.908</td>\n",
       "      <td>40.85125</td>\n",
       "      <td>50.1870</td>\n",
       "      <td>55.13325</td>\n",
       "      <td>64.122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>544.0</td>\n",
       "      <td>46.628717</td>\n",
       "      <td>9.556378</td>\n",
       "      <td>20.104</td>\n",
       "      <td>40.00050</td>\n",
       "      <td>49.2375</td>\n",
       "      <td>54.03525</td>\n",
       "      <td>61.918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>544.0</td>\n",
       "      <td>46.637515</td>\n",
       "      <td>9.635682</td>\n",
       "      <td>20.298</td>\n",
       "      <td>39.85175</td>\n",
       "      <td>49.5165</td>\n",
       "      <td>53.95750</td>\n",
       "      <td>62.348</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>544.0</td>\n",
       "      <td>46.382886</td>\n",
       "      <td>9.251964</td>\n",
       "      <td>22.267</td>\n",
       "      <td>40.21625</td>\n",
       "      <td>49.2850</td>\n",
       "      <td>53.53725</td>\n",
       "      <td>60.010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>544.0</td>\n",
       "      <td>46.294522</td>\n",
       "      <td>9.437387</td>\n",
       "      <td>19.299</td>\n",
       "      <td>40.10425</td>\n",
       "      <td>49.0470</td>\n",
       "      <td>53.66275</td>\n",
       "      <td>62.510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>544.0</td>\n",
       "      <td>45.932493</td>\n",
       "      <td>9.316259</td>\n",
       "      <td>20.015</td>\n",
       "      <td>39.61150</td>\n",
       "      <td>48.5210</td>\n",
       "      <td>53.02825</td>\n",
       "      <td>60.726</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>544.0</td>\n",
       "      <td>45.630568</td>\n",
       "      <td>9.098782</td>\n",
       "      <td>19.894</td>\n",
       "      <td>39.87200</td>\n",
       "      <td>48.2845</td>\n",
       "      <td>52.87300</td>\n",
       "      <td>59.278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>544.0</td>\n",
       "      <td>45.222347</td>\n",
       "      <td>9.275614</td>\n",
       "      <td>21.090</td>\n",
       "      <td>39.32400</td>\n",
       "      <td>47.7490</td>\n",
       "      <td>52.19075</td>\n",
       "      <td>60.314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>544.0</td>\n",
       "      <td>43.943147</td>\n",
       "      <td>9.214483</td>\n",
       "      <td>19.349</td>\n",
       "      <td>38.11250</td>\n",
       "      <td>46.7050</td>\n",
       "      <td>50.87325</td>\n",
       "      <td>59.204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>544.0</td>\n",
       "      <td>41.821665</td>\n",
       "      <td>8.792331</td>\n",
       "      <td>18.522</td>\n",
       "      <td>36.12750</td>\n",
       "      <td>43.9505</td>\n",
       "      <td>48.63725</td>\n",
       "      <td>58.461</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>544.0</td>\n",
       "      <td>38.628750</td>\n",
       "      <td>7.162549</td>\n",
       "      <td>18.744</td>\n",
       "      <td>34.57800</td>\n",
       "      <td>40.1365</td>\n",
       "      <td>43.90200</td>\n",
       "      <td>52.496</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>544.0</td>\n",
       "      <td>40.419774</td>\n",
       "      <td>7.338097</td>\n",
       "      <td>19.873</td>\n",
       "      <td>36.41450</td>\n",
       "      <td>41.9325</td>\n",
       "      <td>46.14775</td>\n",
       "      <td>52.913</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>544.0</td>\n",
       "      <td>42.089897</td>\n",
       "      <td>7.503744</td>\n",
       "      <td>19.054</td>\n",
       "      <td>38.37600</td>\n",
       "      <td>43.8910</td>\n",
       "      <td>47.63325</td>\n",
       "      <td>54.205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>544.0</td>\n",
       "      <td>43.441419</td>\n",
       "      <td>7.677645</td>\n",
       "      <td>19.600</td>\n",
       "      <td>39.36025</td>\n",
       "      <td>45.3635</td>\n",
       "      <td>49.43175</td>\n",
       "      <td>56.486</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>544.0</td>\n",
       "      <td>44.719756</td>\n",
       "      <td>8.190562</td>\n",
       "      <td>21.084</td>\n",
       "      <td>40.13175</td>\n",
       "      <td>46.9925</td>\n",
       "      <td>50.52650</td>\n",
       "      <td>58.398</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             count       mean       std     min       25%      50%       75%  \\\n",
       "hour_of_day                                                                    \n",
       "0            544.0  45.854533  8.516622  21.430  40.99850  47.8875  52.18425   \n",
       "1            544.0  46.992454  9.116142  22.826  41.32325  49.0835  53.40050   \n",
       "2            544.0  48.348653  9.949599  22.762  42.08175  49.8135  55.80725   \n",
       "3            384.0  46.716052  8.845560  21.826  41.50475  48.5490  53.58225   \n",
       "4            544.0  47.766156  9.995325  23.244  40.97600  48.6080  56.03425   \n",
       "5            544.0  46.755535  9.411995  21.365  41.29850  47.9500  52.99075   \n",
       "6            544.0  47.500829  9.459194  19.123  42.13500  49.5230  54.93225   \n",
       "7            544.0  48.318119  9.752504  21.755  42.39925  50.5950  55.60725   \n",
       "8            544.0  48.234075  9.623510  22.450  42.25850  50.5835  55.88625   \n",
       "9            544.0  47.560577  9.738678  20.908  40.85125  50.1870  55.13325   \n",
       "10           544.0  46.628717  9.556378  20.104  40.00050  49.2375  54.03525   \n",
       "11           544.0  46.637515  9.635682  20.298  39.85175  49.5165  53.95750   \n",
       "12           544.0  46.382886  9.251964  22.267  40.21625  49.2850  53.53725   \n",
       "13           544.0  46.294522  9.437387  19.299  40.10425  49.0470  53.66275   \n",
       "14           544.0  45.932493  9.316259  20.015  39.61150  48.5210  53.02825   \n",
       "15           544.0  45.630568  9.098782  19.894  39.87200  48.2845  52.87300   \n",
       "16           544.0  45.222347  9.275614  21.090  39.32400  47.7490  52.19075   \n",
       "17           544.0  43.943147  9.214483  19.349  38.11250  46.7050  50.87325   \n",
       "18           544.0  41.821665  8.792331  18.522  36.12750  43.9505  48.63725   \n",
       "19           544.0  38.628750  7.162549  18.744  34.57800  40.1365  43.90200   \n",
       "20           544.0  40.419774  7.338097  19.873  36.41450  41.9325  46.14775   \n",
       "21           544.0  42.089897  7.503744  19.054  38.37600  43.8910  47.63325   \n",
       "22           544.0  43.441419  7.677645  19.600  39.36025  45.3635  49.43175   \n",
       "23           544.0  44.719756  8.190562  21.084  40.13175  46.9925  50.52650   \n",
       "\n",
       "                max  \n",
       "hour_of_day          \n",
       "0            61.306  \n",
       "1            64.109  \n",
       "2            67.995  \n",
       "3            61.516  \n",
       "4            66.758  \n",
       "5            66.021  \n",
       "6            64.439  \n",
       "7            64.562  \n",
       "8            63.758  \n",
       "9            64.122  \n",
       "10           61.918  \n",
       "11           62.348  \n",
       "12           60.010  \n",
       "13           62.510  \n",
       "14           60.726  \n",
       "15           59.278  \n",
       "16           60.314  \n",
       "17           59.204  \n",
       "18           58.461  \n",
       "19           52.496  \n",
       "20           52.913  \n",
       "21           54.205  \n",
       "22           56.486  \n",
       "23           58.398  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "LowerKabeteRoad\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>520.0</td>\n",
       "      <td>41.348556</td>\n",
       "      <td>9.014297</td>\n",
       "      <td>18.228</td>\n",
       "      <td>34.81750</td>\n",
       "      <td>43.1815</td>\n",
       "      <td>48.23325</td>\n",
       "      <td>61.093</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>520.0</td>\n",
       "      <td>42.028456</td>\n",
       "      <td>9.330475</td>\n",
       "      <td>18.603</td>\n",
       "      <td>35.17200</td>\n",
       "      <td>43.4695</td>\n",
       "      <td>48.88600</td>\n",
       "      <td>59.008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>518.0</td>\n",
       "      <td>42.153097</td>\n",
       "      <td>9.094405</td>\n",
       "      <td>18.440</td>\n",
       "      <td>35.17475</td>\n",
       "      <td>44.2960</td>\n",
       "      <td>49.13250</td>\n",
       "      <td>59.549</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>434.0</td>\n",
       "      <td>42.917576</td>\n",
       "      <td>10.055268</td>\n",
       "      <td>18.928</td>\n",
       "      <td>35.20975</td>\n",
       "      <td>45.1335</td>\n",
       "      <td>50.17750</td>\n",
       "      <td>66.657</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>520.0</td>\n",
       "      <td>43.654669</td>\n",
       "      <td>10.174463</td>\n",
       "      <td>18.321</td>\n",
       "      <td>35.31500</td>\n",
       "      <td>45.0585</td>\n",
       "      <td>51.35950</td>\n",
       "      <td>67.998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>520.0</td>\n",
       "      <td>43.673648</td>\n",
       "      <td>10.502040</td>\n",
       "      <td>20.207</td>\n",
       "      <td>35.54475</td>\n",
       "      <td>44.0685</td>\n",
       "      <td>51.19925</td>\n",
       "      <td>68.638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>520.0</td>\n",
       "      <td>43.984348</td>\n",
       "      <td>10.680722</td>\n",
       "      <td>18.271</td>\n",
       "      <td>35.82675</td>\n",
       "      <td>43.8700</td>\n",
       "      <td>52.37275</td>\n",
       "      <td>65.867</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>520.0</td>\n",
       "      <td>42.986992</td>\n",
       "      <td>11.035404</td>\n",
       "      <td>18.895</td>\n",
       "      <td>34.05925</td>\n",
       "      <td>42.7655</td>\n",
       "      <td>52.02150</td>\n",
       "      <td>67.266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>520.0</td>\n",
       "      <td>42.775088</td>\n",
       "      <td>11.003729</td>\n",
       "      <td>18.996</td>\n",
       "      <td>33.81550</td>\n",
       "      <td>42.0075</td>\n",
       "      <td>51.81450</td>\n",
       "      <td>66.797</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>520.0</td>\n",
       "      <td>43.354488</td>\n",
       "      <td>10.628166</td>\n",
       "      <td>18.342</td>\n",
       "      <td>34.65725</td>\n",
       "      <td>43.1060</td>\n",
       "      <td>52.31400</td>\n",
       "      <td>64.831</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>520.0</td>\n",
       "      <td>43.423160</td>\n",
       "      <td>10.454485</td>\n",
       "      <td>18.137</td>\n",
       "      <td>35.59250</td>\n",
       "      <td>43.3025</td>\n",
       "      <td>52.30750</td>\n",
       "      <td>64.708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>520.0</td>\n",
       "      <td>43.155235</td>\n",
       "      <td>10.341918</td>\n",
       "      <td>18.661</td>\n",
       "      <td>35.07650</td>\n",
       "      <td>43.2155</td>\n",
       "      <td>51.62250</td>\n",
       "      <td>63.877</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>520.0</td>\n",
       "      <td>43.068081</td>\n",
       "      <td>10.290490</td>\n",
       "      <td>17.314</td>\n",
       "      <td>34.99150</td>\n",
       "      <td>43.3340</td>\n",
       "      <td>51.69925</td>\n",
       "      <td>63.514</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>520.0</td>\n",
       "      <td>42.862613</td>\n",
       "      <td>10.032992</td>\n",
       "      <td>17.886</td>\n",
       "      <td>35.44650</td>\n",
       "      <td>43.1695</td>\n",
       "      <td>51.28725</td>\n",
       "      <td>62.126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>520.0</td>\n",
       "      <td>42.456354</td>\n",
       "      <td>10.137685</td>\n",
       "      <td>17.997</td>\n",
       "      <td>34.77600</td>\n",
       "      <td>42.6990</td>\n",
       "      <td>50.71550</td>\n",
       "      <td>62.350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>520.0</td>\n",
       "      <td>42.414469</td>\n",
       "      <td>10.097597</td>\n",
       "      <td>17.939</td>\n",
       "      <td>34.46475</td>\n",
       "      <td>42.7150</td>\n",
       "      <td>50.54200</td>\n",
       "      <td>62.202</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>520.0</td>\n",
       "      <td>41.702375</td>\n",
       "      <td>9.861667</td>\n",
       "      <td>17.443</td>\n",
       "      <td>33.90475</td>\n",
       "      <td>42.1130</td>\n",
       "      <td>49.26275</td>\n",
       "      <td>61.602</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>520.0</td>\n",
       "      <td>41.020475</td>\n",
       "      <td>9.797199</td>\n",
       "      <td>16.846</td>\n",
       "      <td>33.24675</td>\n",
       "      <td>41.4880</td>\n",
       "      <td>48.72625</td>\n",
       "      <td>60.899</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>520.0</td>\n",
       "      <td>39.514096</td>\n",
       "      <td>9.226162</td>\n",
       "      <td>16.383</td>\n",
       "      <td>32.22550</td>\n",
       "      <td>39.6490</td>\n",
       "      <td>46.70300</td>\n",
       "      <td>61.160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>520.0</td>\n",
       "      <td>37.096204</td>\n",
       "      <td>7.872046</td>\n",
       "      <td>17.342</td>\n",
       "      <td>30.94825</td>\n",
       "      <td>37.1755</td>\n",
       "      <td>43.66625</td>\n",
       "      <td>53.497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>520.0</td>\n",
       "      <td>38.290627</td>\n",
       "      <td>8.120989</td>\n",
       "      <td>17.190</td>\n",
       "      <td>31.89550</td>\n",
       "      <td>38.5830</td>\n",
       "      <td>44.90575</td>\n",
       "      <td>56.236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>520.0</td>\n",
       "      <td>39.391452</td>\n",
       "      <td>8.340176</td>\n",
       "      <td>17.346</td>\n",
       "      <td>32.87325</td>\n",
       "      <td>40.3190</td>\n",
       "      <td>46.19025</td>\n",
       "      <td>55.640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>520.0</td>\n",
       "      <td>40.302019</td>\n",
       "      <td>8.446849</td>\n",
       "      <td>18.022</td>\n",
       "      <td>34.16525</td>\n",
       "      <td>41.6995</td>\n",
       "      <td>46.98225</td>\n",
       "      <td>56.671</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>520.0</td>\n",
       "      <td>40.920252</td>\n",
       "      <td>8.852360</td>\n",
       "      <td>18.667</td>\n",
       "      <td>34.86275</td>\n",
       "      <td>42.4845</td>\n",
       "      <td>47.69850</td>\n",
       "      <td>58.881</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             count       mean        std     min       25%      50%       75%  \\\n",
       "hour_of_day                                                                     \n",
       "0            520.0  41.348556   9.014297  18.228  34.81750  43.1815  48.23325   \n",
       "1            520.0  42.028456   9.330475  18.603  35.17200  43.4695  48.88600   \n",
       "2            518.0  42.153097   9.094405  18.440  35.17475  44.2960  49.13250   \n",
       "3            434.0  42.917576  10.055268  18.928  35.20975  45.1335  50.17750   \n",
       "4            520.0  43.654669  10.174463  18.321  35.31500  45.0585  51.35950   \n",
       "5            520.0  43.673648  10.502040  20.207  35.54475  44.0685  51.19925   \n",
       "6            520.0  43.984348  10.680722  18.271  35.82675  43.8700  52.37275   \n",
       "7            520.0  42.986992  11.035404  18.895  34.05925  42.7655  52.02150   \n",
       "8            520.0  42.775088  11.003729  18.996  33.81550  42.0075  51.81450   \n",
       "9            520.0  43.354488  10.628166  18.342  34.65725  43.1060  52.31400   \n",
       "10           520.0  43.423160  10.454485  18.137  35.59250  43.3025  52.30750   \n",
       "11           520.0  43.155235  10.341918  18.661  35.07650  43.2155  51.62250   \n",
       "12           520.0  43.068081  10.290490  17.314  34.99150  43.3340  51.69925   \n",
       "13           520.0  42.862613  10.032992  17.886  35.44650  43.1695  51.28725   \n",
       "14           520.0  42.456354  10.137685  17.997  34.77600  42.6990  50.71550   \n",
       "15           520.0  42.414469  10.097597  17.939  34.46475  42.7150  50.54200   \n",
       "16           520.0  41.702375   9.861667  17.443  33.90475  42.1130  49.26275   \n",
       "17           520.0  41.020475   9.797199  16.846  33.24675  41.4880  48.72625   \n",
       "18           520.0  39.514096   9.226162  16.383  32.22550  39.6490  46.70300   \n",
       "19           520.0  37.096204   7.872046  17.342  30.94825  37.1755  43.66625   \n",
       "20           520.0  38.290627   8.120989  17.190  31.89550  38.5830  44.90575   \n",
       "21           520.0  39.391452   8.340176  17.346  32.87325  40.3190  46.19025   \n",
       "22           520.0  40.302019   8.446849  18.022  34.16525  41.6995  46.98225   \n",
       "23           520.0  40.920252   8.852360  18.667  34.86275  42.4845  47.69850   \n",
       "\n",
       "                max  \n",
       "hour_of_day          \n",
       "0            61.093  \n",
       "1            59.008  \n",
       "2            59.549  \n",
       "3            66.657  \n",
       "4            67.998  \n",
       "5            68.638  \n",
       "6            65.867  \n",
       "7            67.266  \n",
       "8            66.797  \n",
       "9            64.831  \n",
       "10           64.708  \n",
       "11           63.877  \n",
       "12           63.514  \n",
       "13           62.126  \n",
       "14           62.350  \n",
       "15           62.202  \n",
       "16           61.602  \n",
       "17           60.899  \n",
       "18           61.160  \n",
       "19           53.497  \n",
       "20           56.236  \n",
       "21           55.640  \n",
       "22           56.671  \n",
       "23           58.881  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "Kihara-Gachie-KaruraRoad\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>227.0</td>\n",
       "      <td>31.011374</td>\n",
       "      <td>6.927660</td>\n",
       "      <td>14.503</td>\n",
       "      <td>25.97900</td>\n",
       "      <td>31.1240</td>\n",
       "      <td>35.69200</td>\n",
       "      <td>49.652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>122.0</td>\n",
       "      <td>29.249107</td>\n",
       "      <td>4.751531</td>\n",
       "      <td>18.741</td>\n",
       "      <td>25.03825</td>\n",
       "      <td>30.2780</td>\n",
       "      <td>32.87375</td>\n",
       "      <td>37.977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>87.0</td>\n",
       "      <td>29.550828</td>\n",
       "      <td>4.048071</td>\n",
       "      <td>20.426</td>\n",
       "      <td>26.32800</td>\n",
       "      <td>30.0890</td>\n",
       "      <td>32.58850</td>\n",
       "      <td>37.313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>65.0</td>\n",
       "      <td>27.902815</td>\n",
       "      <td>4.654137</td>\n",
       "      <td>18.280</td>\n",
       "      <td>24.18200</td>\n",
       "      <td>28.2310</td>\n",
       "      <td>30.67700</td>\n",
       "      <td>38.570</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>73.0</td>\n",
       "      <td>28.312315</td>\n",
       "      <td>5.522558</td>\n",
       "      <td>16.723</td>\n",
       "      <td>24.41300</td>\n",
       "      <td>28.4550</td>\n",
       "      <td>33.09700</td>\n",
       "      <td>38.422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>317.0</td>\n",
       "      <td>33.273536</td>\n",
       "      <td>8.808652</td>\n",
       "      <td>13.904</td>\n",
       "      <td>27.44600</td>\n",
       "      <td>32.5510</td>\n",
       "      <td>39.24400</td>\n",
       "      <td>55.534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>467.0</td>\n",
       "      <td>35.785368</td>\n",
       "      <td>11.067799</td>\n",
       "      <td>11.563</td>\n",
       "      <td>27.84500</td>\n",
       "      <td>34.4690</td>\n",
       "      <td>44.16300</td>\n",
       "      <td>58.924</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>593.0</td>\n",
       "      <td>37.422688</td>\n",
       "      <td>11.095799</td>\n",
       "      <td>13.929</td>\n",
       "      <td>29.81200</td>\n",
       "      <td>35.7840</td>\n",
       "      <td>46.20200</td>\n",
       "      <td>60.008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>708.0</td>\n",
       "      <td>36.451880</td>\n",
       "      <td>11.474105</td>\n",
       "      <td>11.915</td>\n",
       "      <td>28.40525</td>\n",
       "      <td>34.6550</td>\n",
       "      <td>45.20850</td>\n",
       "      <td>62.966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>599.0</td>\n",
       "      <td>35.417664</td>\n",
       "      <td>11.442152</td>\n",
       "      <td>12.565</td>\n",
       "      <td>26.72550</td>\n",
       "      <td>33.6680</td>\n",
       "      <td>44.32400</td>\n",
       "      <td>62.646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>669.0</td>\n",
       "      <td>35.748429</td>\n",
       "      <td>11.134595</td>\n",
       "      <td>12.187</td>\n",
       "      <td>27.96000</td>\n",
       "      <td>34.0580</td>\n",
       "      <td>44.59500</td>\n",
       "      <td>63.057</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>662.0</td>\n",
       "      <td>34.968784</td>\n",
       "      <td>10.442391</td>\n",
       "      <td>13.209</td>\n",
       "      <td>27.70025</td>\n",
       "      <td>34.1045</td>\n",
       "      <td>42.98325</td>\n",
       "      <td>61.762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>776.0</td>\n",
       "      <td>35.479323</td>\n",
       "      <td>11.153842</td>\n",
       "      <td>13.048</td>\n",
       "      <td>26.92150</td>\n",
       "      <td>33.5510</td>\n",
       "      <td>44.70825</td>\n",
       "      <td>59.479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>762.0</td>\n",
       "      <td>35.164735</td>\n",
       "      <td>11.062164</td>\n",
       "      <td>13.246</td>\n",
       "      <td>26.84975</td>\n",
       "      <td>32.9950</td>\n",
       "      <td>44.48525</td>\n",
       "      <td>59.315</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>738.0</td>\n",
       "      <td>33.801199</td>\n",
       "      <td>10.825234</td>\n",
       "      <td>10.196</td>\n",
       "      <td>26.02350</td>\n",
       "      <td>31.8180</td>\n",
       "      <td>43.02350</td>\n",
       "      <td>56.029</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>599.0</td>\n",
       "      <td>32.399796</td>\n",
       "      <td>10.026849</td>\n",
       "      <td>12.314</td>\n",
       "      <td>24.88750</td>\n",
       "      <td>31.4790</td>\n",
       "      <td>40.23900</td>\n",
       "      <td>56.224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>749.0</td>\n",
       "      <td>33.190340</td>\n",
       "      <td>10.940675</td>\n",
       "      <td>11.293</td>\n",
       "      <td>25.40700</td>\n",
       "      <td>31.5630</td>\n",
       "      <td>41.24100</td>\n",
       "      <td>57.664</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>749.0</td>\n",
       "      <td>31.975736</td>\n",
       "      <td>10.282366</td>\n",
       "      <td>9.024</td>\n",
       "      <td>24.44600</td>\n",
       "      <td>30.3950</td>\n",
       "      <td>40.35600</td>\n",
       "      <td>57.454</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>784.0</td>\n",
       "      <td>29.901108</td>\n",
       "      <td>9.689433</td>\n",
       "      <td>10.207</td>\n",
       "      <td>22.96650</td>\n",
       "      <td>27.8080</td>\n",
       "      <td>38.12350</td>\n",
       "      <td>52.274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>753.0</td>\n",
       "      <td>29.777347</td>\n",
       "      <td>9.385669</td>\n",
       "      <td>9.726</td>\n",
       "      <td>23.50700</td>\n",
       "      <td>28.2740</td>\n",
       "      <td>36.86900</td>\n",
       "      <td>53.643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>728.0</td>\n",
       "      <td>30.113749</td>\n",
       "      <td>9.268479</td>\n",
       "      <td>10.923</td>\n",
       "      <td>23.85225</td>\n",
       "      <td>28.4650</td>\n",
       "      <td>37.40450</td>\n",
       "      <td>52.325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>671.0</td>\n",
       "      <td>31.022747</td>\n",
       "      <td>10.097856</td>\n",
       "      <td>11.294</td>\n",
       "      <td>24.02300</td>\n",
       "      <td>29.2870</td>\n",
       "      <td>36.86800</td>\n",
       "      <td>58.098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>389.0</td>\n",
       "      <td>29.797859</td>\n",
       "      <td>9.432168</td>\n",
       "      <td>9.169</td>\n",
       "      <td>23.97000</td>\n",
       "      <td>28.7930</td>\n",
       "      <td>34.59700</td>\n",
       "      <td>53.401</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             count       mean        std     min       25%      50%       75%  \\\n",
       "hour_of_day                                                                     \n",
       "0            227.0  31.011374   6.927660  14.503  25.97900  31.1240  35.69200   \n",
       "1            122.0  29.249107   4.751531  18.741  25.03825  30.2780  32.87375   \n",
       "2             87.0  29.550828   4.048071  20.426  26.32800  30.0890  32.58850   \n",
       "4             65.0  27.902815   4.654137  18.280  24.18200  28.2310  30.67700   \n",
       "5             73.0  28.312315   5.522558  16.723  24.41300  28.4550  33.09700   \n",
       "6            317.0  33.273536   8.808652  13.904  27.44600  32.5510  39.24400   \n",
       "7            467.0  35.785368  11.067799  11.563  27.84500  34.4690  44.16300   \n",
       "8            593.0  37.422688  11.095799  13.929  29.81200  35.7840  46.20200   \n",
       "9            708.0  36.451880  11.474105  11.915  28.40525  34.6550  45.20850   \n",
       "10           599.0  35.417664  11.442152  12.565  26.72550  33.6680  44.32400   \n",
       "11           669.0  35.748429  11.134595  12.187  27.96000  34.0580  44.59500   \n",
       "12           662.0  34.968784  10.442391  13.209  27.70025  34.1045  42.98325   \n",
       "13           776.0  35.479323  11.153842  13.048  26.92150  33.5510  44.70825   \n",
       "14           762.0  35.164735  11.062164  13.246  26.84975  32.9950  44.48525   \n",
       "15           738.0  33.801199  10.825234  10.196  26.02350  31.8180  43.02350   \n",
       "16           599.0  32.399796  10.026849  12.314  24.88750  31.4790  40.23900   \n",
       "17           749.0  33.190340  10.940675  11.293  25.40700  31.5630  41.24100   \n",
       "18           749.0  31.975736  10.282366   9.024  24.44600  30.3950  40.35600   \n",
       "19           784.0  29.901108   9.689433  10.207  22.96650  27.8080  38.12350   \n",
       "20           753.0  29.777347   9.385669   9.726  23.50700  28.2740  36.86900   \n",
       "21           728.0  30.113749   9.268479  10.923  23.85225  28.4650  37.40450   \n",
       "22           671.0  31.022747  10.097856  11.294  24.02300  29.2870  36.86800   \n",
       "23           389.0  29.797859   9.432168   9.169  23.97000  28.7930  34.59700   \n",
       "\n",
       "                max  \n",
       "hour_of_day          \n",
       "0            49.652  \n",
       "1            37.977  \n",
       "2            37.313  \n",
       "4            38.570  \n",
       "5            38.422  \n",
       "6            55.534  \n",
       "7            58.924  \n",
       "8            60.008  \n",
       "9            62.966  \n",
       "10           62.646  \n",
       "11           63.057  \n",
       "12           61.762  \n",
       "13           59.479  \n",
       "14           59.315  \n",
       "15           56.029  \n",
       "16           56.224  \n",
       "17           57.664  \n",
       "18           57.454  \n",
       "19           52.274  \n",
       "20           53.643  \n",
       "21           52.325  \n",
       "22           58.098  \n",
       "23           53.401  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "BomaRoad\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>263.0</td>\n",
       "      <td>40.093825</td>\n",
       "      <td>8.797357</td>\n",
       "      <td>12.895</td>\n",
       "      <td>35.54100</td>\n",
       "      <td>41.6870</td>\n",
       "      <td>46.97050</td>\n",
       "      <td>55.395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>122.0</td>\n",
       "      <td>39.738041</td>\n",
       "      <td>9.455454</td>\n",
       "      <td>16.988</td>\n",
       "      <td>33.74975</td>\n",
       "      <td>41.0455</td>\n",
       "      <td>47.13000</td>\n",
       "      <td>56.321</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>75.0</td>\n",
       "      <td>37.314133</td>\n",
       "      <td>9.387125</td>\n",
       "      <td>17.787</td>\n",
       "      <td>31.25650</td>\n",
       "      <td>38.1590</td>\n",
       "      <td>44.76900</td>\n",
       "      <td>52.976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>21.0</td>\n",
       "      <td>42.793095</td>\n",
       "      <td>6.354327</td>\n",
       "      <td>26.640</td>\n",
       "      <td>38.55200</td>\n",
       "      <td>42.0420</td>\n",
       "      <td>47.23400</td>\n",
       "      <td>52.673</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>92.0</td>\n",
       "      <td>39.612402</td>\n",
       "      <td>9.321579</td>\n",
       "      <td>16.393</td>\n",
       "      <td>34.45425</td>\n",
       "      <td>42.1950</td>\n",
       "      <td>46.79200</td>\n",
       "      <td>56.295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>169.0</td>\n",
       "      <td>43.560178</td>\n",
       "      <td>11.236028</td>\n",
       "      <td>14.566</td>\n",
       "      <td>35.82300</td>\n",
       "      <td>45.5410</td>\n",
       "      <td>51.92400</td>\n",
       "      <td>71.967</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>160.0</td>\n",
       "      <td>45.406213</td>\n",
       "      <td>12.283909</td>\n",
       "      <td>12.492</td>\n",
       "      <td>38.02625</td>\n",
       "      <td>46.7290</td>\n",
       "      <td>51.64975</td>\n",
       "      <td>73.871</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>503.0</td>\n",
       "      <td>46.257650</td>\n",
       "      <td>12.152580</td>\n",
       "      <td>14.131</td>\n",
       "      <td>38.10500</td>\n",
       "      <td>48.9900</td>\n",
       "      <td>55.50650</td>\n",
       "      <td>71.309</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>662.0</td>\n",
       "      <td>45.064005</td>\n",
       "      <td>11.215245</td>\n",
       "      <td>13.493</td>\n",
       "      <td>36.92250</td>\n",
       "      <td>46.8755</td>\n",
       "      <td>53.84650</td>\n",
       "      <td>68.844</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>601.0</td>\n",
       "      <td>44.005895</td>\n",
       "      <td>11.002833</td>\n",
       "      <td>13.386</td>\n",
       "      <td>36.27000</td>\n",
       "      <td>46.0530</td>\n",
       "      <td>52.26400</td>\n",
       "      <td>65.729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>612.0</td>\n",
       "      <td>43.548967</td>\n",
       "      <td>10.480475</td>\n",
       "      <td>13.819</td>\n",
       "      <td>36.11375</td>\n",
       "      <td>45.2810</td>\n",
       "      <td>51.30850</td>\n",
       "      <td>66.399</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>662.0</td>\n",
       "      <td>43.739891</td>\n",
       "      <td>10.476049</td>\n",
       "      <td>11.919</td>\n",
       "      <td>36.63325</td>\n",
       "      <td>45.3630</td>\n",
       "      <td>51.70875</td>\n",
       "      <td>64.814</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>691.0</td>\n",
       "      <td>44.085172</td>\n",
       "      <td>10.374085</td>\n",
       "      <td>12.942</td>\n",
       "      <td>36.60200</td>\n",
       "      <td>45.9810</td>\n",
       "      <td>51.82550</td>\n",
       "      <td>67.343</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>787.0</td>\n",
       "      <td>44.702776</td>\n",
       "      <td>10.887854</td>\n",
       "      <td>13.167</td>\n",
       "      <td>37.20900</td>\n",
       "      <td>46.4460</td>\n",
       "      <td>53.03500</td>\n",
       "      <td>66.811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>606.0</td>\n",
       "      <td>42.901312</td>\n",
       "      <td>10.136529</td>\n",
       "      <td>13.069</td>\n",
       "      <td>35.81050</td>\n",
       "      <td>44.7130</td>\n",
       "      <td>50.79700</td>\n",
       "      <td>62.960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>811.0</td>\n",
       "      <td>44.081564</td>\n",
       "      <td>10.618853</td>\n",
       "      <td>13.210</td>\n",
       "      <td>37.15750</td>\n",
       "      <td>46.0580</td>\n",
       "      <td>52.24850</td>\n",
       "      <td>64.168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>687.0</td>\n",
       "      <td>42.700317</td>\n",
       "      <td>10.522895</td>\n",
       "      <td>12.202</td>\n",
       "      <td>35.69250</td>\n",
       "      <td>44.7450</td>\n",
       "      <td>50.45300</td>\n",
       "      <td>66.373</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>774.0</td>\n",
       "      <td>43.142822</td>\n",
       "      <td>10.729400</td>\n",
       "      <td>13.459</td>\n",
       "      <td>35.97175</td>\n",
       "      <td>44.9680</td>\n",
       "      <td>51.22350</td>\n",
       "      <td>64.624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>804.0</td>\n",
       "      <td>41.414142</td>\n",
       "      <td>10.029781</td>\n",
       "      <td>12.486</td>\n",
       "      <td>34.50525</td>\n",
       "      <td>42.8905</td>\n",
       "      <td>48.81650</td>\n",
       "      <td>62.659</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>725.0</td>\n",
       "      <td>37.990090</td>\n",
       "      <td>8.285357</td>\n",
       "      <td>12.547</td>\n",
       "      <td>32.22800</td>\n",
       "      <td>39.5070</td>\n",
       "      <td>44.45900</td>\n",
       "      <td>54.888</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>619.0</td>\n",
       "      <td>38.526774</td>\n",
       "      <td>8.552435</td>\n",
       "      <td>12.566</td>\n",
       "      <td>32.42150</td>\n",
       "      <td>39.7560</td>\n",
       "      <td>44.80800</td>\n",
       "      <td>58.753</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>580.0</td>\n",
       "      <td>40.405878</td>\n",
       "      <td>8.594072</td>\n",
       "      <td>13.091</td>\n",
       "      <td>35.24175</td>\n",
       "      <td>41.7120</td>\n",
       "      <td>46.62125</td>\n",
       "      <td>59.828</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>667.0</td>\n",
       "      <td>41.655583</td>\n",
       "      <td>8.986007</td>\n",
       "      <td>14.898</td>\n",
       "      <td>35.86350</td>\n",
       "      <td>43.1240</td>\n",
       "      <td>48.51650</td>\n",
       "      <td>61.730</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>425.0</td>\n",
       "      <td>40.413464</td>\n",
       "      <td>9.201200</td>\n",
       "      <td>14.663</td>\n",
       "      <td>34.11200</td>\n",
       "      <td>42.1560</td>\n",
       "      <td>47.31000</td>\n",
       "      <td>57.085</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             count       mean        std     min       25%      50%       75%  \\\n",
       "hour_of_day                                                                     \n",
       "0            263.0  40.093825   8.797357  12.895  35.54100  41.6870  46.97050   \n",
       "1            122.0  39.738041   9.455454  16.988  33.74975  41.0455  47.13000   \n",
       "2             75.0  37.314133   9.387125  17.787  31.25650  38.1590  44.76900   \n",
       "3             21.0  42.793095   6.354327  26.640  38.55200  42.0420  47.23400   \n",
       "4             92.0  39.612402   9.321579  16.393  34.45425  42.1950  46.79200   \n",
       "5            169.0  43.560178  11.236028  14.566  35.82300  45.5410  51.92400   \n",
       "6            160.0  45.406213  12.283909  12.492  38.02625  46.7290  51.64975   \n",
       "7            503.0  46.257650  12.152580  14.131  38.10500  48.9900  55.50650   \n",
       "8            662.0  45.064005  11.215245  13.493  36.92250  46.8755  53.84650   \n",
       "9            601.0  44.005895  11.002833  13.386  36.27000  46.0530  52.26400   \n",
       "10           612.0  43.548967  10.480475  13.819  36.11375  45.2810  51.30850   \n",
       "11           662.0  43.739891  10.476049  11.919  36.63325  45.3630  51.70875   \n",
       "12           691.0  44.085172  10.374085  12.942  36.60200  45.9810  51.82550   \n",
       "13           787.0  44.702776  10.887854  13.167  37.20900  46.4460  53.03500   \n",
       "14           606.0  42.901312  10.136529  13.069  35.81050  44.7130  50.79700   \n",
       "15           811.0  44.081564  10.618853  13.210  37.15750  46.0580  52.24850   \n",
       "16           687.0  42.700317  10.522895  12.202  35.69250  44.7450  50.45300   \n",
       "17           774.0  43.142822  10.729400  13.459  35.97175  44.9680  51.22350   \n",
       "18           804.0  41.414142  10.029781  12.486  34.50525  42.8905  48.81650   \n",
       "19           725.0  37.990090   8.285357  12.547  32.22800  39.5070  44.45900   \n",
       "20           619.0  38.526774   8.552435  12.566  32.42150  39.7560  44.80800   \n",
       "21           580.0  40.405878   8.594072  13.091  35.24175  41.7120  46.62125   \n",
       "22           667.0  41.655583   8.986007  14.898  35.86350  43.1240  48.51650   \n",
       "23           425.0  40.413464   9.201200  14.663  34.11200  42.1560  47.31000   \n",
       "\n",
       "                max  \n",
       "hour_of_day          \n",
       "0            55.395  \n",
       "1            56.321  \n",
       "2            52.976  \n",
       "3            52.673  \n",
       "4            56.295  \n",
       "5            71.967  \n",
       "6            73.871  \n",
       "7            71.309  \n",
       "8            68.844  \n",
       "9            65.729  \n",
       "10           66.399  \n",
       "11           64.814  \n",
       "12           67.343  \n",
       "13           66.811  \n",
       "14           62.960  \n",
       "15           64.168  \n",
       "16           66.373  \n",
       "17           64.624  \n",
       "18           62.659  \n",
       "19           54.888  \n",
       "20           58.753  \n",
       "21           59.828  \n",
       "22           61.730  \n",
       "23           57.085  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "NorthernBypass\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>496.0</td>\n",
       "      <td>54.072232</td>\n",
       "      <td>14.342897</td>\n",
       "      <td>16.405</td>\n",
       "      <td>49.25675</td>\n",
       "      <td>58.8105</td>\n",
       "      <td>63.89550</td>\n",
       "      <td>75.516</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>496.0</td>\n",
       "      <td>55.256962</td>\n",
       "      <td>14.708706</td>\n",
       "      <td>16.005</td>\n",
       "      <td>50.24525</td>\n",
       "      <td>59.6850</td>\n",
       "      <td>65.55500</td>\n",
       "      <td>77.650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>496.0</td>\n",
       "      <td>55.675764</td>\n",
       "      <td>15.029206</td>\n",
       "      <td>15.909</td>\n",
       "      <td>49.75200</td>\n",
       "      <td>60.6745</td>\n",
       "      <td>66.33700</td>\n",
       "      <td>76.984</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>496.0</td>\n",
       "      <td>55.991708</td>\n",
       "      <td>15.197609</td>\n",
       "      <td>15.579</td>\n",
       "      <td>50.60975</td>\n",
       "      <td>60.5940</td>\n",
       "      <td>66.75350</td>\n",
       "      <td>77.388</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>496.0</td>\n",
       "      <td>56.755155</td>\n",
       "      <td>15.369962</td>\n",
       "      <td>16.624</td>\n",
       "      <td>51.15625</td>\n",
       "      <td>62.1470</td>\n",
       "      <td>67.61400</td>\n",
       "      <td>79.443</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>496.0</td>\n",
       "      <td>55.191595</td>\n",
       "      <td>14.634710</td>\n",
       "      <td>16.504</td>\n",
       "      <td>50.05125</td>\n",
       "      <td>60.2845</td>\n",
       "      <td>65.18350</td>\n",
       "      <td>75.893</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>496.0</td>\n",
       "      <td>51.905871</td>\n",
       "      <td>14.159806</td>\n",
       "      <td>16.782</td>\n",
       "      <td>46.83900</td>\n",
       "      <td>56.1965</td>\n",
       "      <td>61.77975</td>\n",
       "      <td>74.338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>496.0</td>\n",
       "      <td>49.926067</td>\n",
       "      <td>14.169395</td>\n",
       "      <td>15.975</td>\n",
       "      <td>44.77350</td>\n",
       "      <td>54.7950</td>\n",
       "      <td>59.40825</td>\n",
       "      <td>72.022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>496.0</td>\n",
       "      <td>49.735831</td>\n",
       "      <td>13.702304</td>\n",
       "      <td>16.238</td>\n",
       "      <td>44.92875</td>\n",
       "      <td>54.3820</td>\n",
       "      <td>59.28050</td>\n",
       "      <td>71.122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>496.0</td>\n",
       "      <td>49.681581</td>\n",
       "      <td>13.579930</td>\n",
       "      <td>15.827</td>\n",
       "      <td>43.98650</td>\n",
       "      <td>54.1225</td>\n",
       "      <td>58.98775</td>\n",
       "      <td>72.471</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>496.0</td>\n",
       "      <td>49.242653</td>\n",
       "      <td>13.357309</td>\n",
       "      <td>15.717</td>\n",
       "      <td>43.82475</td>\n",
       "      <td>53.6800</td>\n",
       "      <td>58.72900</td>\n",
       "      <td>69.379</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>496.0</td>\n",
       "      <td>49.152000</td>\n",
       "      <td>13.343617</td>\n",
       "      <td>14.542</td>\n",
       "      <td>44.05925</td>\n",
       "      <td>53.5575</td>\n",
       "      <td>58.64150</td>\n",
       "      <td>69.352</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>496.0</td>\n",
       "      <td>49.022518</td>\n",
       "      <td>13.284225</td>\n",
       "      <td>15.426</td>\n",
       "      <td>44.61350</td>\n",
       "      <td>53.3405</td>\n",
       "      <td>58.27275</td>\n",
       "      <td>70.106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>496.0</td>\n",
       "      <td>48.796496</td>\n",
       "      <td>13.309330</td>\n",
       "      <td>14.950</td>\n",
       "      <td>43.62150</td>\n",
       "      <td>53.2205</td>\n",
       "      <td>58.20100</td>\n",
       "      <td>68.714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>496.0</td>\n",
       "      <td>48.373617</td>\n",
       "      <td>13.263142</td>\n",
       "      <td>14.370</td>\n",
       "      <td>43.11675</td>\n",
       "      <td>52.8805</td>\n",
       "      <td>57.74950</td>\n",
       "      <td>67.881</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>496.0</td>\n",
       "      <td>47.693692</td>\n",
       "      <td>13.047705</td>\n",
       "      <td>14.727</td>\n",
       "      <td>42.30825</td>\n",
       "      <td>51.7910</td>\n",
       "      <td>56.84875</td>\n",
       "      <td>67.816</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>496.0</td>\n",
       "      <td>46.968498</td>\n",
       "      <td>12.949906</td>\n",
       "      <td>14.064</td>\n",
       "      <td>41.33675</td>\n",
       "      <td>51.1905</td>\n",
       "      <td>56.12925</td>\n",
       "      <td>66.220</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>496.0</td>\n",
       "      <td>44.595256</td>\n",
       "      <td>12.728273</td>\n",
       "      <td>13.440</td>\n",
       "      <td>39.62050</td>\n",
       "      <td>48.6005</td>\n",
       "      <td>53.44000</td>\n",
       "      <td>64.515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>496.0</td>\n",
       "      <td>42.202262</td>\n",
       "      <td>12.363502</td>\n",
       "      <td>13.354</td>\n",
       "      <td>36.72675</td>\n",
       "      <td>46.0210</td>\n",
       "      <td>51.15250</td>\n",
       "      <td>61.617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>496.0</td>\n",
       "      <td>40.584264</td>\n",
       "      <td>11.633625</td>\n",
       "      <td>13.512</td>\n",
       "      <td>35.96175</td>\n",
       "      <td>43.8145</td>\n",
       "      <td>49.02525</td>\n",
       "      <td>59.281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>496.0</td>\n",
       "      <td>43.810952</td>\n",
       "      <td>11.959964</td>\n",
       "      <td>14.265</td>\n",
       "      <td>38.74725</td>\n",
       "      <td>47.4245</td>\n",
       "      <td>52.50325</td>\n",
       "      <td>62.641</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>496.0</td>\n",
       "      <td>47.067804</td>\n",
       "      <td>12.639117</td>\n",
       "      <td>15.186</td>\n",
       "      <td>41.85000</td>\n",
       "      <td>50.8655</td>\n",
       "      <td>56.06275</td>\n",
       "      <td>67.118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>496.0</td>\n",
       "      <td>49.868657</td>\n",
       "      <td>13.265636</td>\n",
       "      <td>15.154</td>\n",
       "      <td>45.06050</td>\n",
       "      <td>54.1735</td>\n",
       "      <td>59.14250</td>\n",
       "      <td>70.437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>496.0</td>\n",
       "      <td>52.737780</td>\n",
       "      <td>13.919049</td>\n",
       "      <td>16.352</td>\n",
       "      <td>48.28450</td>\n",
       "      <td>57.2305</td>\n",
       "      <td>62.40625</td>\n",
       "      <td>72.905</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             count       mean        std     min       25%      50%       75%  \\\n",
       "hour_of_day                                                                     \n",
       "0            496.0  54.072232  14.342897  16.405  49.25675  58.8105  63.89550   \n",
       "1            496.0  55.256962  14.708706  16.005  50.24525  59.6850  65.55500   \n",
       "2            496.0  55.675764  15.029206  15.909  49.75200  60.6745  66.33700   \n",
       "3            496.0  55.991708  15.197609  15.579  50.60975  60.5940  66.75350   \n",
       "4            496.0  56.755155  15.369962  16.624  51.15625  62.1470  67.61400   \n",
       "5            496.0  55.191595  14.634710  16.504  50.05125  60.2845  65.18350   \n",
       "6            496.0  51.905871  14.159806  16.782  46.83900  56.1965  61.77975   \n",
       "7            496.0  49.926067  14.169395  15.975  44.77350  54.7950  59.40825   \n",
       "8            496.0  49.735831  13.702304  16.238  44.92875  54.3820  59.28050   \n",
       "9            496.0  49.681581  13.579930  15.827  43.98650  54.1225  58.98775   \n",
       "10           496.0  49.242653  13.357309  15.717  43.82475  53.6800  58.72900   \n",
       "11           496.0  49.152000  13.343617  14.542  44.05925  53.5575  58.64150   \n",
       "12           496.0  49.022518  13.284225  15.426  44.61350  53.3405  58.27275   \n",
       "13           496.0  48.796496  13.309330  14.950  43.62150  53.2205  58.20100   \n",
       "14           496.0  48.373617  13.263142  14.370  43.11675  52.8805  57.74950   \n",
       "15           496.0  47.693692  13.047705  14.727  42.30825  51.7910  56.84875   \n",
       "16           496.0  46.968498  12.949906  14.064  41.33675  51.1905  56.12925   \n",
       "17           496.0  44.595256  12.728273  13.440  39.62050  48.6005  53.44000   \n",
       "18           496.0  42.202262  12.363502  13.354  36.72675  46.0210  51.15250   \n",
       "19           496.0  40.584264  11.633625  13.512  35.96175  43.8145  49.02525   \n",
       "20           496.0  43.810952  11.959964  14.265  38.74725  47.4245  52.50325   \n",
       "21           496.0  47.067804  12.639117  15.186  41.85000  50.8655  56.06275   \n",
       "22           496.0  49.868657  13.265636  15.154  45.06050  54.1735  59.14250   \n",
       "23           496.0  52.737780  13.919049  16.352  48.28450  57.2305  62.40625   \n",
       "\n",
       "                max  \n",
       "hour_of_day          \n",
       "0            75.516  \n",
       "1            77.650  \n",
       "2            76.984  \n",
       "3            77.388  \n",
       "4            79.443  \n",
       "5            75.893  \n",
       "6            74.338  \n",
       "7            72.022  \n",
       "8            71.122  \n",
       "9            72.471  \n",
       "10           69.379  \n",
       "11           69.352  \n",
       "12           70.106  \n",
       "13           68.714  \n",
       "14           67.881  \n",
       "15           67.816  \n",
       "16           66.220  \n",
       "17           64.515  \n",
       "18           61.617  \n",
       "19           59.281  \n",
       "20           62.641  \n",
       "21           67.118  \n",
       "22           70.437  \n",
       "23           72.905  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for rd_name, df in popular_road_dict.items():\n",
    "    print(rd_name)\n",
    "    display(df.groupby('hour_of_day')['speed_kph_mean'].describe())\n",
    "    print('\\n\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 545,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "hour_of_day\n",
       "0     9.184722\n",
       "1     9.435836\n",
       "2     9.721189\n",
       "3     8.854452\n",
       "4     9.535060\n",
       "5     9.480469\n",
       "6     9.982076\n",
       "7     9.993142\n",
       "8     9.688238\n",
       "9     9.399072\n",
       "10    9.423583\n",
       "11    9.366934\n",
       "12    9.395305\n",
       "13    9.417004\n",
       "14    9.363788\n",
       "15    9.520523\n",
       "16    9.377163\n",
       "17    9.282631\n",
       "18    9.117787\n",
       "19    8.357479\n",
       "20    8.522128\n",
       "21    8.640797\n",
       "22    8.822092\n",
       "23    9.118856\n",
       "Name: mean, dtype: float64"
      ]
     },
     "execution_count": 545,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "popular_road_dict['LimuruRoad'].groupby('hour_of_day')['speed_kph_p85'].describe()['mean'] - \\\n",
    "popular_road_dict['LimuruRoad'].groupby('hour_of_day')['speed_kph_mean'].describe()['mean']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 510,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>544.0</td>\n",
       "      <td>45.854533</td>\n",
       "      <td>8.516622</td>\n",
       "      <td>21.430</td>\n",
       "      <td>40.99850</td>\n",
       "      <td>47.8875</td>\n",
       "      <td>52.18425</td>\n",
       "      <td>61.306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>544.0</td>\n",
       "      <td>46.992454</td>\n",
       "      <td>9.116142</td>\n",
       "      <td>22.826</td>\n",
       "      <td>41.32325</td>\n",
       "      <td>49.0835</td>\n",
       "      <td>53.40050</td>\n",
       "      <td>64.109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>544.0</td>\n",
       "      <td>48.348653</td>\n",
       "      <td>9.949599</td>\n",
       "      <td>22.762</td>\n",
       "      <td>42.08175</td>\n",
       "      <td>49.8135</td>\n",
       "      <td>55.80725</td>\n",
       "      <td>67.995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>384.0</td>\n",
       "      <td>46.716052</td>\n",
       "      <td>8.845560</td>\n",
       "      <td>21.826</td>\n",
       "      <td>41.50475</td>\n",
       "      <td>48.5490</td>\n",
       "      <td>53.58225</td>\n",
       "      <td>61.516</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>544.0</td>\n",
       "      <td>47.766156</td>\n",
       "      <td>9.995325</td>\n",
       "      <td>23.244</td>\n",
       "      <td>40.97600</td>\n",
       "      <td>48.6080</td>\n",
       "      <td>56.03425</td>\n",
       "      <td>66.758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>544.0</td>\n",
       "      <td>46.755535</td>\n",
       "      <td>9.411995</td>\n",
       "      <td>21.365</td>\n",
       "      <td>41.29850</td>\n",
       "      <td>47.9500</td>\n",
       "      <td>52.99075</td>\n",
       "      <td>66.021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>544.0</td>\n",
       "      <td>47.500829</td>\n",
       "      <td>9.459194</td>\n",
       "      <td>19.123</td>\n",
       "      <td>42.13500</td>\n",
       "      <td>49.5230</td>\n",
       "      <td>54.93225</td>\n",
       "      <td>64.439</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>544.0</td>\n",
       "      <td>48.318119</td>\n",
       "      <td>9.752504</td>\n",
       "      <td>21.755</td>\n",
       "      <td>42.39925</td>\n",
       "      <td>50.5950</td>\n",
       "      <td>55.60725</td>\n",
       "      <td>64.562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>544.0</td>\n",
       "      <td>48.234075</td>\n",
       "      <td>9.623510</td>\n",
       "      <td>22.450</td>\n",
       "      <td>42.25850</td>\n",
       "      <td>50.5835</td>\n",
       "      <td>55.88625</td>\n",
       "      <td>63.758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>544.0</td>\n",
       "      <td>47.560577</td>\n",
       "      <td>9.738678</td>\n",
       "      <td>20.908</td>\n",
       "      <td>40.85125</td>\n",
       "      <td>50.1870</td>\n",
       "      <td>55.13325</td>\n",
       "      <td>64.122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>544.0</td>\n",
       "      <td>46.628717</td>\n",
       "      <td>9.556378</td>\n",
       "      <td>20.104</td>\n",
       "      <td>40.00050</td>\n",
       "      <td>49.2375</td>\n",
       "      <td>54.03525</td>\n",
       "      <td>61.918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>544.0</td>\n",
       "      <td>46.637515</td>\n",
       "      <td>9.635682</td>\n",
       "      <td>20.298</td>\n",
       "      <td>39.85175</td>\n",
       "      <td>49.5165</td>\n",
       "      <td>53.95750</td>\n",
       "      <td>62.348</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>544.0</td>\n",
       "      <td>46.382886</td>\n",
       "      <td>9.251964</td>\n",
       "      <td>22.267</td>\n",
       "      <td>40.21625</td>\n",
       "      <td>49.2850</td>\n",
       "      <td>53.53725</td>\n",
       "      <td>60.010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>544.0</td>\n",
       "      <td>46.294522</td>\n",
       "      <td>9.437387</td>\n",
       "      <td>19.299</td>\n",
       "      <td>40.10425</td>\n",
       "      <td>49.0470</td>\n",
       "      <td>53.66275</td>\n",
       "      <td>62.510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>544.0</td>\n",
       "      <td>45.932493</td>\n",
       "      <td>9.316259</td>\n",
       "      <td>20.015</td>\n",
       "      <td>39.61150</td>\n",
       "      <td>48.5210</td>\n",
       "      <td>53.02825</td>\n",
       "      <td>60.726</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>544.0</td>\n",
       "      <td>45.630568</td>\n",
       "      <td>9.098782</td>\n",
       "      <td>19.894</td>\n",
       "      <td>39.87200</td>\n",
       "      <td>48.2845</td>\n",
       "      <td>52.87300</td>\n",
       "      <td>59.278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>544.0</td>\n",
       "      <td>45.222347</td>\n",
       "      <td>9.275614</td>\n",
       "      <td>21.090</td>\n",
       "      <td>39.32400</td>\n",
       "      <td>47.7490</td>\n",
       "      <td>52.19075</td>\n",
       "      <td>60.314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>544.0</td>\n",
       "      <td>43.943147</td>\n",
       "      <td>9.214483</td>\n",
       "      <td>19.349</td>\n",
       "      <td>38.11250</td>\n",
       "      <td>46.7050</td>\n",
       "      <td>50.87325</td>\n",
       "      <td>59.204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>544.0</td>\n",
       "      <td>41.821665</td>\n",
       "      <td>8.792331</td>\n",
       "      <td>18.522</td>\n",
       "      <td>36.12750</td>\n",
       "      <td>43.9505</td>\n",
       "      <td>48.63725</td>\n",
       "      <td>58.461</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>544.0</td>\n",
       "      <td>38.628750</td>\n",
       "      <td>7.162549</td>\n",
       "      <td>18.744</td>\n",
       "      <td>34.57800</td>\n",
       "      <td>40.1365</td>\n",
       "      <td>43.90200</td>\n",
       "      <td>52.496</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>544.0</td>\n",
       "      <td>40.419774</td>\n",
       "      <td>7.338097</td>\n",
       "      <td>19.873</td>\n",
       "      <td>36.41450</td>\n",
       "      <td>41.9325</td>\n",
       "      <td>46.14775</td>\n",
       "      <td>52.913</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>544.0</td>\n",
       "      <td>42.089897</td>\n",
       "      <td>7.503744</td>\n",
       "      <td>19.054</td>\n",
       "      <td>38.37600</td>\n",
       "      <td>43.8910</td>\n",
       "      <td>47.63325</td>\n",
       "      <td>54.205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>544.0</td>\n",
       "      <td>43.441419</td>\n",
       "      <td>7.677645</td>\n",
       "      <td>19.600</td>\n",
       "      <td>39.36025</td>\n",
       "      <td>45.3635</td>\n",
       "      <td>49.43175</td>\n",
       "      <td>56.486</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>544.0</td>\n",
       "      <td>44.719756</td>\n",
       "      <td>8.190562</td>\n",
       "      <td>21.084</td>\n",
       "      <td>40.13175</td>\n",
       "      <td>46.9925</td>\n",
       "      <td>50.52650</td>\n",
       "      <td>58.398</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             count       mean       std     min       25%      50%       75%  \\\n",
       "hour_of_day                                                                    \n",
       "0            544.0  45.854533  8.516622  21.430  40.99850  47.8875  52.18425   \n",
       "1            544.0  46.992454  9.116142  22.826  41.32325  49.0835  53.40050   \n",
       "2            544.0  48.348653  9.949599  22.762  42.08175  49.8135  55.80725   \n",
       "3            384.0  46.716052  8.845560  21.826  41.50475  48.5490  53.58225   \n",
       "4            544.0  47.766156  9.995325  23.244  40.97600  48.6080  56.03425   \n",
       "5            544.0  46.755535  9.411995  21.365  41.29850  47.9500  52.99075   \n",
       "6            544.0  47.500829  9.459194  19.123  42.13500  49.5230  54.93225   \n",
       "7            544.0  48.318119  9.752504  21.755  42.39925  50.5950  55.60725   \n",
       "8            544.0  48.234075  9.623510  22.450  42.25850  50.5835  55.88625   \n",
       "9            544.0  47.560577  9.738678  20.908  40.85125  50.1870  55.13325   \n",
       "10           544.0  46.628717  9.556378  20.104  40.00050  49.2375  54.03525   \n",
       "11           544.0  46.637515  9.635682  20.298  39.85175  49.5165  53.95750   \n",
       "12           544.0  46.382886  9.251964  22.267  40.21625  49.2850  53.53725   \n",
       "13           544.0  46.294522  9.437387  19.299  40.10425  49.0470  53.66275   \n",
       "14           544.0  45.932493  9.316259  20.015  39.61150  48.5210  53.02825   \n",
       "15           544.0  45.630568  9.098782  19.894  39.87200  48.2845  52.87300   \n",
       "16           544.0  45.222347  9.275614  21.090  39.32400  47.7490  52.19075   \n",
       "17           544.0  43.943147  9.214483  19.349  38.11250  46.7050  50.87325   \n",
       "18           544.0  41.821665  8.792331  18.522  36.12750  43.9505  48.63725   \n",
       "19           544.0  38.628750  7.162549  18.744  34.57800  40.1365  43.90200   \n",
       "20           544.0  40.419774  7.338097  19.873  36.41450  41.9325  46.14775   \n",
       "21           544.0  42.089897  7.503744  19.054  38.37600  43.8910  47.63325   \n",
       "22           544.0  43.441419  7.677645  19.600  39.36025  45.3635  49.43175   \n",
       "23           544.0  44.719756  8.190562  21.084  40.13175  46.9925  50.52650   \n",
       "\n",
       "                max  \n",
       "hour_of_day          \n",
       "0            61.306  \n",
       "1            64.109  \n",
       "2            67.995  \n",
       "3            61.516  \n",
       "4            66.758  \n",
       "5            66.021  \n",
       "6            64.439  \n",
       "7            64.562  \n",
       "8            63.758  \n",
       "9            64.122  \n",
       "10           61.918  \n",
       "11           62.348  \n",
       "12           60.010  \n",
       "13           62.510  \n",
       "14           60.726  \n",
       "15           59.278  \n",
       "16           60.314  \n",
       "17           59.204  \n",
       "18           58.461  \n",
       "19           52.496  \n",
       "20           52.913  \n",
       "21           54.205  \n",
       "22           56.486  \n",
       "23           58.398  "
      ]
     },
     "execution_count": 510,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "popular_road_dict['GetathuruRoad'].groupby('hour_of_day')['speed_kph_mean'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 505,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>quarter</th>\n",
       "      <th>hour_of_day</th>\n",
       "      <th>osm_way_id</th>\n",
       "      <th>speed_kph_mean</th>\n",
       "      <th>speed_kph_stddev</th>\n",
       "      <th>speed_kph_p85</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>54511.0</td>\n",
       "      <td>54511.000000</td>\n",
       "      <td>54511.000000</td>\n",
       "      <td>5.451100e+04</td>\n",
       "      <td>54511.000000</td>\n",
       "      <td>54511.000000</td>\n",
       "      <td>54511.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2019.0</td>\n",
       "      <td>2.527233</td>\n",
       "      <td>12.337968</td>\n",
       "      <td>1.817337e+08</td>\n",
       "      <td>43.579563</td>\n",
       "      <td>11.313579</td>\n",
       "      <td>52.860471</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.119869</td>\n",
       "      <td>6.560575</td>\n",
       "      <td>1.229872e+08</td>\n",
       "      <td>12.151726</td>\n",
       "      <td>2.704768</td>\n",
       "      <td>13.505080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2019.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.402738e+07</td>\n",
       "      <td>6.491000</td>\n",
       "      <td>2.515000</td>\n",
       "      <td>8.789000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2019.0</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>5.305909e+07</td>\n",
       "      <td>35.407500</td>\n",
       "      <td>9.612000</td>\n",
       "      <td>43.985000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2019.0</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>2.315038e+08</td>\n",
       "      <td>44.195000</td>\n",
       "      <td>11.151000</td>\n",
       "      <td>53.725000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2019.0</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>2.315038e+08</td>\n",
       "      <td>52.115500</td>\n",
       "      <td>12.814000</td>\n",
       "      <td>62.433000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2019.0</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>6.437218e+08</td>\n",
       "      <td>85.344000</td>\n",
       "      <td>32.145000</td>\n",
       "      <td>98.124000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          year       quarter   hour_of_day    osm_way_id  speed_kph_mean  \\\n",
       "count  54511.0  54511.000000  54511.000000  5.451100e+04    54511.000000   \n",
       "mean    2019.0      2.527233     12.337968  1.817337e+08       43.579563   \n",
       "std        0.0      1.119869      6.560575  1.229872e+08       12.151726   \n",
       "min     2019.0      1.000000      0.000000  2.402738e+07        6.491000   \n",
       "25%     2019.0      2.000000      7.000000  5.305909e+07       35.407500   \n",
       "50%     2019.0      3.000000     13.000000  2.315038e+08       44.195000   \n",
       "75%     2019.0      4.000000     18.000000  2.315038e+08       52.115500   \n",
       "max     2019.0      4.000000     23.000000  6.437218e+08       85.344000   \n",
       "\n",
       "       speed_kph_stddev  speed_kph_p85  \n",
       "count      54511.000000   54511.000000  \n",
       "mean          11.313579      52.860471  \n",
       "std            2.704768      13.505080  \n",
       "min            2.515000       8.789000  \n",
       "25%            9.612000      43.985000  \n",
       "50%           11.151000      53.725000  \n",
       "75%           12.814000      62.433000  \n",
       "max           32.145000      98.124000  "
      ]
     },
     "execution_count": 505,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "popular_road_dict['LimuruRoad'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 496,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['LimuruRoad',\n",
       " 'KangundoRoad',\n",
       " 'MagadiRoad',\n",
       " 'EasternBypass',\n",
       " 'KamitiRoad',\n",
       " 'NgongRoad',\n",
       " 'ForestLineRoad',\n",
       " 'GitaruRoad',\n",
       " 'KiambuRoad',\n",
       " 'DagorettiRoad',\n",
       " 'GetathuruRoad',\n",
       " 'LowerKabeteRoad',\n",
       " 'Kihara-Gachie-KaruraRoad',\n",
       " 'BomaRoad',\n",
       " 'NorthernBypass']"
      ]
     },
     "execution_count": 496,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "subset_df_names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 485,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'this_is_a_test_1'"
      ]
     },
     "execution_count": 485,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'this_is_a_test_{}'.format(position)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 337,
   "metadata": {},
   "outputs": [],
   "source": [
    "# a boolean (true/false) mask  noting which rows contain 'Limuru Road' in the road_name column (others marked as 'false')\n",
    "bool_mask = working_data_7_days['road_name'].str.contains(\"Limuru Road\")\n",
    "\n",
    "#If there are any missing values in the road_name column, this will fill 'NaN' values in bool_mask with 'False'\n",
    "bool_mask = bool_mask.fillna(False)\n",
    "\n",
    "#Creates a new dataframe called limuru_road wher\n",
    "limuru_road = working_data_7_days[bool_mask]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 577,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>quarter</th>\n",
       "      <th>hour_of_day</th>\n",
       "      <th>osm_way_id</th>\n",
       "      <th>speed_kph_mean</th>\n",
       "      <th>speed_kph_stddev</th>\n",
       "      <th>speed_kph_p85</th>\n",
       "      <th>road_name</th>\n",
       "      <th>road_type</th>\n",
       "      <th>one_way</th>\n",
       "      <th>surface</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>120733</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>493736707</td>\n",
       "      <td>10.552</td>\n",
       "      <td>5.751</td>\n",
       "      <td>14.285</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120734</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>493736707</td>\n",
       "      <td>17.014</td>\n",
       "      <td>7.026</td>\n",
       "      <td>20.871</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120735</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>493736707</td>\n",
       "      <td>14.899</td>\n",
       "      <td>8.725</td>\n",
       "      <td>19.602</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120736</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>493736707</td>\n",
       "      <td>12.249</td>\n",
       "      <td>6.613</td>\n",
       "      <td>16.374</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120737</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>493736707</td>\n",
       "      <td>11.876</td>\n",
       "      <td>8.679</td>\n",
       "      <td>15.318</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475012</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>16</td>\n",
       "      <td>24027382</td>\n",
       "      <td>16.515</td>\n",
       "      <td>11.103</td>\n",
       "      <td>23.686</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>yes</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475013</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>24027382</td>\n",
       "      <td>20.077</td>\n",
       "      <td>11.561</td>\n",
       "      <td>26.901</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>yes</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475014</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>19</td>\n",
       "      <td>24027382</td>\n",
       "      <td>18.355</td>\n",
       "      <td>10.045</td>\n",
       "      <td>24.562</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>yes</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475015</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>24027382</td>\n",
       "      <td>27.626</td>\n",
       "      <td>12.887</td>\n",
       "      <td>34.199</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>yes</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475016</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>24027382</td>\n",
       "      <td>23.071</td>\n",
       "      <td>14.243</td>\n",
       "      <td>29.264</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>yes</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>54511 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        year  quarter  hour_of_day  osm_way_id  speed_kph_mean  \\\n",
       "120733  2019        1           18   493736707          10.552   \n",
       "120734  2019        1           23   493736707          17.014   \n",
       "120735  2019        1            7   493736707          14.899   \n",
       "120736  2019        1           13   493736707          12.249   \n",
       "120737  2019        1           15   493736707          11.876   \n",
       "...      ...      ...          ...         ...             ...   \n",
       "475012  2019        4           16    24027382          16.515   \n",
       "475013  2019        4           20    24027382          20.077   \n",
       "475014  2019        4           19    24027382          18.355   \n",
       "475015  2019        4            2    24027382          27.626   \n",
       "475016  2019        4            7    24027382          23.071   \n",
       "\n",
       "        speed_kph_stddev  speed_kph_p85    road_name  road_type one_way  \\\n",
       "120733             5.751         14.285  Limuru Road  secondary    None   \n",
       "120734             7.026         20.871  Limuru Road  secondary    None   \n",
       "120735             8.725         19.602  Limuru Road  secondary    None   \n",
       "120736             6.613         16.374  Limuru Road  secondary    None   \n",
       "120737             8.679         15.318  Limuru Road  secondary    None   \n",
       "...                  ...            ...          ...        ...     ...   \n",
       "475012            11.103         23.686  Limuru Road        NaN     yes   \n",
       "475013            11.561         26.901  Limuru Road        NaN     yes   \n",
       "475014            10.045         24.562  Limuru Road        NaN     yes   \n",
       "475015            12.887         34.199  Limuru Road        NaN     yes   \n",
       "475016            14.243         29.264  Limuru Road        NaN     yes   \n",
       "\n",
       "       surface  \n",
       "120733    None  \n",
       "120734    None  \n",
       "120735    None  \n",
       "120736    None  \n",
       "120737    None  \n",
       "...        ...  \n",
       "475012    None  \n",
       "475013    None  \n",
       "475014    None  \n",
       "475015    None  \n",
       "475016    None  \n",
       "\n",
       "[54511 rows x 11 columns]"
      ]
     },
     "execution_count": 577,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "limuru_road"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 345,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>road_name</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Limuru Road</th>\n",
       "      <td>54511.0</td>\n",
       "      <td>43.579563</td>\n",
       "      <td>12.151726</td>\n",
       "      <td>6.491</td>\n",
       "      <td>35.40750</td>\n",
       "      <td>44.1950</td>\n",
       "      <td>52.11550</td>\n",
       "      <td>85.344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kangundo Road</th>\n",
       "      <td>31024.0</td>\n",
       "      <td>37.692830</td>\n",
       "      <td>12.487343</td>\n",
       "      <td>6.394</td>\n",
       "      <td>27.71200</td>\n",
       "      <td>37.8620</td>\n",
       "      <td>47.34900</td>\n",
       "      <td>74.504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Magadi Road</th>\n",
       "      <td>27585.0</td>\n",
       "      <td>36.717597</td>\n",
       "      <td>10.943538</td>\n",
       "      <td>9.149</td>\n",
       "      <td>29.26200</td>\n",
       "      <td>38.6760</td>\n",
       "      <td>44.65700</td>\n",
       "      <td>68.207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Eastern Bypass</th>\n",
       "      <td>17949.0</td>\n",
       "      <td>46.891324</td>\n",
       "      <td>13.655683</td>\n",
       "      <td>9.836</td>\n",
       "      <td>36.39000</td>\n",
       "      <td>47.7480</td>\n",
       "      <td>56.76000</td>\n",
       "      <td>82.936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kamiti Road</th>\n",
       "      <td>16436.0</td>\n",
       "      <td>39.181560</td>\n",
       "      <td>14.401492</td>\n",
       "      <td>9.087</td>\n",
       "      <td>27.62650</td>\n",
       "      <td>37.9590</td>\n",
       "      <td>51.79975</td>\n",
       "      <td>75.155</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ngong Road</th>\n",
       "      <td>15495.0</td>\n",
       "      <td>36.040760</td>\n",
       "      <td>11.308767</td>\n",
       "      <td>7.208</td>\n",
       "      <td>27.27700</td>\n",
       "      <td>37.1790</td>\n",
       "      <td>44.86450</td>\n",
       "      <td>63.239</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Forest Line Road</th>\n",
       "      <td>15487.0</td>\n",
       "      <td>34.064063</td>\n",
       "      <td>10.719337</td>\n",
       "      <td>10.824</td>\n",
       "      <td>25.58750</td>\n",
       "      <td>33.0390</td>\n",
       "      <td>41.88400</td>\n",
       "      <td>64.397</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gitaru Road</th>\n",
       "      <td>15343.0</td>\n",
       "      <td>37.029910</td>\n",
       "      <td>10.824972</td>\n",
       "      <td>7.377</td>\n",
       "      <td>28.17400</td>\n",
       "      <td>38.7280</td>\n",
       "      <td>45.51350</td>\n",
       "      <td>63.017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kiambu Road</th>\n",
       "      <td>15238.0</td>\n",
       "      <td>40.961591</td>\n",
       "      <td>11.321845</td>\n",
       "      <td>12.815</td>\n",
       "      <td>32.41725</td>\n",
       "      <td>41.1545</td>\n",
       "      <td>50.05875</td>\n",
       "      <td>70.320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dagoretti Road</th>\n",
       "      <td>14131.0</td>\n",
       "      <td>46.445439</td>\n",
       "      <td>10.764701</td>\n",
       "      <td>7.978</td>\n",
       "      <td>40.76750</td>\n",
       "      <td>48.7530</td>\n",
       "      <td>54.04500</td>\n",
       "      <td>75.341</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    count       mean        std     min       25%      50%  \\\n",
       "road_name                                                                    \n",
       "Limuru Road       54511.0  43.579563  12.151726   6.491  35.40750  44.1950   \n",
       "Kangundo Road     31024.0  37.692830  12.487343   6.394  27.71200  37.8620   \n",
       "Magadi Road       27585.0  36.717597  10.943538   9.149  29.26200  38.6760   \n",
       "Eastern Bypass    17949.0  46.891324  13.655683   9.836  36.39000  47.7480   \n",
       "Kamiti Road       16436.0  39.181560  14.401492   9.087  27.62650  37.9590   \n",
       "Ngong Road        15495.0  36.040760  11.308767   7.208  27.27700  37.1790   \n",
       "Forest Line Road  15487.0  34.064063  10.719337  10.824  25.58750  33.0390   \n",
       "Gitaru Road       15343.0  37.029910  10.824972   7.377  28.17400  38.7280   \n",
       "Kiambu Road       15238.0  40.961591  11.321845  12.815  32.41725  41.1545   \n",
       "Dagoretti Road    14131.0  46.445439  10.764701   7.978  40.76750  48.7530   \n",
       "\n",
       "                       75%     max  \n",
       "road_name                           \n",
       "Limuru Road       52.11550  85.344  \n",
       "Kangundo Road     47.34900  74.504  \n",
       "Magadi Road       44.65700  68.207  \n",
       "Eastern Bypass    56.76000  82.936  \n",
       "Kamiti Road       51.79975  75.155  \n",
       "Ngong Road        44.86450  63.239  \n",
       "Forest Line Road  41.88400  64.397  \n",
       "Gitaru Road       45.51350  63.017  \n",
       "Kiambu Road       50.05875  70.320  \n",
       "Dagoretti Road    54.04500  75.341  "
      ]
     },
     "execution_count": 345,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "working_data_7_days.groupby('road_name')['speed_kph_mean'].describe().sort_values(['count'], ascending=False).head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 594,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>quarter</th>\n",
       "      <th>hour_of_day</th>\n",
       "      <th>osm_way_id</th>\n",
       "      <th>speed_kph_mean</th>\n",
       "      <th>speed_kph_stddev</th>\n",
       "      <th>speed_kph_p85</th>\n",
       "      <th>road_name</th>\n",
       "      <th>road_type</th>\n",
       "      <th>one_way</th>\n",
       "      <th>surface</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>82373</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>658223863</td>\n",
       "      <td>25.306</td>\n",
       "      <td>12.961</td>\n",
       "      <td>36.298</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82374</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>658223863</td>\n",
       "      <td>27.303</td>\n",
       "      <td>11.341</td>\n",
       "      <td>37.547</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82375</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>658223863</td>\n",
       "      <td>39.305</td>\n",
       "      <td>8.642</td>\n",
       "      <td>47.091</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82376</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>658223863</td>\n",
       "      <td>24.934</td>\n",
       "      <td>11.151</td>\n",
       "      <td>36.039</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82377</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>658223863</td>\n",
       "      <td>43.224</td>\n",
       "      <td>8.515</td>\n",
       "      <td>51.158</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395217</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>515077028</td>\n",
       "      <td>44.071</td>\n",
       "      <td>9.574</td>\n",
       "      <td>53.810</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395218</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>515077028</td>\n",
       "      <td>43.207</td>\n",
       "      <td>5.314</td>\n",
       "      <td>47.977</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395219</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>14</td>\n",
       "      <td>515077028</td>\n",
       "      <td>44.285</td>\n",
       "      <td>8.954</td>\n",
       "      <td>53.810</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395220</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>515077028</td>\n",
       "      <td>40.908</td>\n",
       "      <td>8.208</td>\n",
       "      <td>49.968</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395221</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "      <td>515077028</td>\n",
       "      <td>43.209</td>\n",
       "      <td>11.010</td>\n",
       "      <td>52.496</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>31024 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        year  quarter  hour_of_day  osm_way_id  speed_kph_mean  \\\n",
       "82373   2019        1           18   658223863          25.306   \n",
       "82374   2019        1           13   658223863          27.303   \n",
       "82375   2019        1            0   658223863          39.305   \n",
       "82376   2019        1           14   658223863          24.934   \n",
       "82377   2019        1            4   658223863          43.224   \n",
       "...      ...      ...          ...         ...             ...   \n",
       "395217  2019        4           13   515077028          44.071   \n",
       "395218  2019        4           15   515077028          43.207   \n",
       "395219  2019        4           14   515077028          44.285   \n",
       "395220  2019        4           20   515077028          40.908   \n",
       "395221  2019        4           12   515077028          43.209   \n",
       "\n",
       "        speed_kph_stddev  speed_kph_p85      road_name  road_type one_way  \\\n",
       "82373             12.961         36.298  Kangundo Road  secondary    None   \n",
       "82374             11.341         37.547  Kangundo Road  secondary    None   \n",
       "82375              8.642         47.091  Kangundo Road  secondary    None   \n",
       "82376             11.151         36.039  Kangundo Road  secondary    None   \n",
       "82377              8.515         51.158  Kangundo Road  secondary    None   \n",
       "...                  ...            ...            ...        ...     ...   \n",
       "395217             9.574         53.810  Kangundo Road        NaN    None   \n",
       "395218             5.314         47.977  Kangundo Road        NaN    None   \n",
       "395219             8.954         53.810  Kangundo Road        NaN    None   \n",
       "395220             8.208         49.968  Kangundo Road        NaN    None   \n",
       "395221            11.010         52.496  Kangundo Road        NaN    None   \n",
       "\n",
       "       surface  \n",
       "82373     None  \n",
       "82374     None  \n",
       "82375     None  \n",
       "82376     None  \n",
       "82377     None  \n",
       "...        ...  \n",
       "395217    None  \n",
       "395218    None  \n",
       "395219    None  \n",
       "395220    None  \n",
       "395221    None  \n",
       "\n",
       "[31024 rows x 11 columns]"
      ]
     },
     "execution_count": 594,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\n",
    "#                     'Average Speed': popular_road_dict['KangundoRoad'].groupby('hour_of_day')['speed_kph_p85']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 600,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Isolate Kangundo Road in popular_road_dict dictionary and group data by hour of day and convert into Data Frame \n",
    "\n",
    "KangundoRoad = popular_road_dict['KangundoRoad'].groupby('hour_of_day')\n",
    "KangundoRoad = KangundoRoad.apply(pd.DataFrame)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 646,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>quarter</th>\n",
       "      <th>hour_of_day</th>\n",
       "      <th>osm_way_id</th>\n",
       "      <th>speed_kph_mean</th>\n",
       "      <th>speed_kph_stddev</th>\n",
       "      <th>speed_kph_p85</th>\n",
       "      <th>road_name</th>\n",
       "      <th>road_type</th>\n",
       "      <th>one_way</th>\n",
       "      <th>surface</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>82373</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>658223863</td>\n",
       "      <td>25.306</td>\n",
       "      <td>12.961</td>\n",
       "      <td>36.298</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82374</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>658223863</td>\n",
       "      <td>27.303</td>\n",
       "      <td>11.341</td>\n",
       "      <td>37.547</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82375</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>658223863</td>\n",
       "      <td>39.305</td>\n",
       "      <td>8.642</td>\n",
       "      <td>47.091</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82376</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>658223863</td>\n",
       "      <td>24.934</td>\n",
       "      <td>11.151</td>\n",
       "      <td>36.039</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82377</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>658223863</td>\n",
       "      <td>43.224</td>\n",
       "      <td>8.515</td>\n",
       "      <td>51.158</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395217</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>515077028</td>\n",
       "      <td>44.071</td>\n",
       "      <td>9.574</td>\n",
       "      <td>53.810</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395218</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>515077028</td>\n",
       "      <td>43.207</td>\n",
       "      <td>5.314</td>\n",
       "      <td>47.977</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395219</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>14</td>\n",
       "      <td>515077028</td>\n",
       "      <td>44.285</td>\n",
       "      <td>8.954</td>\n",
       "      <td>53.810</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395220</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>515077028</td>\n",
       "      <td>40.908</td>\n",
       "      <td>8.208</td>\n",
       "      <td>49.968</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395221</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "      <td>515077028</td>\n",
       "      <td>43.209</td>\n",
       "      <td>11.010</td>\n",
       "      <td>52.496</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>31024 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        year  quarter  hour_of_day  osm_way_id  speed_kph_mean  \\\n",
       "82373   2019        1           18   658223863          25.306   \n",
       "82374   2019        1           13   658223863          27.303   \n",
       "82375   2019        1            0   658223863          39.305   \n",
       "82376   2019        1           14   658223863          24.934   \n",
       "82377   2019        1            4   658223863          43.224   \n",
       "...      ...      ...          ...         ...             ...   \n",
       "395217  2019        4           13   515077028          44.071   \n",
       "395218  2019        4           15   515077028          43.207   \n",
       "395219  2019        4           14   515077028          44.285   \n",
       "395220  2019        4           20   515077028          40.908   \n",
       "395221  2019        4           12   515077028          43.209   \n",
       "\n",
       "        speed_kph_stddev  speed_kph_p85      road_name  road_type one_way  \\\n",
       "82373             12.961         36.298  Kangundo Road  secondary    None   \n",
       "82374             11.341         37.547  Kangundo Road  secondary    None   \n",
       "82375              8.642         47.091  Kangundo Road  secondary    None   \n",
       "82376             11.151         36.039  Kangundo Road  secondary    None   \n",
       "82377              8.515         51.158  Kangundo Road  secondary    None   \n",
       "...                  ...            ...            ...        ...     ...   \n",
       "395217             9.574         53.810  Kangundo Road        NaN    None   \n",
       "395218             5.314         47.977  Kangundo Road        NaN    None   \n",
       "395219             8.954         53.810  Kangundo Road        NaN    None   \n",
       "395220             8.208         49.968  Kangundo Road        NaN    None   \n",
       "395221            11.010         52.496  Kangundo Road        NaN    None   \n",
       "\n",
       "       surface  \n",
       "82373     None  \n",
       "82374     None  \n",
       "82375     None  \n",
       "82376     None  \n",
       "82377     None  \n",
       "...        ...  \n",
       "395217    None  \n",
       "395218    None  \n",
       "395219    None  \n",
       "395220    None  \n",
       "395221    None  \n",
       "\n",
       "[31024 rows x 11 columns]"
      ]
     },
     "execution_count": 646,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "KangundoRoad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 595,
   "metadata": {},
   "outputs": [],
   "source": [
    "KangundoRoad = KangundoRoad.apply(pd.DataFrame)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 585,
   "metadata": {},
   "outputs": [],
   "source": [
    "FFS = KangundoRoad.groupby('hour_of_day')['speed_kph_p85']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 620,
   "metadata": {},
   "outputs": [],
   "source": [
    "df2 = pd.DataFrame({'Free Flow Speed': KangundoRoad.groupby('hour_of_day')['speed_kph_p85'].describe()['mean'],\n",
    "                    'Average Speeds': KangundoRoad.groupby('hour_of_day')['speed_kph_mean'].describe()['mean']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 636,
   "metadata": {},
   "outputs": [],
   "source": [
    "df2['Proportional Diff'] = KangundoRoad.groupby('hour_of_day')['speed_kph_mean'].describe()['mean'] / KangundoRoad.groupby('hour_of_day')['speed_kph_p85'].describe()['mean']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import plotly.graph_objs as go"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 641,
   "metadata": {},
   "outputs": [],
   "source": [
    "df2 = df2.rename(columns={\"Free Flow Speed\":\"FFS\", \"Average Speeds\": \"Avrg\", \"Proportional Diff\": \"Prop_diff\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 647,
   "metadata": {},
   "outputs": [],
   "source": [
    "dftest = KangundoRoad.iloc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 651,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'_iLocIndexer' object has no attribute 'hour_of_day'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-651-7c8dfd957363>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m trace1 = go.Bar(\n\u001b[0;32m----> 2\u001b[0;31m                 \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdftest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhour_of_day\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m                 \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdftest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mspeed_kph_p85\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m                 \u001b[0mname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Free Flow Speed\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m                 marker = dict(color = 'rgba(255, 174, 255, 0.5)',\n",
      "\u001b[0;31mAttributeError\u001b[0m: '_iLocIndexer' object has no attribute 'hour_of_day'"
     ]
    }
   ],
   "source": [
    "dftest = KangundoRoad.iloc\n",
    "\n",
    "trace1 = go.Bar(\n",
    "                x = dftest.hour_of_day,\n",
    "                y = dftest.speed_kph_p85,\n",
    "                name = \"Free Flow Speed\",\n",
    "                marker = dict(color = 'rgba(255, 174, 255, 0.5)',\n",
    "                             line=dict(color='rgb(0,0,0)',width=1.5)),\n",
    "                text = dftest.road_name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 650,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>quarter</th>\n",
       "      <th>hour_of_day</th>\n",
       "      <th>osm_way_id</th>\n",
       "      <th>speed_kph_mean</th>\n",
       "      <th>speed_kph_stddev</th>\n",
       "      <th>speed_kph_p85</th>\n",
       "      <th>road_name</th>\n",
       "      <th>road_type</th>\n",
       "      <th>one_way</th>\n",
       "      <th>surface</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>82373</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>658223863</td>\n",
       "      <td>25.306</td>\n",
       "      <td>12.961</td>\n",
       "      <td>36.298</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82374</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>658223863</td>\n",
       "      <td>27.303</td>\n",
       "      <td>11.341</td>\n",
       "      <td>37.547</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82375</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>658223863</td>\n",
       "      <td>39.305</td>\n",
       "      <td>8.642</td>\n",
       "      <td>47.091</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82376</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>658223863</td>\n",
       "      <td>24.934</td>\n",
       "      <td>11.151</td>\n",
       "      <td>36.039</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82377</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>658223863</td>\n",
       "      <td>43.224</td>\n",
       "      <td>8.515</td>\n",
       "      <td>51.158</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395217</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>515077028</td>\n",
       "      <td>44.071</td>\n",
       "      <td>9.574</td>\n",
       "      <td>53.810</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395218</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>515077028</td>\n",
       "      <td>43.207</td>\n",
       "      <td>5.314</td>\n",
       "      <td>47.977</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395219</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>14</td>\n",
       "      <td>515077028</td>\n",
       "      <td>44.285</td>\n",
       "      <td>8.954</td>\n",
       "      <td>53.810</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395220</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>515077028</td>\n",
       "      <td>40.908</td>\n",
       "      <td>8.208</td>\n",
       "      <td>49.968</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395221</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "      <td>515077028</td>\n",
       "      <td>43.209</td>\n",
       "      <td>11.010</td>\n",
       "      <td>52.496</td>\n",
       "      <td>Kangundo Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>31024 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        year  quarter  hour_of_day  osm_way_id  speed_kph_mean  \\\n",
       "82373   2019        1           18   658223863          25.306   \n",
       "82374   2019        1           13   658223863          27.303   \n",
       "82375   2019        1            0   658223863          39.305   \n",
       "82376   2019        1           14   658223863          24.934   \n",
       "82377   2019        1            4   658223863          43.224   \n",
       "...      ...      ...          ...         ...             ...   \n",
       "395217  2019        4           13   515077028          44.071   \n",
       "395218  2019        4           15   515077028          43.207   \n",
       "395219  2019        4           14   515077028          44.285   \n",
       "395220  2019        4           20   515077028          40.908   \n",
       "395221  2019        4           12   515077028          43.209   \n",
       "\n",
       "        speed_kph_stddev  speed_kph_p85      road_name  road_type one_way  \\\n",
       "82373             12.961         36.298  Kangundo Road  secondary    None   \n",
       "82374             11.341         37.547  Kangundo Road  secondary    None   \n",
       "82375              8.642         47.091  Kangundo Road  secondary    None   \n",
       "82376             11.151         36.039  Kangundo Road  secondary    None   \n",
       "82377              8.515         51.158  Kangundo Road  secondary    None   \n",
       "...                  ...            ...            ...        ...     ...   \n",
       "395217             9.574         53.810  Kangundo Road        NaN    None   \n",
       "395218             5.314         47.977  Kangundo Road        NaN    None   \n",
       "395219             8.954         53.810  Kangundo Road        NaN    None   \n",
       "395220             8.208         49.968  Kangundo Road        NaN    None   \n",
       "395221            11.010         52.496  Kangundo Road        NaN    None   \n",
       "\n",
       "       surface  \n",
       "82373     None  \n",
       "82374     None  \n",
       "82375     None  \n",
       "82376     None  \n",
       "82377     None  \n",
       "...        ...  \n",
       "395217    None  \n",
       "395218    None  \n",
       "395219    None  \n",
       "395220    None  \n",
       "395221    None  \n",
       "\n",
       "[31024 rows x 11 columns]"
      ]
     },
     "execution_count": 650,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "KangundoRoad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 630,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x648 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot = df2.plot.line(rot= 0, figsize=(12, 9), grid=True, title=\"plots\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 617,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "hour_of_day\n",
       "0     42.209078\n",
       "1     42.840492\n",
       "2     42.439594\n",
       "3     41.027501\n",
       "4     42.897288\n",
       "5     40.609779\n",
       "6     40.447112\n",
       "7     39.576830\n",
       "8     38.465948\n",
       "9     38.008190\n",
       "10    37.285979\n",
       "11    36.843258\n",
       "12    36.827673\n",
       "13    37.102325\n",
       "14    36.457147\n",
       "15    35.947473\n",
       "16    35.604509\n",
       "17    34.111471\n",
       "18    32.496772\n",
       "19    30.918531\n",
       "20    33.968717\n",
       "21    36.366763\n",
       "22    38.912431\n",
       "23    41.192986\n",
       "Name: mean, dtype: float64"
      ]
     },
     "execution_count": 617,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "KangundoRoad.groupby('hour_of_day')['speed_kph_mean'].describe()['mean']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 615,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "hour_of_day\n",
       "0     42.209078\n",
       "1     42.840492\n",
       "2     42.439594\n",
       "3     41.027501\n",
       "4     42.897288\n",
       "5     40.609779\n",
       "6     40.447112\n",
       "7     39.576830\n",
       "8     38.465948\n",
       "9     38.008190\n",
       "10    37.285979\n",
       "11    36.843258\n",
       "12    36.827673\n",
       "13    37.102325\n",
       "14    36.457147\n",
       "15    35.947473\n",
       "16    35.604509\n",
       "17    34.111471\n",
       "18    32.496772\n",
       "19    30.918531\n",
       "20    33.968717\n",
       "21    36.366763\n",
       "22    38.912431\n",
       "23    41.192986\n",
       "Name: mean, dtype: float64"
      ]
     },
     "execution_count": 615,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test['mean']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "df2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 377,
   "metadata": {},
   "outputs": [],
   "source": [
    "limuru_road.groupby('hour_of_day')['speed_kph_mean'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 513,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.DataFrame({'Speed Limit': speed_limit,\n",
    "                   'Actual Speeds': actual_speeds})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 632,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x648 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot = df.plot.bar(rot=0, figsize=(12, 9), grid=True, title=\"plots\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 387,
   "metadata": {},
   "outputs": [],
   "source": [
    "speed_limit = limuru_speed_limit['mean']\n",
    "actual_speeds = summarized_limurur_road"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 385,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXAAAAEHCAYAAAC3Ph1GAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAAV40lEQVR4nO3df5TddX3n8ec7PzCIKJhMaGDYTtqTcoACQUJKJVJIaI3oAa2ylXU5UemyW4sFu13FZa3xWBUL1u6BHpUKS1Z+VCNaInt2JYtEV09BE/KDpLEEdcBRTNKUYEXRDLz3j+83YZjcufd7JzOZ+Zjn45x77vf7vd/3/X7mzue+7vd+7r3fb2QmkqTyTJnoBkiSRscAl6RCGeCSVCgDXJIKZYBLUqGmHcyNzZo1K/v6+g7mJiWpeOvWrfvnzOwZvvygBnhfXx9r1649mJuUpOJFxGOtljuEIkmFMsAlqVAGuCQV6qCOgUtSO3v27GFgYIBnnnlmopsyIWbMmEFvby/Tp09vtL4BLmnSGBgY4Mgjj6Svr4+ImOjmHFSZya5duxgYGGDu3LmNahxCkTRpPPPMM8ycOfOQC2+AiGDmzJldvfswwCVNKodieO/V7d9ugEtSoRwDlzRp9V39v8b0/vqvfe2Y3t9EM8DHSbuO98vWiSRNjOIC3GCUNJ76+/tZunQpixYt4oEHHuC0007jbW97G+9///vZsWMHt99+OyeffDLvfOc7efjhhxkcHGT58uVcdNFF9Pf3c+mll/L0008DcOONN/LKV76SNWvWsHz5cmbNmsXmzZs544wzuO222w54vL+4AJek8fboo4+ycuVKbrrpJs4880zuuOMOvv71r7Nq1So+/OEPc9JJJ7F48WJuueUWdu/ezcKFCzn//POZPXs2q1evZsaMGWzbto1LLrlk3/Gf1q9fz5YtWzj22GM5++yz+cY3vsGiRYsOqJ0GuCQNM3fuXE455RQATj75ZJYsWUJEcMopp9Df38/AwACrVq3i+uuvB6qvPz7++OMce+yxXHHFFWzYsIGpU6fyyCOP7LvPhQsX0tvbC8D8+fPp7+83wDUxHMrSL7MXvehF+6anTJmyb37KlCkMDg4ydepU7rrrLk444YQX1C1fvpxjjjmGjRs38txzzzFjxoyW9zl16lQGBwcPuJ0TFuAGgKRSvfrVr+aGG27ghhtuICJYv349p59+Ok899RS9vb1MmTKFFStW8Oyzz45rO9wDlzRpTdadufe9731cddVVnHrqqWQmfX193HPPPbzjHe/gjW98IytXruS8887jiCOOGNd2HDIBXsoefyntlH5Z9fX1sXnz5n3zt956a8vbPvWpT+1XO2/ePDZt2rRv/iMf+QgA5557Lueee+6+5TfeeOOYtPWQCfDRKiVQR9vOg/33Hex2lvL/k0bDAJdaMPg13jYN7G65fPuTP+PEhvfhsVAkTSqZOdFNmDCZSdL873cPXBpD7rkfmBkzZrBr165D8pCymcngT3/MY7v3NK4xwKVJwOCv9Pb2MjAwwM6dOye6KeNu+5M/e8F8kjy2ew83PPgk/+GCZvdhgEuaNKZPn974bDSle80YHGnRMXBJKpR74FLBHHo5tBng0iFopOA39MviEIokFco9cEk6ABM5jOUeuCQVygCXpEIZ4JJUKANckgrlh5iSGvE755OPe+CSVCgDXJIK5RCKJFHmEFHjPfCImBoR6yPinnp+bkQ8GBHbIuKzEXHY+DVTkjRcN0MoVwJbh8x/FPh4Zs4DngQuG8uGSZLaazSEEhG9wGuBDwF/GtWpMhYD/65eZQWwHPjEOLRRUsFKHJooRdM98L8G3g08V8/PBHZn5mA9PwAc16owIi6PiLURsfZQOMuGJB0sHQM8Il4H7MjMdUMXt1i15Zk4M/OmzFyQmQt6enpG2UxJ0nBNhlDOBi6MiAuAGcBLqfbIj4qIafVeeC/ww/FrpiRpuI574Jn53szszcw+4M3AVzLzLcD9wJvq1ZYBd49bKyVJ+zmQH/K8h+oDzUepxsRvHpsmSZKa6OqHPJm5BlhTT38XWDj2TZKk0TuUvvXiT+klqVAGuCQVygCXpEIZ4JJUKANckgplgEtSoQxwSSqUAS5JhfKMPJImpUPpBzmj5R64JBXKAJekQhngklQoA1ySCmWAS1KhDHBJKpQBLkmFMsAlqVAGuCQVygCXpEIZ4JJUKANckgplgEtSoQxwSSqUAS5JhTLAJalQBrgkFcoAl6RCGeCSVCgDXJIKZYBLUqEMcEkqlAEuSYUywCWpUAa4JBXKAJekQnUM8IiYERHfjIiNEbElIj5QL58bEQ9GxLaI+GxEHDb+zZUk7dVkD/znwOLMPA2YDyyNiLOAjwIfz8x5wJPAZePXTEnScB0DPCs/qWen15cEFgOfr5evAF4/Li2UJLXUaAw8IqZGxAZgB7Aa+A6wOzMH61UGgONGqL08ItZGxNqdO3eORZslSTQM8Mx8NjPnA73AQuDEVquNUHtTZi7IzAU9PT2jb6kk6QW6+hZKZu4G1gBnAUdFxLT6pl7gh2PbNElSO02+hdITEUfV04cD5wNbgfuBN9WrLQPuHq9GSpL2N63zKswBVkTEVKrA/1xm3hMR/wj8XUT8BbAeuHkc2ylJGqZjgGfmJuD0Fsu/SzUeLkmaAP4SU5IKZYBLUqEMcEkqlAEuSYUywCWpUAa4JBXKAJekQhngklQoA1ySCmWAS1KhDHBJKpQBLkmFMsAlqVAGuCQVygCXpEIZ4JJUKANckgplgEtSoQxwSSqUAS5JhTLAJalQBrgkFcoAl6RCGeCSVCgDXJIKZYBLUqEMcEkqlAEuSYUywCWpUAa4JBXKAJekQhngklQoA1ySCmWAS1KhDHBJKlTHAI+I4yPi/ojYGhFbIuLKevnLI2J1RGyrr48e/+ZKkvZqsgc+CPznzDwROAv444g4CbgauC8z5wH31fOSpIOkY4Bn5hOZ+VA9/a/AVuA44CJgRb3aCuD149VISdL+uhoDj4g+4HTgQeCYzHwCqpAHZo9Qc3lErI2ItTt37jyw1kqS9mkc4BHxEuAu4KrM/HHTusy8KTMXZOaCnp6e0bRRktRCowCPiOlU4X17Zn6hXrw9IubUt88BdoxPEyVJrTT5FkoANwNbM/Ovhty0ClhWTy8D7h775kmSRjKtwTpnA5cCD0fEhnrZfwWuBT4XEZcBjwMXj08TJUmtdAzwzPw6ECPcvGRsmyNJaspfYkpSoQxwSSqUAS5JhTLAJalQBrgkFcoAl6RCGeCSVCgDXJIKZYBLUqEMcEkqlAEuSYUywCWpUAa4JBXKAJekQhngklQoA1ySCmWAS1KhDHBJKpQBLkmFMsAlqVAGuCQVygCXpEIZ4JJUKANckgplgEtSoQxwSSqUAS5JhTLAJalQBrgkFcoAl6RCGeCSVCgDXJIKZYBLUqEMcEkqlAEuSYXqGOARcUtE7IiIzUOWvTwiVkfEtvr66PFtpiRpuCZ74LcCS4ctuxq4LzPnAffV85Kkg6hjgGfm14B/Gbb4ImBFPb0CeP0Yt0uS1MFox8CPycwnAOrr2WPXJElSE+P+IWZEXB4RayNi7c6dO8d7c5J0yBhtgG+PiDkA9fWOkVbMzJsyc0FmLujp6Rnl5iRJw402wFcBy+rpZcDdY9McSVJTTb5GeCfwD8AJETEQEZcB1wK/GxHbgN+t5yVJB9G0Titk5iUj3LRkjNsiSeqCv8SUpEIZ4JJUKANckgplgEtSoQxwSSqUAS5JhTLAJalQBrgkFcoAl6RCGeCSVCgDXJIKZYBLUqEMcEkqlAEuSYUywCWpUAa4JBXKAJekQhngklQoA1ySCmWAS1KhDHBJKpQBLkmFMsAlqVAGuCQVygCXpEIZ4JJUKANckgplgEtSoQxwSSqUAS5JhTLAJalQBrgkFcoAl6RCGeCSVCgDXJIKZYBLUqEOKMAjYmlE/FNEPBoRV49VoyRJnY06wCNiKvA3wGuAk4BLIuKksWqYJKm9A9kDXwg8mpnfzcxfAH8HXDQ2zZIkdRKZObrCiDcBSzPzD+v5S4Hfyswrhq13OXB5PXsC8E8j3OUs4J9H0RTrxq6uhDZaZ92hWPermdmz39LMHNUFuBj49JD5S4EbDuD+1lo3sXUltNE666x7/nIgQygDwPFD5nuBHx7A/UmSunAgAf4tYF5EzI2Iw4A3A6vGplmSpE6mjbYwMwcj4grgy8BU4JbM3HIAbbnJugmvK6GN1llnXW3UH2JKkiaWv8SUpEIZ4JJUqAkP8NH+HD8ibomIHRGxuYua4yPi/ojYGhFbIuLKhnUzIuKbEbGxrvtA023W9VMjYn1E3NNFTX9EPBwRGyJibRd1R0XE5yPi2/Xf+dsNak6ot7P38uOIuKrh9t5VPyabI+LOiJjRsO7KumZLu221+j9HxMsjYnVEbKuvj25Yd3G9veciYkEX27uufjw3RcQXI+KohnUfrGs2RMS9EXFsk7oht/1ZRGREzGq4veUR8YMh/8cLmm4vIt5ZPw+3RMRfNtzeZ4dsqz8iNjSsmx8RD+zt2xGxsGHdaRHxD/Xz4ksR8dJhNS2f3536S5u6tv2lTV3b/tKmrmN/2c9ovq84VheqDz+/A/wacBiwETipYe05wCuAzV1sbw7winr6SOCRJtsDAnhJPT0deBA4q4vt/ilwB3BPFzX9wKxRPKYrgD+spw8DjhrF/+RHVD8c6LTuccD3gMPr+c8Bb21Q95vAZuDFVB+k/19gXtP/M/CXwNX19NXARxvWnUj1Y7I1wIIutvd7wLR6+qNdbO+lQ6b/BPhk035M9RXdLwOPteoHI2xvOfBnHR77VnXn1f+DF9Xzs5u2c8jtHwP+vOH27gVeU09fAKxpWPct4Hfq6bcDHxxW0/L53am/tKlr21/a1LXtL23qOvaX4ZeJ3gMf9c/xM/NrwL90s7HMfCIzH6qn/xXYShVCneoyM39Sz06vL40+/Y2IXuC1wKe7aeto1Hsk5wA3A2TmLzJzd5d3swT4TmY+1nD9acDhETGNKpCb/BbgROCBzPxpZg4CXwXe0GrFEf7PF1G9UFFfv75JXWZuzcyRfgncru7eup0AD1D95qFJ3Y+HzB5Biz7Tph9/HHh3q5oOdW2NUPdHwLWZ+fN6nR3dbC8iAvi3wJ0N6xLYu/f8Mlr0mRHqTgC+Vk+vBt44rGak53fb/jJSXaf+0qaubX9pU9exvww30QF+HPD9IfMDNAjUsRARfcDpVHvTTdafWr9F3AGszsxGdcBfUz0Rn+uyiQncGxHrojocQRO/BuwE/kdUQzafjogjutzum2nxRGzZwMwfANcDjwNPAE9l5r0NSjcD50TEzIh4MdVe2PEdaoY6JjOfqNvwBDC7i9oD9XbgfzddOSI+FBHfB94C/HnDmguBH2TmxlG074r6bfgtrYaWRvAbwKsi4sGI+GpEnNnlNl8FbM/MbQ3Xvwq4rn5crgfe27BuM3BhPX0xbfrMsOd34/7SbS40qGvbX4bXddtfJjrAo8Wycf9eY0S8BLgLuGrYq96IMvPZzJxP9Wq6MCJ+s8F2XgfsyMx1o2jm2Zn5CqqjPf5xRJzToGYa1dvOT2Tm6cDTVG8ZG4nqB1kXAisbrn801d7NXOBY4IiI+Ped6jJzK9Vby9XA/6EaOhtsWzQJRMQ1VO28vWlNZl6TmcfXNVd0Wr9+QbuGhmE/zCeAXwfmU72gfqxh3TTgaOAs4L8An6v3qpu6hIYv+rU/At5VPy7von7H2MDbqZ4L66iGHn7RaqXRPL/Ho65Tf2lV121/megAP+g/x4+I6VQP2u2Z+YVu6+shiTXA0garnw1cGBH9VMNDiyPitobb+WF9vQP4ItVwUycDwMCQdwefpwr0pl4DPJSZ2xuufz7wvczcmZl7gC8Ar2xSmJk3Z+YrMvMcqrfKTffeALZHxByA+nq/t/xjLSKWAa8D3pL1IGWX7mDYW/4R/DrVC+LGut/0Ag9FxK90KszM7fWOxnPA39Ksz0DVb75QDxV+k+rd4n4fnLZSD539PvDZhtsCWEbVV6DaWWjUzsz8dmb+XmaeQfWC8Z0W7Wn1/O7YX0abCyPVdeovDbbXqL9MdIAf1J/j13sVNwNbM/Ovuqjr2ftJckQcThVc3+5Ul5nvzczezOyj+tu+kpkd91Aj4oiIOHLvNNWHIh2/bZOZPwK+HxEn1IuWAP/YqW6IbvekHgfOiogX14/tEqrxvI4iYnZ9/W+oAqCb7a6iCgHq67u7qO1aRCwF3gNcmJk/7aJu3pDZC2nWZx7OzNmZ2Vf3mwGqD7x+1GB7c4bMvoEGfab298Di+j5+g+rD76ZH0zsf+HZmDjRcH6qdtN+ppxfT8MV7SJ+ZAvw34JPDbh/p+d22vxxALrSs69Rf2tR13V/afsJ5MC5U45+PUL2aXtNF3Z1UbxP3UHXyyxrULKIaotkEbKgvFzSoOxVYX9dtpsWn7Q3u41wafguFaix7Y33Z0uXjMh9YW7f174GjG9a9GNgFvKzLv+sDdUfbDHyG+psMDer+H9WLy0ZgSTf/Z2AmcB/VE/8+4OUN695QT/8c2A58uWHdo1Sf1eztM62+TdKq7q76cdkEfInqg6qu+jEjfBtphO19Bni43t4qYE7DusOA2+q2PgQsbtpO4FbgP3X5/1sErKv/9w8CZzSsu5IqKx4BrqX+JXmn53en/tKmrm1/aVPXtr+0qevYX4Zf/Cm9JBVqoodQJEmjZIBLUqEMcEkqlAEuSYUywCWpUAa4JBXKANekExF90cVhgsexHdfVh/u8ruH6P+m8ljR2Rn1OTKkkETEtnz9CXFP/EejJ+ih90mTjHrgmq6kR8bf1HvC9EXF4PH8igL0Hyj8aICLWRH3A/YiYVR9DhIh4a0SsjIgvUR2Dej9RuS6qk0s8HBF/UC9fRXVIzwf3LmtROzeqEwx8KyI+OGT5SyLivoh4qL7Pi+rlH4whJxGpjzz3J2PxYOnQZIBrspoH/E1mngzspjqwz/8E3pOZp1L9ZPz9De7nt4Flmbl4hNt/n+rwA6dRHdfjuoiYk5kXAj/LzPmZOdKBmv471ZEfz6Q6CcZezwBvyOpokucBHxty/ItlsO94Hm+miyMbSsMZ4JqsvpeZe0/RtY7qKH1HZeZX62UrqE5e0cnqzGx34oNFwJ1ZHcVvO9XJJZoeD/tsnj8I12eGLA/gwxGxiepMN8dRHZO6H9gVEadTHaBsfWbuargtaT+OgWuyGjru/Cyw33kohxjk+Z2R4efkfLrDdro57nUrrQ4m9Bagh+ogTXvqIZ297fo08FbgV4BbDnDbOsS5B65SPAU8GRGvqucvpdpbhuqIfWfU02/q8n6/BvxBVGdc6qHaq/9mw9pvUA2DQBXae72M6kQeeyLiPOBXh9z2RapjyZ9Jdc5LadTcA1dJlgGfrM9a813gbfXy66nOInMp8JUu7/OLVOPkG6n2pt+dDY69XbsSuKP+YPKuIctvB74UEWupDhW677jOmfmLiLgf2J2Zz3bZVukFPJysdBDVH14+BFyczc8hKbXkEIp0kETESVQH+7/P8NZYcA9ch4SIOIUXflME4OeZ+VsNaq+hOgv6UCsz80Nj1T5pNAxwSSqUQyiSVCgDXJIKZYBLUqEMcEkq1P8H7VL5eGtEVjAAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = summarized_limurur_road.plot.bar(y='mean', rot=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 565,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.series.Series"
      ]
     },
     "execution_count": 565,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(limuru_road['speed_kph_mean'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 653,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>quarter</th>\n",
       "      <th>hour_of_day</th>\n",
       "      <th>osm_way_id</th>\n",
       "      <th>speed_kph_mean</th>\n",
       "      <th>speed_kph_stddev</th>\n",
       "      <th>speed_kph_p85</th>\n",
       "      <th>road_name</th>\n",
       "      <th>road_type</th>\n",
       "      <th>one_way</th>\n",
       "      <th>surface</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>120733</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>493736707</td>\n",
       "      <td>10.552</td>\n",
       "      <td>5.751</td>\n",
       "      <td>14.285</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120734</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>493736707</td>\n",
       "      <td>17.014</td>\n",
       "      <td>7.026</td>\n",
       "      <td>20.871</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120735</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>493736707</td>\n",
       "      <td>14.899</td>\n",
       "      <td>8.725</td>\n",
       "      <td>19.602</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120736</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>493736707</td>\n",
       "      <td>12.249</td>\n",
       "      <td>6.613</td>\n",
       "      <td>16.374</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120737</th>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>493736707</td>\n",
       "      <td>11.876</td>\n",
       "      <td>8.679</td>\n",
       "      <td>15.318</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>secondary</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475012</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>16</td>\n",
       "      <td>24027382</td>\n",
       "      <td>16.515</td>\n",
       "      <td>11.103</td>\n",
       "      <td>23.686</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>yes</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475013</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>24027382</td>\n",
       "      <td>20.077</td>\n",
       "      <td>11.561</td>\n",
       "      <td>26.901</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>yes</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475014</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>19</td>\n",
       "      <td>24027382</td>\n",
       "      <td>18.355</td>\n",
       "      <td>10.045</td>\n",
       "      <td>24.562</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>yes</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475015</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>24027382</td>\n",
       "      <td>27.626</td>\n",
       "      <td>12.887</td>\n",
       "      <td>34.199</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>yes</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475016</th>\n",
       "      <td>2019</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>24027382</td>\n",
       "      <td>23.071</td>\n",
       "      <td>14.243</td>\n",
       "      <td>29.264</td>\n",
       "      <td>Limuru Road</td>\n",
       "      <td>NaN</td>\n",
       "      <td>yes</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>54511 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        year  quarter  hour_of_day  osm_way_id  speed_kph_mean  \\\n",
       "120733  2019        1           18   493736707          10.552   \n",
       "120734  2019        1           23   493736707          17.014   \n",
       "120735  2019        1            7   493736707          14.899   \n",
       "120736  2019        1           13   493736707          12.249   \n",
       "120737  2019        1           15   493736707          11.876   \n",
       "...      ...      ...          ...         ...             ...   \n",
       "475012  2019        4           16    24027382          16.515   \n",
       "475013  2019        4           20    24027382          20.077   \n",
       "475014  2019        4           19    24027382          18.355   \n",
       "475015  2019        4            2    24027382          27.626   \n",
       "475016  2019        4            7    24027382          23.071   \n",
       "\n",
       "        speed_kph_stddev  speed_kph_p85    road_name  road_type one_way  \\\n",
       "120733             5.751         14.285  Limuru Road  secondary    None   \n",
       "120734             7.026         20.871  Limuru Road  secondary    None   \n",
       "120735             8.725         19.602  Limuru Road  secondary    None   \n",
       "120736             6.613         16.374  Limuru Road  secondary    None   \n",
       "120737             8.679         15.318  Limuru Road  secondary    None   \n",
       "...                  ...            ...          ...        ...     ...   \n",
       "475012            11.103         23.686  Limuru Road        NaN     yes   \n",
       "475013            11.561         26.901  Limuru Road        NaN     yes   \n",
       "475014            10.045         24.562  Limuru Road        NaN     yes   \n",
       "475015            12.887         34.199  Limuru Road        NaN     yes   \n",
       "475016            14.243         29.264  Limuru Road        NaN     yes   \n",
       "\n",
       "       surface  \n",
       "120733    None  \n",
       "120734    None  \n",
       "120735    None  \n",
       "120736    None  \n",
       "120737    None  \n",
       "...        ...  \n",
       "475012    None  \n",
       "475013    None  \n",
       "475014    None  \n",
       "475015    None  \n",
       "475016    None  \n",
       "\n",
       "[54511 rows x 11 columns]"
      ]
     },
     "execution_count": 653,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "limuru_road"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 656,
   "metadata": {},
   "outputs": [],
   "source": [
    "test2 = limuru_road.iloc[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 674,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "hour_of_day\n",
       "0     54.876354\n",
       "1     56.123364\n",
       "2     55.011245\n",
       "3     53.897695\n",
       "4     56.389502\n",
       "5     54.659931\n",
       "6     54.939487\n",
       "7     55.035752\n",
       "8     55.609877\n",
       "9     54.299261\n",
       "10    54.352182\n",
       "11    54.311060\n",
       "12    54.211613\n",
       "13    53.740330\n",
       "14    53.417497\n",
       "15    52.944950\n",
       "16    52.475341\n",
       "17    50.799031\n",
       "18    49.458942\n",
       "19    45.197005\n",
       "20    47.340058\n",
       "21    49.564313\n",
       "22    51.565086\n",
       "23    53.974620\n",
       "Name: mean, dtype: float64"
      ]
     },
     "execution_count": 674,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "limuru_road.groupby('hour_of_day')['speed_kph_p85'].describe()['mean']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 701,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'iplot' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-701-fa896f9dd944>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     16\u001b[0m \u001b[0mlayout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgo\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mLayout\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbarmode\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"group\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0mfig\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgo\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mFigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlayout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlayout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 18\u001b[0;31m \u001b[0miplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfig\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'iplot' is not defined"
     ]
    }
   ],
   "source": [
    "trace1 = go.Bar(\n",
    "                x = hours,\n",
    "                y = limuru_road.groupby('hour_of_day')['speed_kph_p85'].describe()['mean'],\n",
    "                name = \"Free Flow Speed\",\n",
    "                marker = dict(color = 'rgba(255, 174, 255, 0.5)',\n",
    "                             line=dict(color='rgb(0,0,0)',width=1.5)))\n",
    "\n",
    "trace2 = go.Bar(\n",
    "                x = hours,\n",
    "                y = limuru_road.groupby('hour_of_day')['speed_kph_mean'].describe()['mean'],\n",
    "                name = \"Average Speed\",\n",
    "                marker = dict(color = 'rgba(255, 174, 255, 0.5)',\n",
    "                             line=dict(color='rgb(0,0,0)',width=1.5)))\n",
    "\n",
    "data = [trace1, trace2]\n",
    "layout = go.Layout(barmode = \"group\")\n",
    "fig = go.Figure(data = data, layout = layout)\n",
    "iplot(fig)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 689,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "120733    18\n",
       "120734    23\n",
       "120735     7\n",
       "120736    13\n",
       "120737    15\n",
       "          ..\n",
       "475012    16\n",
       "475013    20\n",
       "475014    19\n",
       "475015     2\n",
       "475016     7\n",
       "Name: hour_of_day, Length: 54511, dtype: int64"
      ]
     },
     "execution_count": 689,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "limuru_road['hour_of_day']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 692,
   "metadata": {},
   "outputs": [],
   "source": [
    "hours = []\n",
    "\n",
    "for hour in limuru_road['hour_of_day']:\n",
    "    if hour not in hours:\n",
    "        hours.append(hour)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 698,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0,\n",
       " 1,\n",
       " 2,\n",
       " 3,\n",
       " 4,\n",
       " 5,\n",
       " 6,\n",
       " 7,\n",
       " 8,\n",
       " 9,\n",
       " 10,\n",
       " 11,\n",
       " 12,\n",
       " 13,\n",
       " 14,\n",
       " 15,\n",
       " 16,\n",
       " 17,\n",
       " 18,\n",
       " 19,\n",
       " 20,\n",
       " 21,\n",
       " 22,\n",
       " 23]"
      ]
     },
     "execution_count": 698,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hours"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 702,
   "metadata": {},
   "outputs": [
    {
     "ename": "ImportError",
     "evalue": "\nThe plotly.plotly module is deprecated,\nplease install the chart-studio package and use the\nchart_studio.plotly module instead. \n",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-702-ce06476b2fd1>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mplotly\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplotly\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0miplot\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/plotly/plotly/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0m_plotly_future_\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0m_chart_studio_error\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0m_chart_studio_error\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"plotly\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/_plotly_future_/__init__.py\u001b[0m in \u001b[0;36m_chart_studio_error\u001b[0;34m(submodule)\u001b[0m\n\u001b[1;32m     47\u001b[0m \u001b[0mchart_studio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0msubmodule\u001b[0m\u001b[0;34m}\u001b[0m \u001b[0mmodule\u001b[0m \u001b[0minstead\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     48\u001b[0m \"\"\".format(\n\u001b[0;32m---> 49\u001b[0;31m             \u001b[0msubmodule\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msubmodule\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     50\u001b[0m         )\n\u001b[1;32m     51\u001b[0m     )\n",
      "\u001b[0;31mImportError\u001b[0m: \nThe plotly.plotly module is deprecated,\nplease install the chart-studio package and use the\nchart_studio.plotly module instead. \n"
     ]
    }
   ],
   "source": [
    "from plotly.plotly import iplot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 680,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Bar({\n",
       "    'marker': {'color': 'rgba(255, 174, 255, 0.5)', 'line': {'color': 'rgb(0,0,0)', 'width': 1.5}},\n",
       "    'name': 'Free Flow Speed',\n",
       "    'x': array([45.69163255, 46.68752862, 45.29005574, 45.04324309, 46.85444183,\n",
       "                45.17946249, 44.95741153, 45.04261   , 45.92163901, 44.90018917,\n",
       "                44.92859908, 44.94412587, 44.81630775, 44.32332616, 44.05370882,\n",
       "                43.42442703, 43.09817849, 41.51639917, 40.34115587, 36.83952603,\n",
       "                38.8179301 , 40.92351571, 42.74299379, 44.85576391]),\n",
       "    'y': array([54.87635415, 56.12336447, 55.01124498, 53.89769512, 56.38950223,\n",
       "                54.65993142, 54.93948729, 55.03575227, 55.6098768 , 54.29926139,\n",
       "                54.35218164, 54.31106003, 54.21161319, 53.74033039, 53.41749719,\n",
       "                52.94495035, 52.47534113, 50.79903065, 49.45894245, 45.19700463,\n",
       "                47.34005798, 49.56431253, 51.56508603, 53.97461992])\n",
       "})"
      ]
     },
     "execution_count": 680,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trace1 = go.Bar(\n",
    "                x = limuru_road.groupby('hour_of_day')['speed_kph_mean'].describe()['mean'],\n",
    "                y = limuru_road.groupby('hour_of_day')['speed_kph_p85'].describe()['mean'],\n",
    "                name = \"Free Flow Speed\",\n",
    "                marker = dict(color = 'rgba(255, 174, 255, 0.5)',\n",
    "                             line=dict(color='rgb(0,0,0)',width=1.5)))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# trace2 = go.Bar(\n",
    "#                 x = test2.hour_of_day,\n",
    "#                 y = test2.speed_kph_mean,\n",
    "#                 name = \"Average Speed\",\n",
    "#                 marker = dict(color = 'rgba(255, 255, 128, 0.5)',\n",
    "#                               line=dict(color='rgb(0,0,0)',width=1.5)),\n",
    "#                 text = test2.road_name)\n",
    "# data = [trace1, trace2]\n",
    "# layout = go.Layout(barmode = \"group\")\n",
    "# fig = go.Figure(data = data, layout = layout)\n",
    "# iplot(fig)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
